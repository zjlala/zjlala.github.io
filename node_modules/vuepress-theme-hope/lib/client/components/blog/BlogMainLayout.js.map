{"version":3,"file":"BlogMainLayout.js","sourceRoot":"","sources":["../../../../src/client/components/blog/BlogMainLayout.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,MAAM,KAAK,CAAC;AAEzC,OAAO,UAAU,MAAM,wCAAwC,CAAC;AAChE,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAC5D,OAAO,WAAW,MAAM,yCAAyC,CAAC;AAClE,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAC5D,OAAO,EAAE,aAAa,EAAE,MAAM,uCAAuC,CAAC;AAMtE,OAAO,yCAAyC,CAAC;AAEjD,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,gBAAgB;IAEtB,KAAK,EAAE,MAaL;IAEF,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrB,MAAM,EAAE,QAAQ,EAAE,GAAG,aAAa,EAAE,CAAC;QAErC,OAAO,GAAY,EAAE,CAAC;YACpB,CAAC,CAAC,QAAQ,CAAC;YACX,CAAC,CACC,UAAU,EACV,EAAE,SAAS,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAC3C;gBACE,GAAG,KAAK;gBACR,eAAe,EAAE,GAAG,EAAE,CACpB,KAAK,CAAC,eAAe,EAAE,EAAE,IAAI,CAAC,CAAC,WAAW,EAAE,EAAE,EAAE,KAAK,CAAC;gBACxD,YAAY,EAAE,CAAC,YAAkC,EAAE,EAAE,CACnD,KAAK,CAAC,YAAY,EAAE,CAAC,YAAY,CAAC;oBAClC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;aACxC,CACF;SACF,CAAC;IACJ,CAAC;CACF,CAAC,CAAC","sourcesContent":["import type { Slot } from \"@vuepress/helper/client\";\nimport type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h } from \"vue\";\n\nimport MainLayout from \"@theme-hope/components/base/MainLayout\";\nimport SkipLink from \"@theme-hope/components/base/SkipLink\";\nimport BloggerInfo from \"@theme-hope/components/blog/BloggerInfo\";\nimport InfoList from \"@theme-hope/components/blog/InfoList\";\nimport { useWindowSize } from \"@theme-hope/composables/useWindowSize\";\nimport type {\n  BloggerInfoSlotData,\n  SidebarItemsSlotData,\n} from \"@theme-hope/typings/slots\";\n\nimport \"../../styles/blog/blog-main-layout.scss\";\n\nexport default defineComponent({\n  name: \"BlogMainLayout\",\n\n  slots: Object as SlotsType<{\n    default: Slot;\n\n    // Nav Screen\n    navScreenTop?: Slot;\n    navScreenBottom?: Slot;\n\n    // Sidebar\n    sidebarItems?: Slot<SidebarItemsSlotData>;\n    sidebarTop?: Slot;\n    sidebarBottom?: Slot;\n\n    bloggerInfo?: Slot<BloggerInfoSlotData>;\n  }>,\n\n  setup(_props, { slots }) {\n    const { isMobile } = useWindowSize();\n\n    return (): VNode[] => [\n      h(SkipLink),\n      h(\n        MainLayout,\n        { noSidebar: !isMobile.value, noToc: true },\n        {\n          ...slots,\n          navScreenBottom: () =>\n            slots.navScreenBottom?.() ?? h(BloggerInfo, {}, slots),\n          sidebarItems: (sidebarItems: SidebarItemsSlotData) =>\n            slots.sidebarItems?.(sidebarItems) ??\n            (isMobile.value ? h(InfoList) : null),\n        },\n      ),\n    ];\n  },\n});\n"]}