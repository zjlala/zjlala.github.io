{"version":3,"file":"AppearanceButton.js","sourceRoot":"","sources":["../../../../src/client/components/appearance/AppearanceButton.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,KAAK,CAAC;AACxD,OAAO,EAAE,gBAAgB,EAAE,MAAM,iBAAiB,CAAC;AAEnD,OAAO,cAAc,MAAM,kDAAkD,CAAC;AAC9E,OAAO,kBAAkB,MAAM,sDAAsD,CAAC;AACtF,OAAO,eAAe,MAAM,mDAAmD,CAAC;AAChF,OAAO,EAAE,sBAAsB,EAAE,MAAM,8CAA8C,CAAC;AACtF,OAAO,sBAAsB,MAAM,0DAA0D,CAAC;AAC9F,OAAO,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AAClE,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAC1D,OAAO,EAAE,QAAQ,EAAE,MAAM,kCAAkC,CAAC;AAE5D,OAAO,gDAAgD,CAAC;AAExD,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,kBAAkB;IAExB,KAAK;QACH,MAAM,KAAK,GAAG,QAAQ,EAAE,CAAC;QACzB,MAAM,EAAE,SAAS,EAAE,GAAG,WAAW,EAAE,CAAC;QACpC,MAAM,EAAE,WAAW,EAAE,GAAG,aAAa,EAAE,CAAC;QACxC,MAAM,MAAM,GAAG,OAAO,EAAE,CAAC;QAEzB,MAAM,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;QAExB,MAAM,gBAAgB,GAAG,QAAQ,CAC/B,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,UAAU,IAAI,WAAW,CAC7D,CAAC;QAEF,MAAM,OAAO,GAAG,QAAQ,CACtB,GAAG,EAAE,CAAC,sBAAsB,IAAI,SAAS,CAAC,KAAK,IAAI,gBAAgB,CAAC,KAAK,CAC1E,CAAC;QAEF,gBAAgB,CAAC,GAAG,EAAE;YACpB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;QAEH,OAAO,GAAiB,EAAE,CACxB,OAAO,CAAC,KAAK;YACX,CAAC,CAAC,CAAC,CACC,KAAK,EACL,EAAE,KAAK,EAAE,4BAA4B,EAAE;YACvC,kCAAkC;YAClC,SAAS,CAAC,KAAK;gBACb,CAAC,gBAAgB,CAAC,KAAK;gBACvB,CAAC,sBAAsB;gBACvB,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC;gBACpB,CAAC,CAAC,6BAA6B;oBAC7B,gBAAgB,CAAC,KAAK;wBACpB,CAAC,SAAS,CAAC,KAAK;wBAChB,CAAC,sBAAsB;wBACzB,CAAC,CAAC,CAAC,CAAC,sBAAsB,CAAC;wBAC3B,CAAC,CAAC,CAAC,CACC,QAAQ,EACR;4BACE,IAAI,EAAE,QAAQ;4BACd,KAAK,EAAE,CAAC,sBAAsB,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,EAAE,CAAC;4BACrD,QAAQ,EAAE,IAAI;4BACd,aAAa,EAAE,IAAI;yBACpB,EACD;4BACE,CAAC,CAAC,cAAc,CAAC;4BACjB,CAAC,CACC,KAAK,EACL,EAAE,KAAK,EAAE,wBAAwB,EAAE,EACnC,CAAC,CAAC,kBAAkB,CAAC,CACtB;yBACF,CACF,CACR;YACH,CAAC,CAAC,IAAI,CAAC;IACb,CAAC;CACF,CAAC,CAAC","sourcesContent":["import { useFullscreen } from \"@vueuse/core\";\nimport type { VNode } from \"vue\";\nimport { computed, defineComponent, h, ref } from \"vue\";\nimport { onContentUpdated } from \"vuepress/client\";\n\nimport AppearanceIcon from \"@theme-hope/components/appearance/AppearanceIcon\";\nimport AppearanceSettings from \"@theme-hope/components/appearance/AppearanceSettings\";\nimport ColorModeSwitch from \"@theme-hope/components/appearance/ColorModeSwitch\";\nimport { hasMultipleThemeColors } from \"@theme-hope/components/appearance/ThemeColor\";\nimport ToggleFullScreenButton from \"@theme-hope/components/appearance/ToggleFullScreenButton\";\nimport { useDarkMode } from \"@theme-hope/composables/useDarkMode\";\nimport { usePure } from \"@theme-hope/composables/usePure\";\nimport { useTheme } from \"@theme-hope/composables/useTheme\";\n\nimport \"../../styles/appearance/appearance-button.scss\";\n\nexport default defineComponent({\n  name: \"AppearanceButton\",\n\n  setup() {\n    const theme = useTheme();\n    const { canToggle } = useDarkMode();\n    const { isSupported } = useFullscreen();\n    const isPure = usePure();\n\n    const open = ref(false);\n\n    const enableFullScreen = computed(\n      () => !isPure.value && theme.value.fullscreen && isSupported,\n    );\n\n    const enabled = computed(\n      () => hasMultipleThemeColors || canToggle.value || enableFullScreen.value,\n    );\n\n    onContentUpdated(() => {\n      open.value = false;\n    });\n\n    return (): VNode | null =>\n      enabled.value\n        ? h(\n            \"div\",\n            { class: \"vp-nav-item hide-in-mobile\" },\n            // Only ColorModeSwitch is enabled\n            canToggle.value &&\n              !enableFullScreen.value &&\n              !hasMultipleThemeColors\n              ? h(ColorModeSwitch)\n              : // Only FullScreen is enabled\n                enableFullScreen.value &&\n                  !canToggle.value &&\n                  !hasMultipleThemeColors\n                ? h(ToggleFullScreenButton)\n                : h(\n                    \"button\",\n                    {\n                      type: \"button\",\n                      class: [\"vp-appearance-button\", { open: open.value }],\n                      tabindex: \"-1\",\n                      \"aria-hidden\": true,\n                    },\n                    [\n                      h(AppearanceIcon),\n                      h(\n                        \"div\",\n                        { class: \"vp-appearance-dropdown\" },\n                        h(AppearanceSettings),\n                      ),\n                    ],\n                  ),\n          )\n        : null;\n  },\n});\n"]}