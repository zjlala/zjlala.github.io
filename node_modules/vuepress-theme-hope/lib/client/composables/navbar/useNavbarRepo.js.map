{"version":3,"file":"useNavbarRepo.js","sourceRoot":"","sources":["../../../../src/client/composables/navbar/useNavbarRepo.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAE/B,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAE1E,OAAO,EAAE,cAAc,EAAE,MAAM,kCAAkC,CAAC;AAQlE;;GAEG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,GAAmC,EAAE;IAChE,MAAM,WAAW,GAAG,cAAc,EAAE,CAAC;IAErC,MAAM,IAAI,GAAG,QAAQ,CAAC,GAAG,EAAE,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAEpD,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAChD,CAAC;IAEF,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE,CAC7B,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAChD,CAAC;IAEF,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,EAAE,CAC9B,QAAQ,CAAC,KAAK;QACZ,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,IAAI,QAAQ,CAAC,KAAK,IAAI,QAAQ,CAAC;QAC7D,CAAC,CAAC,IAAI,CACT,CAAC;IAEF,OAAO,QAAQ,CAAC,GAAG,EAAE;QACnB,IACE,CAAC,QAAQ,CAAC,KAAK;YACf,CAAC,SAAS,CAAC,KAAK;YAChB,WAAW,CAAC,KAAK,CAAC,WAAW,KAAK,KAAK;YAEvC,OAAO,IAAI,CAAC;QAEd,OAAO;YACL,IAAI,EAAE,QAAQ,CAAC,KAAK,IAAI,QAAQ;YAChC,KAAK,EAAE,SAAS,CAAC,KAAK;YACtB,IAAI,EAAE,QAAQ,CAAC,KAAK;SACrB,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC","sourcesContent":["import type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\nimport type { RepoType } from \"vuepress-shared/client\";\nimport { resolveRepoLink, resolveRepoType } from \"vuepress-shared/client\";\n\nimport { useThemeLocale } from \"@theme-hope/composables/useTheme\";\n\nexport interface RepoConfig {\n  type: Exclude<RepoType, null> | \"Source\";\n  label: string;\n  link: string;\n}\n\n/**\n * Get navbar config of repository link\n */\nexport const useNavbarRepo = (): ComputedRef<RepoConfig | null> => {\n  const themeLocale = useThemeLocale();\n\n  const repo = computed(() => themeLocale.value.repo);\n\n  const repoLink = computed(() =>\n    repo.value ? resolveRepoLink(repo.value) : null,\n  );\n\n  const repoType = computed(() =>\n    repo.value ? resolveRepoType(repo.value) : null,\n  );\n\n  const repoLabel = computed(() =>\n    repoLink.value\n      ? (themeLocale.value.repoLabel ?? repoType.value ?? \"Source\")\n      : null,\n  );\n\n  return computed(() => {\n    if (\n      !repoLink.value ||\n      !repoLabel.value ||\n      themeLocale.value.repoDisplay === false\n    )\n      return null;\n\n    return {\n      type: repoType.value ?? \"Source\",\n      label: repoLabel.value,\n      link: repoLink.value,\n    };\n  });\n};\n"]}