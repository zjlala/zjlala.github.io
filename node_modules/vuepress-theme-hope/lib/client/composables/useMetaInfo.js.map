{"version":3,"file":"useMetaInfo.js","sourceRoot":"","sources":["../../../src/client/composables/useMetaInfo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAElD,OAAO,EAAE,QAAQ,EAAE,MAAM,KAAK,CAAC;AAE/B,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAY1D,MAAM,CAAC,MAAM,WAAW,GAAG,GAAa,EAAE;IACxC,MAAM,EAAE,WAAW,EAAE,WAAW,EAAE,GAAG,OAAO,EAAE,CAAC;IAE/C,MAAM,SAAS,GAAG,QAAQ,CACxB,GAAG,EAAE,CACH,WAAW,CAAC,KAAK,CAAC,SAAS;QAC3B,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CACtE,CAAC;IAEF,MAAM,YAAY,GAAG,QAAQ,CAAC,GAAG,EAAE;QACjC,MAAM,EAAE,YAAY,EAAE,IAAI,EAAE,GAAG,WAAW,CAAC,KAAK,CAAC;QAEjD,OAAO,OAAO,CAAC,YAAY,CAAC;YAC1B,CAAC,CAAE,IAA4B;gBAC7B,CAAC,CAAC,KAAK;gBACP,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC;YAC5C,CAAC,CAAC,CAAC,YAAY;gBACX,CAAE,IAA4B;oBAC5B,CAAC,CAAC,KAAK;oBACP,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;IAEH,MAAM,WAAW,GAAG,QAAQ,CAC1B,GAAG,EAAE,CACH,WAAW,CAAC,KAAK,CAAC,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CACzE,CAAC;IAEF,OAAO;QACL,SAAS;QACT,YAAY;QACZ,WAAW;KACZ,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { isArray } from \"@vuepress/helper/client\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport { useData } from \"@theme-hope/composables/useData\";\n\nexport interface MetaInfo {\n  /** Whether to show \"changelog\" or not */\n  changelog: ComputedRef<boolean>;\n\n  /** Whether to show \"Contributors\" or not */\n  contributors: ComputedRef<\"content\" | \"meta\" | boolean>;\n  /** Whether to show \"Last updated\" or not */\n  lastUpdated: ComputedRef<boolean>;\n}\n\nexport const useMetaInfo = (): MetaInfo => {\n  const { frontmatter, themeLocale } = useData();\n\n  const changelog = computed(\n    () =>\n      frontmatter.value.changelog ??\n      ((themeLocale.value.changelog ?? false) && !frontmatter.value.home),\n  );\n\n  const contributors = computed(() => {\n    const { contributors, home } = frontmatter.value;\n\n    return isArray(contributors)\n      ? (home as boolean | undefined)\n        ? false\n        : (themeLocale.value.contributors ?? true)\n      : (contributors ??\n          ((home as boolean | undefined)\n            ? false\n            : (themeLocale.value.contributors ?? true)));\n  });\n\n  const lastUpdated = computed(\n    () =>\n      frontmatter.value.lastUpdated ?? themeLocale.value.lastUpdated ?? true,\n  );\n\n  return {\n    changelog,\n    contributors,\n    lastUpdated,\n  };\n};\n"]}