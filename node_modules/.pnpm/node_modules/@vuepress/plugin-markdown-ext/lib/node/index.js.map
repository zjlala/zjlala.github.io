{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/markdown-it-plugins/utils.ts","../../src/node/markdown-it-plugins/component.ts","../../src/node/markdown-it-plugins/vPre.ts","../../src/node/prepreClientConfigFile.ts","../../src/node/markdownExtPlugin.ts"],"sourcesContent":["import { Logger, ensureEndingSlash } from '@vuepress/helper'\nimport { getDirname, path } from 'vuepress/utils'\n\nconst __dirname = import.meta.dirname || getDirname(import.meta.url)\n\nexport const PLUGIN_NAME = '@vuepress/plugin-markdown-ext'\n\nexport const logger = new Logger(PLUGIN_NAME)\n\nexport const CLIENT_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, '../client'),\n)\n","/**\n * Stringify prop data for Vue components\n *\n * 为 Vue 组件字符化属性数据\n *\n * @description Single quote will break @vue/compiler-sfc\n *\n * 单引号会破坏 @vue/compiler-sfc\n *\n * @param data - Data to stringify / 要字符化的数据\n * @returns Stringified data / 字符化后的数据\n */\n// Single quote will break @vue/compiler-sfc\nexport const stringifyProp = (data: unknown): string =>\n  JSON.stringify(data).replace(/'/g, '&#39')\n","import { load } from 'js-yaml'\nimport type { Options, PluginSimple } from 'markdown-it'\nimport type { RenderRule } from 'markdown-it/lib/renderer.mjs'\nimport type Token from 'markdown-it/lib/token.mjs'\nimport type { MarkdownEnv } from 'vuepress/markdown'\n\nimport { logger } from '../utils.js'\nimport { stringifyProp } from './utils.js'\n\n/**\n * Get component render function\n *\n * 获取组件渲染函数\n *\n * @param name - Component name / 组件名称\n * @returns Render function / 渲染函数\n */\nconst getComponentRender =\n  (name: string): RenderRule =>\n  (\n    tokens: Token[],\n    index: number,\n    _options: Options,\n    { filePathRelative }: MarkdownEnv,\n  ): string => {\n    const token = tokens[index]\n    const { content } = token\n\n    let config: unknown = null\n\n    if (content.trim().startsWith('{'))\n      try {\n        config = JSON.parse(content) as unknown\n      } catch {\n        // Do nothing\n      }\n    else\n      try {\n        config = load(content)\n      } catch {\n        // Do nothing\n      }\n\n    if (config) return `<${name} v-bind='${stringifyProp(config)}' />`\n\n    logger.error(\n      `Invalid ${name} config${\n        filePathRelative ? ` found in ${filePathRelative}` : ''\n      }:\n${content}\n`,\n    )\n\n    return ''\n  }\n\n/**\n * Component fence support plugin\n *\n * 组件代码块支持插件\n */\nexport const component: PluginSimple = (md) => {\n  // Handle ```component  blocks\n  const { fence } = md.renderer.rules\n\n  md.renderer.rules.fence = (...args): string => {\n    const [tokens, index] = args\n    const { info } = tokens[index]\n\n    const [fenceName, componentName] = info.split(' ', 2)\n\n    if (fenceName === 'component') {\n      const render = getComponentRender(componentName)\n\n      return render(...args)\n    }\n\n    return fence!(...args)\n  }\n}\n","import { container } from '@mdit/plugin-container'\nimport type { PluginSimple } from 'markdown-it'\n\n/**\n * v-pre container support plugin\n *\n * v-pre 容器支持插件\n */\nexport const vPre: PluginSimple = (md) => {\n  container(md, {\n    name: 'v-pre',\n    openRender: () => `<div v-pre>\\n`,\n    closeRender: () => '</div>\\n',\n  })\n}\n","import type { App } from 'vuepress'\nimport { CLIENT_FOLDER } from './utils.js'\n\nexport const prepareClientConfigFile = (\n  app: App,\n  { gfm, footnote, tasklist }: Record<string, unknown>,\n): Promise<string> =>\n  app.writeTemp(\n    `markdown-ext/config.js`,\n    `\\\n    ${(footnote ?? gfm) ? `import \"${CLIENT_FOLDER}styles/footnote.css\"\\n` : ''}\\\n    ${(tasklist ?? gfm) ? `import \"${CLIENT_FOLDER}styles/tasklist.css\"\\n` : ''}\\\n`,\n  )\n","import { footnote as footnotePlugin } from '@mdit/plugin-footnote'\nimport { tasklist as tasklistPlugin } from '@mdit/plugin-tasklist'\nimport type { Plugin } from 'vuepress/core'\nimport { isPlainObject } from 'vuepress/shared'\n\nimport {\n  component as componentPlugin,\n  vPre as vPrePlugin,\n} from './markdown-it-plugins/index.js'\nimport type { MarkdownExtPluginOptions } from './options.js'\nimport { prepareClientConfigFile } from './prepreClientConfigFile.js'\nimport { PLUGIN_NAME } from './utils.js'\n\n/**\n * Markdown extensions plugin\n *\n * Markdown 扩展插件\n *\n * @param options - Plugin options / 插件选项\n * @returns VuePress plugin / VuePress 插件\n *\n * @example\n * ```ts\n * import { markdownExtPlugin } from '@vuepress/plugin-markdown-ext'\n *\n * export default {\n *   plugins: [\n *     markdownExtPlugin({\n *       gfm: true,\n *       component: true,\n *       vPre: true,\n *     }),\n *   ],\n * }\n * ```\n */\nexport const markdownExtPlugin = ({\n  gfm,\n  breaks,\n  linkify,\n  footnote,\n  tasklist,\n  component,\n  vPre,\n}: MarkdownExtPluginOptions): Plugin => ({\n  name: PLUGIN_NAME,\n\n  extendsMarkdown: (md) => {\n    // Behavior\n    if (breaks ?? gfm) md.options.breaks = true\n    if (linkify ?? gfm) md.options.linkify = true\n\n    if (footnote ?? gfm) md.use(footnotePlugin)\n    if (tasklist ?? gfm)\n      md.use(tasklistPlugin, [isPlainObject(tasklist) ? tasklist : {}])\n    if (component) md.use(componentPlugin)\n    if (vPre) md.use(vPrePlugin)\n  },\n\n  clientConfigFile: (app) =>\n    prepareClientConfigFile(app, {\n      gfm,\n      footnote,\n      tasklist,\n    }),\n})\n"],"names":["__dirname","getDirname","PLUGIN_NAME","logger","Logger","CLIENT_FOLDER","ensureEndingSlash","path","stringifyProp","data","getComponentRender","name","tokens","index","_options","filePathRelative","token","content","config","load","component","md","fence","args","info","fenceName","componentName","vPre","container","prepareClientConfigFile","app","gfm","footnote","tasklist","markdownExtPlugin","breaks","linkify","footnotePlugin","tasklistPlugin","isPlainObject","componentPlugin","vPrePlugin"],"mappings":"2VAGA,MAAMA,EAAY,YAAY,SAAWC,EAAW,YAAY,GAAG,EAEtDC,EAAc,gCAEdC,EAAS,IAAIC,EAAOF,CAAW,EAE/BG,EAAgBC,EAC3BC,EAAK,QAAQP,EAAW,WAAW,CACrC,ECEaQ,EAAiBC,GAC5B,KAAK,UAAUA,CAAI,EAAE,QAAQ,KAAM,MAAM,ECGrCC,EACHC,GACD,CACEC,EACAC,EACAC,EACA,CAAE,iBAAAC,CAAiB,IACR,CACX,MAAMC,EAAQJ,EAAOC,CAAK,EACpB,CAAE,QAAAI,CAAQ,EAAID,EAEpB,IAAIE,EAAkB,KAEtB,GAAID,EAAQ,OAAO,WAAW,GAAG,EAC/B,GAAI,CACFC,EAAS,KAAK,MAAMD,CAAO,CAC7B,MAAQ,CAER,KAEA,IAAI,CACFC,EAASC,EAAKF,CAAO,CACvB,MAAQ,CAER,CAEF,OAAIC,EAAe,IAAIP,CAAI,YAAYH,EAAcU,CAAM,CAAC,QAE5Df,EAAO,MACL,WAAWQ,CAAI,UACbI,EAAmB,aAAaA,CAAgB,GAAK,EACvD;AAAA,EACJE,CAAO;AAAA,CAEL,EAEO,GACT,EAOWG,EAA2BC,GAAO,CAE7C,KAAM,CAAE,MAAAC,CAAM,EAAID,EAAG,SAAS,MAE9BA,EAAG,SAAS,MAAM,MAAQ,IAAIE,IAAiB,CAC7C,KAAM,CAACX,EAAQC,CAAK,EAAIU,EAClB,CAAE,KAAAC,CAAK,EAAIZ,EAAOC,CAAK,EAEvB,CAACY,EAAWC,CAAa,EAAIF,EAAK,MAAM,IAAK,CAAC,EAEpD,OAAIC,IAAc,YACDf,EAAmBgB,CAAa,EAEjC,GAAGH,CAAI,EAGhBD,EAAO,GAAGC,CAAI,CACvB,CACF,ECvEaI,EAAsBN,GAAO,CACxCO,EAAUP,EAAI,CACZ,KAAM,QACN,WAAY,IAAM;AAAA,EAClB,YAAa,IAAM;AAAA,CACrB,CAAC,CACH,ECXaQ,EAA0B,CACrCC,EACA,CAAE,IAAAC,EAAK,SAAAC,EAAU,SAAAC,CAAS,IAE1BH,EAAI,UACF,yBACA,OACGE,GAAYD,EAAO,WAAW1B,CAAa;AAAA,EAA2B,EAAE,OACxE4B,GAAYF,EAAO,WAAW1B,CAAa;AAAA,EAA2B,EAAE,EAE7E,ECuBW6B,EAAoB,CAAC,CAChC,IAAAH,EACA,OAAAI,EACA,QAAAC,EACA,SAAAJ,EACA,SAAAC,EACA,UAAAb,EACA,KAAAO,CACF,KAAyC,CACvC,KAAMzB,EAEN,gBAAkBmB,GAAO,EAEnBc,GAAUJ,KAAKV,EAAG,QAAQ,OAAS,KACnCe,GAAWL,KAAKV,EAAG,QAAQ,QAAU,KAErCW,GAAYD,IAAKV,EAAG,IAAIgB,CAAc,GACtCJ,GAAYF,IACdV,EAAG,IAAIiB,EAAgB,CAACC,EAAcN,CAAQ,EAAIA,EAAW,CAAA,CAAE,CAAC,EAC9Db,GAAWC,EAAG,IAAImB,CAAe,EACjCb,GAAMN,EAAG,IAAIoB,CAAU,CAC7B,EAEA,iBAAmBX,GACjBD,EAAwBC,EAAK,CAC3B,IAAAC,EACA,SAAAC,EACA,SAAAC,CACF,CAAC,CACL"}