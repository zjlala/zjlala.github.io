{"version":3,"file":"usePhotoSwipe-w7wkUXvx.js","sources":["../../src/client/helpers/photo-swipe.ts","../../src/client/utils/images.ts","../../src/client/utils/loadingIcon.ts","../../src/client/utils/setupPhotoSwipe.ts","../../src/client/composables/usePhotoSwipe.ts"],"sourcesContent":["import { isFunction } from '@vuepress/helper/client'\nimport { watchImmediate } from '@vueuse/core'\nimport type { PhotoSwipeOptions as OriginalPhotoSwipeOptions } from 'photoswipe'\nimport type { App, InjectionKey, MaybeRefOrGetter, Ref } from 'vue'\nimport { computed, inject, isRef, ref } from 'vue'\n\n/**\n * PhotoSwipe options for VuePress\n *\n * VuePress 中的 PhotoSwipe 选项\n */\nexport type PhotoSwipeOptions = Omit<\n  OriginalPhotoSwipeOptions,\n  // These are handled internally\n  'dataSource' | 'index'\n>\n\n/**\n * PhotoSwipe options ref\n *\n * PhotoSwipe 选项响应式引用\n */\nexport type PhotoSwipeOptionsRef = Ref<PhotoSwipeOptions>\n\ndeclare const __VUEPRESS_DEV__: boolean\n\nconst photoswipeOptions: PhotoSwipeOptionsRef = ref({})\n\nconst photoswipeSymbol: InjectionKey<PhotoSwipeOptionsRef> = Symbol(\n  __VUEPRESS_DEV__ ? 'photoswipe' : '',\n)\n\n/**\n * Define PhotoSwipe config\n *\n * 定义 PhotoSwipe 配置\n *\n * @param options - PhotoSwipe options / PhotoSwipe 选项\n *\n * @example\n * ```ts\n * import { definePhotoSwipeConfig } from '@vuepress/plugin-photo-swipe/client'\n *\n * definePhotoSwipeConfig({\n *   bgOpacity: 0.8,\n *   spacing: 0.1,\n * })\n * ```\n */\nexport const definePhotoSwipeConfig = (\n  options: MaybeRefOrGetter<PhotoSwipeOptions>,\n): void => {\n  if (isRef(options)) {\n    watchImmediate(\n      () => options.value,\n      (value) => {\n        photoswipeOptions.value = value\n      },\n    )\n  } else if (isFunction(options)) {\n    watchImmediate(computed(options), (value) => {\n      photoswipeOptions.value = value\n    })\n  } else {\n    photoswipeOptions.value = options\n  }\n}\n\n/**\n * Get PhotoSwipe options\n *\n * 获取 PhotoSwipe 选项\n */\nexport const usePhotoSwipeOptions = (): PhotoSwipeOptionsRef =>\n  inject(photoswipeSymbol)!\n\nexport const injectPhotoSwipeConfig = (app: App): void => {\n  app.provide(photoswipeSymbol, photoswipeOptions)\n}\n","import type { SlideData } from 'photoswipe'\n\nexport const resolveImageInfoFromElement = (\n  imageElement: HTMLImageElement,\n): Promise<SlideData> =>\n  new Promise<SlideData>((resolve, reject) => {\n    if (imageElement.complete) {\n      resolve({\n        type: 'image',\n        element: imageElement,\n        src: imageElement.src,\n        width: imageElement.naturalWidth,\n        height: imageElement.naturalHeight,\n        alt: imageElement.alt,\n        msrc: imageElement.src,\n      })\n    } else {\n      imageElement.onload = (): void => {\n        resolve(resolveImageInfoFromElement(imageElement))\n      }\n      imageElement.onerror = (): void => {\n        reject()\n      }\n    }\n  })\n\nexport const resolveImageInfoFromLink = (\n  imageLink: string,\n): Promise<SlideData> =>\n  new Promise<SlideData>((resolve, reject) => {\n    const el = new Image()\n\n    el.src = imageLink\n    el.onload = (): void => {\n      resolve(resolveImageInfoFromElement(el))\n    }\n    el.onerror = (): void => {\n      reject()\n    }\n  })\n","export const LOADING_ICON =\n  '<div class=\"photo-swipe-loading\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" preserveAspectRatio=\"xMidYMid\" viewBox=\"25 25 50 50\"><animateTransform attributeName=\"transform\" type=\"rotate\" dur=\"2s\" keyTimes=\"0;1\" repeatCount=\"indefinite\" values=\"0;360\"></animateTransform><circle cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"4\" stroke-linecap=\"round\"><animate attributeName=\"stroke-dasharray\" dur=\"1.5s\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" values=\"1,200;90,200;1,200\"></animate><animate attributeName=\"stroke-dashoffset\" dur=\"1.5s\" keyTimes=\"0;0.5;1\" repeatCount=\"indefinite\" values=\"0;-35px;-125px\"></animate></circle></svg></div>'\n","import { useFullscreen } from '@vueuse/core'\nimport type PhotoSwipe from 'photoswipe'\n\nexport const setupPhotoSwipe = (\n  photoSwipe: PhotoSwipe,\n  {\n    download = true,\n    fullscreen = true,\n  }: { download?: boolean; fullscreen?: boolean } = {},\n): void => {\n  photoSwipe.on('uiRegister', () => {\n    // add bullets indicator\n    photoSwipe.ui!.registerElement({\n      name: 'bulletsIndicator',\n      className: 'photo-swipe-bullets-indicator',\n      appendTo: 'wrapper',\n      onInit: (el) => {\n        const bullets: HTMLElement[] = []\n        let prevIndex = -1\n\n        for (let i = 0; i < photoSwipe.getNumItems(); i++) {\n          const bullet = document.createElement('div')\n\n          bullet.className = 'photo-swipe-bullet'\n          bullet.onclick = (event: Event): void => {\n            photoSwipe.goTo(bullets.indexOf(event.target as HTMLElement))\n          }\n          bullets.push(bullet)\n          el.appendChild(bullet)\n        }\n\n        photoSwipe.on('change', () => {\n          if (prevIndex >= 0) bullets[prevIndex].classList.remove('active')\n\n          bullets[photoSwipe.currIndex].classList.add('active')\n          prevIndex = photoSwipe.currIndex\n        })\n      },\n    })\n\n    // add fullscreen button if supported\n    if (fullscreen) {\n      const { isSupported, toggle } = useFullscreen()\n\n      if (isSupported.value)\n        photoSwipe.ui!.registerElement({\n          name: 'fullscreen',\n          order: 7,\n          isButton: true,\n\n          html: '<svg class=\"pswp__icn\" viewBox=\"0 0 1024 1024\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z\"/></svg>',\n\n          onClick: () => {\n            void toggle()\n          },\n        })\n    }\n\n    if (download) {\n      // add download button\n      photoSwipe.ui!.registerElement({\n        name: 'download',\n        order: 8,\n        isButton: true,\n        tagName: 'a',\n\n        // SVG with outline\n        html: {\n          isCustomSVG: true,\n          inner:\n            '<path d=\"M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14\" id=\"pswp__icn-download\"/>',\n          outlineID: 'pswp__icn-download',\n        },\n\n        onInit: (el) => {\n          el.setAttribute('download', '')\n          el.setAttribute('target', '_blank')\n          el.setAttribute('rel', 'noopener')\n\n          photoSwipe.on('change', () => {\n            el.setAttribute('href', photoSwipe.currSlide!.data.src!)\n          })\n        },\n      })\n    }\n  })\n}\n","import { isArray, isString, useLocale } from '@vuepress/helper/client'\nimport { useEventListener } from '@vueuse/core'\nimport type PhotoSwipe from 'photoswipe'\nimport type { SlideData } from 'photoswipe'\nimport { computed, onMounted, onUnmounted } from 'vue'\nimport { useFrontmatter } from 'vuepress/client'\nimport type { PhotoSwipePluginLocaleData } from '../../shared/index.js'\nimport { usePhotoSwipeOptions } from '../helpers/index.js'\nimport type { PhotoSwipeBehaviorOptions } from '../typings.js'\nimport {\n  LOADING_ICON,\n  resolveImageInfoFromElement,\n  setupPhotoSwipe,\n} from '../utils/index.js'\n\nimport 'photoswipe/dist/photoswipe.css'\nimport '../styles/photo-swipe.css'\n\n/**\n * Options for usePhotoSwipe composable\n *\n * usePhotoSwipe 组合式函数的选项\n */\nexport interface UsePhotoSwipeOptions extends PhotoSwipeBehaviorOptions {\n  /**\n   * Image selector\n   *\n   * 图片选择器\n   */\n  selector: string[] | string\n\n  /**\n   * Locale data\n   *\n   * 多语言数据\n   */\n  locales: Record<\n    string,\n    Record<`${keyof PhotoSwipePluginLocaleData}Title`, string>\n  >\n}\n\n/**\n * Use PhotoSwipe composable\n *\n * 使用 PhotoSwipe 组合式函数\n *\n * @param options - PhotoSwipe options / PhotoSwipe 选项\n *\n * @example\n * ```ts\n * import { usePhotoSwipe } from '@vuepress/plugin-photo-swipe/client'\n *\n * usePhotoSwipe({\n *   selector: 'img',\n *   locales: {\n *     '/': {\n *       closeTitle: 'Close',\n *       downloadTitle: 'Download',\n *     },\n *   },\n *   download: true,\n *   fullscreen: true,\n * })\n * ```\n */\nexport const usePhotoSwipe = ({\n  selector,\n  locales,\n  download = true,\n  fullscreen = true,\n  scrollToClose = true,\n}: UsePhotoSwipeOptions): void => {\n  const photoSwipeOptions = usePhotoSwipeOptions()\n  const locale = useLocale(locales)\n  const frontmatter = useFrontmatter<{ photoSwipe: boolean | string }>()\n\n  const imageSelector = computed(() => {\n    const { photoSwipe } = frontmatter.value\n\n    return photoSwipe === false\n      ? null\n      : isString(photoSwipe)\n        ? photoSwipe\n        : isArray(selector)\n          ? selector.join(', ')\n          : selector\n  })\n\n  const options = computed(() => ({\n    ...photoSwipeOptions.value,\n    ...locale.value,\n    download,\n    fullscreen,\n    scrollToClose,\n  }))\n\n  let photoSwipeLoader: Promise<typeof PhotoSwipe> | null = null\n  let photoSwipeId = 0\n  let photoSwipe: PhotoSwipe | null = null\n\n  const initPhotoSwipe = async (event: MouseEvent): Promise<void> => {\n    const el = event.target as HTMLImageElement\n\n    if (\n      // not enabled\n      !imageSelector.value ||\n      // Photoswipe is not being loaded\n      !photoSwipeLoader ||\n      // not an matched element\n      !el.matches(imageSelector.value)\n    )\n      return\n\n    // there is an active instance\n    if (photoSwipeId !== 0) photoSwipe!.destroy()\n\n    const id = Date.now()\n    const PhotoSwipeConstructor = await photoSwipeLoader\n\n    const images = Array.from(\n      document.querySelectorAll<HTMLImageElement>(imageSelector.value),\n    )\n    const dataSource = images.map<SlideData>((image) => ({\n      html: LOADING_ICON,\n      element: image,\n      msrc: image.src,\n    }))\n\n    const index = images.findIndex((image) => image === el)\n\n    photoSwipe = new PhotoSwipeConstructor({\n      preloaderDelay: 0,\n      showHideAnimationType: 'zoom',\n      ...options.value,\n      dataSource,\n      index,\n      ...(scrollToClose\n        ? { closeOnVerticalDrag: true, wheelToZoom: false }\n        : {}),\n    })\n    photoSwipeId = id\n\n    setupPhotoSwipe(photoSwipe, { download, fullscreen })\n\n    photoSwipe.init()\n\n    photoSwipe.on('destroy', () => {\n      photoSwipe = null\n      photoSwipeId = 0\n    })\n\n    void images.map((image, imageIndex) =>\n      resolveImageInfoFromElement(image).then((data) => {\n        if (photoSwipeId !== id) return\n        dataSource.splice(imageIndex, 1, data)\n        photoSwipe?.refreshSlideContent(imageIndex)\n      }),\n    )\n  }\n\n  useEventListener('click', initPhotoSwipe, { passive: true })\n  useEventListener('wheel', () => {\n    if (options.value.scrollToClose) photoSwipe?.close()\n  })\n\n  onMounted(() => {\n    if (__VUEPRESS_SSR__) return\n\n    const rIC =\n      'requestIdleCallback' in window ? window.requestIdleCallback : setTimeout\n\n    rIC(() => {\n      photoSwipeLoader = import(\n        /* webpackChunkName: \"photo-swipe\" */ 'photoswipe'\n      ).then(({ default: _PhotoSwipe }) => {\n        return _PhotoSwipe\n      })\n    })\n  })\n\n  onUnmounted(() => {\n    photoSwipe?.destroy()\n  })\n}\n"],"names":["photoswipeOptions","ref","photoswipeSymbol","definePhotoSwipeConfig","options","isRef","watchImmediate","value","isFunction","computed","usePhotoSwipeOptions","inject","injectPhotoSwipeConfig","app","resolveImageInfoFromElement","imageElement","resolve","reject","resolveImageInfoFromLink","imageLink","el","LOADING_ICON","setupPhotoSwipe","photoSwipe","download","fullscreen","bullets","prevIndex","i","bullet","event","isSupported","toggle","useFullscreen","usePhotoSwipe","selector","locales","scrollToClose","photoSwipeOptions","locale","useLocale","frontmatter","useFrontmatter","imageSelector","isString","isArray","photoSwipeLoader","photoSwipeId","useEventListener","id","PhotoSwipeConstructor","images","dataSource","image","index","imageIndex","data","onMounted","_PhotoSwipe","onUnmounted"],"mappings":"8YA0BA,MAAMA,EAA0CC,EAAI,EAAE,EAEhDC,EAAuD,OAC3D,iBAAmB,aAAe,EACpC,EAmBaC,EACXC,GACS,CACLC,EAAMD,CAAO,EACfE,EACE,IAAMF,EAAQ,MACbG,GAAU,CACTP,EAAkB,MAAQO,CAC5B,CACF,EACSC,EAAWJ,CAAO,EAC3BE,EAAeG,EAASL,CAAO,EAAIG,GAAU,CAC3CP,EAAkB,MAAQO,CAC5B,CAAC,EAEDP,EAAkB,MAAQI,CAE9B,EAOaM,EAAuB,IAClCC,EAAOT,CAAgB,EAEZU,EAA0BC,GAAmB,CACxDA,EAAI,QAAQX,EAAkBF,CAAiB,CACjD,EC5Eac,EACXC,GAEA,IAAI,QAAmB,CAACC,EAASC,IAAW,CACtCF,EAAa,SACfC,EAAQ,CACN,KAAM,QACN,QAASD,EACT,IAAKA,EAAa,IAClB,MAAOA,EAAa,aACpB,OAAQA,EAAa,cACrB,IAAKA,EAAa,IAClB,KAAMA,EAAa,GACrB,CAAC,GAEDA,EAAa,OAAS,IAAY,CAChCC,EAAQF,EAA4BC,CAAY,CAAC,CACnD,EACAA,EAAa,QAAU,IAAY,CACjCE,GACF,EAEJ,CAAC,EAEUC,EACXC,GAEA,IAAI,QAAmB,CAACH,EAASC,IAAW,CAC1C,MAAMG,EAAK,IAAI,MAEfA,EAAG,IAAMD,EACTC,EAAG,OAAS,IAAY,CACtBJ,EAAQF,EAA4BM,CAAE,CAAC,CACzC,EACAA,EAAG,QAAU,IAAY,CACvBH,EAAAA,CACF,CACF,CAAC,ECvCUI,EACX,8qBCEWC,EAAkB,CAC7BC,EACA,CACE,SAAAC,EAAW,GACX,WAAAC,EAAa,EACf,EAAkD,CAAA,IACzC,CACTF,EAAW,GAAG,aAAc,IAAM,CA+BhC,GA7BAA,EAAW,GAAI,gBAAgB,CAC7B,KAAM,mBACN,UAAW,gCACX,SAAU,UACV,OAASH,GAAO,CACd,MAAMM,EAAyB,GAC/B,IAAIC,EAAY,GAEhB,QAASC,EAAI,EAAGA,EAAIL,EAAW,YAAA,EAAeK,IAAK,CACjD,MAAMC,EAAS,SAAS,cAAc,KAAK,EAE3CA,EAAO,UAAY,qBACnBA,EAAO,QAAWC,GAAuB,CACvCP,EAAW,KAAKG,EAAQ,QAAQI,EAAM,MAAqB,CAAC,CAC9D,EACAJ,EAAQ,KAAKG,CAAM,EACnBT,EAAG,YAAYS,CAAM,CACvB,CAEAN,EAAW,GAAG,SAAU,IAAM,CACxBI,GAAa,GAAGD,EAAQC,CAAS,EAAE,UAAU,OAAO,QAAQ,EAEhED,EAAQH,EAAW,SAAS,EAAE,UAAU,IAAI,QAAQ,EACpDI,EAAYJ,EAAW,SACzB,CAAC,CACH,CACF,CAAC,EAGGE,EAAY,CACd,KAAM,CAAE,YAAAM,EAAa,OAAAC,CAAO,EAAIC,EAAAA,EAE5BF,EAAY,OACdR,EAAW,GAAI,gBAAgB,CAC7B,KAAM,aACN,MAAO,EACP,SAAU,GAEV,KAAM,8WAEN,QAAS,IAAM,CACRS,GACP,CACF,CAAC,CACL,CAEIR,GAEFD,EAAW,GAAI,gBAAgB,CAC7B,KAAM,WACN,MAAO,EACP,SAAU,GACV,QAAS,IAGT,KAAM,CACJ,YAAa,GACb,MACE,sHACF,UAAW,oBACb,EAEA,OAASH,GAAO,CACdA,EAAG,aAAa,WAAY,EAAE,EAC9BA,EAAG,aAAa,SAAU,QAAQ,EAClCA,EAAG,aAAa,MAAO,UAAU,EAEjCG,EAAW,GAAG,SAAU,IAAM,CAC5BH,EAAG,aAAa,OAAQG,EAAW,UAAW,KAAK,GAAI,CACzD,CAAC,CACH,CACF,CAAC,CAEL,CAAC,CACH,ECpBaW,EAAgB,CAAC,CAC5B,SAAAC,EACA,QAAAC,EACA,SAAAZ,EAAW,GACX,WAAAC,EAAa,GACb,cAAAY,EAAgB,EAClB,IAAkC,CAChC,MAAMC,EAAoB5B,IACpB6B,EAASC,EAAUJ,CAAO,EAC1BK,EAAcC,EAAAA,EAEdC,EAAgBlC,EAAS,IAAM,CACnC,KAAM,CAAE,WAAAc,CAAW,EAAIkB,EAAY,MAEnC,OAAOlB,IAAe,GAClB,KACAqB,EAASrB,CAAU,EACjBA,EACAsB,EAAQV,CAAQ,EACdA,EAAS,KAAK,IAAI,EAClBA,CACV,CAAC,EAEK/B,EAAUK,EAAS,KAAO,CAC9B,GAAG6B,EAAkB,MACrB,GAAGC,EAAO,MACV,SAAAf,EACA,WAAAC,EACA,cAAAY,CACF,EAAE,EAEF,IAAIS,EAAsD,KACtDC,EAAe,EACfxB,EAAgC,KA8DpCyB,EAAiB,QA5DM,MAAOlB,GAAqC,CACjE,MAAMV,EAAKU,EAAM,OAEjB,GAEE,CAACa,EAAc,OAEf,CAACG,GAED,CAAC1B,EAAG,QAAQuB,EAAc,KAAK,EAE/B,OAGEI,IAAiB,GAAGxB,EAAY,QAAA,EAEpC,MAAM0B,EAAK,KAAK,IAAA,EACVC,EAAwB,MAAMJ,EAE9BK,EAAS,MAAM,KACnB,SAAS,iBAAmCR,EAAc,KAAK,CACjE,EACMS,EAAaD,EAAO,IAAgBE,IAAW,CACnD,KAAMhC,EACN,QAASgC,EACT,KAAMA,EAAM,GACd,EAAE,EAEIC,EAAQH,EAAO,UAAWE,GAAUA,IAAUjC,CAAE,EAEtDG,EAAa,IAAI2B,EAAsB,CACrC,eAAgB,EAChB,sBAAuB,OACvB,GAAG9C,EAAQ,MACX,WAAAgD,EACA,MAAAE,EACA,GAAIjB,EACA,CAAE,oBAAqB,GAAM,YAAa,EAAM,EAChD,CAAA,CACN,CAAC,EACDU,EAAeE,EAEf3B,EAAgBC,EAAY,CAAE,SAAAC,EAAU,WAAAC,CAAW,CAAC,EAEpDF,EAAW,OAEXA,EAAW,GAAG,UAAW,IAAM,CAC7BA,EAAa,KACbwB,EAAe,CACjB,CAAC,EAEII,EAAO,IAAI,CAACE,EAAOE,IACtBzC,EAA4BuC,CAAK,EAAE,KAAMG,GAAS,CAC5CT,IAAiBE,IACrBG,EAAW,OAAOG,EAAY,EAAGC,CAAI,EACrCjC,GAAY,oBAAoBgC,CAAU,EAC5C,CAAC,CACH,CACF,EAE0C,CAAE,QAAS,EAAK,CAAC,EAC3DP,EAAiB,QAAS,IAAM,CAC1B5C,EAAQ,MAAM,eAAemB,GAAY,MAAA,CAC/C,CAAC,EAEDkC,EAAU,IAAM,CACV,mBAGF,wBAAyB,OAAS,OAAO,oBAAsB,YAE7D,IAAM,CACRX,EAAmB,OACqB,YACxC,EAAE,KAAK,CAAC,CAAE,QAASY,CAAY,IACtBA,CACR,CACH,CAAC,CACH,CAAC,EAEDC,EAAY,IAAM,CAChBpC,GAAY,QAAA,CACd,CAAC,CACH"}