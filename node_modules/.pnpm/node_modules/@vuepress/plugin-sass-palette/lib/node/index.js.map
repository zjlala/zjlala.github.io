{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/injectScssConfigModule.ts","../../src/node/prepare/prepareClientConfigFile.ts","../../src/node/prepare/prepareConfigSass.ts","../../src/node/prepare/prepareInjectSass.ts","../../src/node/prepare/preparePaletteSass.ts","../../src/node/prepare/prepareStyleSass.ts","../../src/node/sassPalettePlugin.ts","../../src/node/removePalettePlugin.ts","../../src/node/useSassPalettePlugin.ts"],"sourcesContent":["import { Logger } from '@vuepress/helper'\nimport { fs, getDirname, path } from 'vuepress/utils'\n\nconst __dirname = import.meta.dirname || getDirname(import.meta.url)\n\nexport const EMPTY_FILE = path.resolve(__dirname, '../../styles/empty.scss')\n\nexport const PLUGIN_NAME = '@vuepress/plugin-sass-palette'\n\nexport const logger = new Logger(PLUGIN_NAME)\n\nexport const getPath = (filePath: string): string =>\n  fs.pathExistsSync(filePath) ? filePath : EMPTY_FILE\n\nexport const getIdPrefix = (id: string): string => (id ? `${id}-` : '')\n","import type { ViteBundlerOptions } from '@vuepress/bundler-vite'\nimport type {\n  SassLoaderOptions,\n  WebpackBundlerOptions,\n} from '@vuepress/bundler-webpack'\nimport {\n  getBundlerName,\n  isFunction,\n  isString,\n  mergeViteConfig,\n} from '@vuepress/helper'\nimport type { App } from 'vuepress/core'\nimport { getIdPrefix } from './utils.js'\n\ntype SassLoaderContext =\n  Exclude<SassLoaderOptions['additionalData'], string | undefined> extends (\n    content: string,\n    loaderContext: infer T,\n  ) => string\n    ? T\n    : never\n\n/**\n * Use \"additionalData\" to make config and palette modules available in SCSS\n *\n * 使用 \"additionalData\" 使配置和调色板模块在 SCSS 中可用\n *\n * @description Injects SCSS config and palette modules into bundler configuration using additionalData option.\n *\n * 使用 additionalData 选项将 SCSS 配置和调色板模块注入到打包器配置中。\n *\n * @param config - VuePress bundler configuration / VuePress 打包器配置\n * @param app - VuePress app instance / VuePress 应用实例\n * @param id - Module identifier for the palette / 调色板的模块标识符\n */\nexport const injectScssConfigModule = (\n  config: unknown,\n  app: App,\n  id: string,\n): void => {\n  const bundlerName = getBundlerName(app)\n\n  const configModuleName = `${getIdPrefix(id)}config`\n  const configImport = `@use \"@sass-palette/${getIdPrefix(id)}config\";`\n  const configRegExp = new RegExp(\n    `@use\\\\s+([\"'])@sass-palette\\\\/${getIdPrefix(id)}config\\\\1;`,\n  )\n  const paletteModuleName = `${getIdPrefix(id)}palette`\n  const paletteImport = `@use \"@sass-palette/${getIdPrefix(id)}palette\";`\n  const paletteRegExp = new RegExp(\n    `@use\\\\s+([\"'])@sass-palette\\\\/${getIdPrefix(id)}palette\\\\1;`,\n  )\n\n  // For vite\n  if (bundlerName === 'vite') {\n    const viteBundlerConfig = config as ViteBundlerOptions\n\n    const originalAdditionalData =\n      viteBundlerConfig.viteOptions?.css?.preprocessorOptions?.scss\n        ?.additionalData\n\n    viteBundlerConfig.viteOptions = mergeViteConfig(\n      viteBundlerConfig.viteOptions ?? {},\n      {\n        css: {\n          preprocessorOptions: {\n            scss: {\n              charset: false,\n              additionalData: async (\n                source: string,\n                file: string,\n              ): Promise<string> => {\n                let originalResult = source\n\n                if (isFunction(originalAdditionalData)) {\n                  const result = await originalAdditionalData(source, file)\n\n                  originalResult = isString(result) ? result : result.content\n                } else if (isString(originalAdditionalData))\n                  originalResult = `${originalAdditionalData}${source}`\n\n                if (\n                  originalResult.includes(configModuleName) &&\n                  !originalResult.match(configRegExp)\n                )\n                  originalResult = `${configImport}\\n${originalResult}`\n                if (\n                  originalResult.includes(paletteModuleName) &&\n                  !originalResult.match(paletteRegExp)\n                )\n                  originalResult = `${paletteImport}\\n${originalResult}`\n\n                return originalResult\n              },\n            },\n          },\n        },\n      },\n    )\n  }\n\n  // For webpack\n  else if (bundlerName === 'webpack') {\n    const webpackBundlerConfig = config as WebpackBundlerOptions\n\n    webpackBundlerConfig.scss ??= {}\n\n    const { additionalData } = webpackBundlerConfig.scss\n\n    webpackBundlerConfig.scss.additionalData = (\n      content: string,\n      loaderContext: SassLoaderContext,\n    ): string => {\n      let originalContent = isString(additionalData)\n        ? `${additionalData}${content}`\n        : isFunction(additionalData)\n          ? additionalData(content, loaderContext)\n          : content\n\n      if (\n        originalContent.includes(configModuleName) &&\n        !originalContent.match(configRegExp)\n      )\n        originalContent = `${configImport}\\n${originalContent}`\n\n      if (\n        originalContent.includes(paletteModuleName) &&\n        !originalContent.match(paletteRegExp)\n      )\n        originalContent = `${paletteImport}\\n${originalContent}`\n\n      return originalContent\n    }\n  }\n}\n","import type { App } from 'vuepress/core'\nimport { getIdPrefix } from '../utils.js'\n\nexport const prepareClientConfigFile = (\n  app: App,\n  id: string,\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/load-${id || 'default'}.js`,\n    `\\\nimport \"@sass-palette/${getIdPrefix(id)}inject\";\n`,\n  )\n","import type { App } from 'vuepress/core'\nimport { getIdPrefix, getPath } from '../utils.js'\n\nexport const prepareConfigSass = (\n  app: App,\n  id: string,\n  defaultConfig: string,\n  userConfig: string,\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${getIdPrefix(id)}config.scss`,\n    `\\\n@import \"file:///${getPath(defaultConfig)}\";\n@import \"file:///${getPath(userConfig)}\";\n`,\n  )\n","import type { App } from 'vuepress/core'\nimport { getIdPrefix } from '../utils.js'\n\nexport const prepareInjectSass = (app: App, id: string): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${getIdPrefix(id)}inject.scss`,\n    `\\\n@use \"sass:meta\";\n@use \"@sass-palette/helper\";\n@use \"@sass-palette/${getIdPrefix(id)}palette\";\n\n$palette-variables: meta.module-variables(\"${getIdPrefix(id)}palette\");\n${\n  app.env.isDebug\n    ? `\n@debug \"${id} config variables: #{meta.inspect(meta.module-variables(\"${getIdPrefix(id)}config\"))}\";\n@debug \"${id} palette variables: #{meta.inspect($palette-variables)}\";\n`\n    : ''\n}\n\n@include helper.inject($palette-variables);\n`,\n  )\n","import type { App } from 'vuepress/core'\nimport { getIdPrefix, getPath } from '../utils.js'\n\nexport interface PreparePaletteOptions {\n  id: string\n  defaultPalette?: string\n  generator: string\n  userPalette: string\n}\n\nexport const preparePaletteSass = (\n  app: App,\n  { id, defaultPalette, generator, userPalette }: PreparePaletteOptions,\n): Promise<string> =>\n  app.writeTemp(\n    `sass-palette/${getIdPrefix(id)}palette.scss`,\n    `\\\n${defaultPalette ? `@import \"file:///${getPath(defaultPalette)}\";` : ''}\n@import \"file:///${getPath(userPalette)}\";\n@import \"file:///${getPath(generator)}\";\n`,\n  )\n","import type { App } from 'vuepress/core'\nimport { getIdPrefix, getPath } from '../utils.js'\n\nexport interface PrepareStyleOptions {\n  id: string\n  userStyle: string | null\n}\n\nexport const prepareStyleSass = (\n  app: App,\n  id: string,\n  userStyle: string | null,\n): Promise<string | null> =>\n  userStyle\n    ? app.writeTemp(\n        `sass-palette/${getIdPrefix(id)}style.scss`,\n        `\\\n@forward \"file:///${getPath(userStyle)}\";\n`,\n      )\n    : Promise.resolve(null)\n","import { addViteConfig, chainWebpack } from '@vuepress/helper'\nimport { watch } from 'chokidar'\nimport type { PluginFunction } from 'vuepress/core'\nimport { getDirname, path } from 'vuepress/utils'\nimport { injectScssConfigModule } from './injectScssConfigModule.js'\nimport type { SassPalettePluginOptions } from './options.js'\nimport {\n  prepareClientConfigFile,\n  prepareConfigSass,\n  prepareInjectSass,\n  preparePaletteSass,\n  prepareStyleSass,\n} from './prepare/index.js'\nimport { EMPTY_FILE, PLUGIN_NAME, getIdPrefix, logger } from './utils.js'\n\nconst __dirname = import.meta.dirname || getDirname(import.meta.url)\n\n/**\n * Sass palette plugin\n *\n * Sass 调色板插件\n *\n * @description Plugin to provide palette and config file support for themes, allowing users to control theme colors and other style variables.\n *\n * 为主题提供调色板和配置文件支持的插件，允许用户控制主题颜色和其他样式变量。\n *\n * @example\n * ```ts\n * // Use with default options\n * export default {\n *   plugins: [\n *     sassPalettePlugin({\n *       id: \"hope\"\n *     })\n *   ]\n * }\n * ```\n */\nexport const sassPalettePlugin =\n  (options: SassPalettePluginOptions): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    const {\n      id = '',\n      config = `.vuepress/styles/${getIdPrefix(id)}config.scss`,\n      defaultConfig = path.resolve(\n        __dirname,\n        '../../styles/default/config.scss',\n      ),\n      palette = `.vuepress/styles/${getIdPrefix(id)}palette.scss`,\n      defaultPalette,\n      generator = EMPTY_FILE,\n      style = '',\n    } = options\n\n    const userConfig = app.dir.source(config)\n    const userPalette = app.dir.source(palette)\n    const userStyle = style ? app.dir.source(style) : null\n\n    return {\n      name: PLUGIN_NAME,\n\n      multiple: true,\n\n      id,\n\n      alias: {\n        [`@sass-palette/helper`]: path.resolve(\n          __dirname,\n          '../../styles/helper.scss',\n        ),\n        [`@sass-palette/${getIdPrefix(id)}config`]: app.dir.temp(\n          `sass-palette/${getIdPrefix(id)}config.scss`,\n        ),\n        [`@sass-palette/${getIdPrefix(id)}inject`]: app.dir.temp(\n          `sass-palette/${getIdPrefix(id)}inject.scss`,\n        ),\n        [`@sass-palette/${getIdPrefix(id)}palette`]: app.dir.temp(\n          `sass-palette/${getIdPrefix(id)}palette.scss`,\n        ),\n        ...(style\n          ? {\n              [`@sass-palette/${getIdPrefix(id)}style`]: app.dir.temp(\n                `sass-palette/${getIdPrefix(id)}style.scss`,\n              ),\n            }\n          : {}),\n      },\n\n      extendsBundlerOptions: (bundlerOptions: unknown): void => {\n        // switch to modern api and silent import deprecation for vite\n        addViteConfig(bundlerOptions, app, {\n          css: {\n            preprocessorOptions: {\n              sass: {\n                api: 'modern',\n                silenceDeprecations: ['import'],\n              },\n              scss: {\n                api: 'modern',\n                silenceDeprecations: ['import'],\n              },\n            },\n          },\n        })\n        // silent import deprecation for webpack\n        chainWebpack(bundlerOptions, app, (webpackOptions) => {\n          webpackOptions.module\n            .rule('scss')\n            .use('sass-loader')\n            .tap((loaderOptions) => ({\n              ...loaderOptions,\n              // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n              sassOptions: {\n                ...loaderOptions.sassOptions,\n                silenceDeprecations: [\n                  'import',\n                  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access\n                  ...(loaderOptions.sassOptions?.silenceDeprecations ?? []),\n                ],\n              },\n            }))\n        })\n        injectScssConfigModule(bundlerOptions, app, id)\n      },\n\n      onInitialized: (): Promise<void> =>\n        Promise.all([\n          prepareConfigSass(app, id, defaultConfig, userConfig),\n          prepareInjectSass(app, id),\n          preparePaletteSass(app, {\n            id,\n            defaultPalette,\n            generator,\n            userPalette,\n          }),\n          prepareStyleSass(app, id, userStyle),\n        ]).then(() => {\n          if (app.env.isDebug) logger.info(`Style file for ${id} generated`)\n        }),\n\n      onWatched: (_, watchers): void => {\n        const configWatcher = watch(userConfig, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        })\n\n        const updateConfig = (): Promise<void> =>\n          prepareConfigSass(app, id, defaultConfig, userConfig).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`)\n          })\n\n        configWatcher.on('add', () => {\n          void updateConfig()\n        })\n        configWatcher.on('unlink', () => {\n          void updateConfig()\n        })\n\n        watchers.push(configWatcher)\n\n        const paletteWatcher = watch(userPalette, {\n          cwd: app.dir.source(),\n          ignoreInitial: true,\n        })\n\n        const updatePalette = (): Promise<void> =>\n          Promise.all([\n            prepareConfigSass(app, id, defaultConfig, userConfig),\n            preparePaletteSass(app, {\n              id,\n              defaultPalette,\n              generator,\n              userPalette,\n            }),\n          ]).then(() => {\n            if (app.env.isDebug) logger.info(`Style file for ${id} updated`)\n          })\n\n        paletteWatcher.on('add', () => {\n          void updatePalette()\n        })\n        paletteWatcher.on('unlink', () => {\n          void updatePalette()\n        })\n\n        watchers.push(paletteWatcher)\n\n        if (userStyle) {\n          const styleWatcher = watch(userStyle, {\n            cwd: app.dir.source(),\n            ignoreInitial: true,\n          })\n\n          const updateStyle = (): Promise<void> =>\n            prepareStyleSass(app, id, userStyle).then(() => {\n              if (app.env.isDebug) logger.info(`Style file for ${id} updated`)\n            })\n\n          styleWatcher.on('add', () => {\n            void updateStyle()\n          })\n          styleWatcher.on('unlink', () => {\n            void updateStyle()\n          })\n          watchers.push(styleWatcher)\n        }\n      },\n\n      clientConfigFile: () => prepareClientConfigFile(app, id),\n    }\n  }\n","import type { App, PluginObject } from 'vuepress/core'\nimport { PLUGIN_NAME } from './utils.js'\n\n/**\n * Remove sass palette plugin with specific id\n *\n * 移除指定 ID 的 Sass 调色板插件\n *\n * @description Remove a sass palette plugin instance from app by id to avoid conflicts.\n *\n * 通过 ID 从应用中移除一个 Sass 调色板插件实例以避免冲突。\n *\n * @example\n * ```ts\n * // Remove palette plugin with id \"hope\"\n * removePalettePlugin(app, \"hope\")\n * ```\n */\nexport const removePalettePlugin = (app: App, id: string): void => {\n  const { plugins } = app.pluginApi\n\n  const index = plugins\n    .filter<\n      PluginObject & { id: string }\n    >((plugin): plugin is PluginObject & { id: string } => plugin.name === PLUGIN_NAME)\n    .findIndex((plugin) => plugin.id === id)\n\n  if (index !== -1) plugins.splice(index, 1)\n}\n","import type { App, PluginObject } from 'vuepress/core'\nimport type { SassPalettePluginOptions } from './options.js'\nimport { sassPalettePlugin } from './sassPalettePlugin.js'\nimport { PLUGIN_NAME } from './utils.js'\n\n/**\n * Use sass palette plugin\n *\n * 使用 Sass 调色板插件\n *\n * @description Add sass palette plugin to app if not already registered with the same id.\n *\n * 如果具有相同 ID 的插件尚未注册，则将 Sass 调色板插件添加到应用中。\n *\n * @example\n * ```ts\n * // Use sass palette plugin with specific options\n * useSassPalettePlugin(app, {\n *   id: \"hope\",\n *   config: \".vuepress/styles/config.scss\"\n * })\n * ```\n */\nexport const useSassPalettePlugin = (\n  app: App,\n  options: SassPalettePluginOptions,\n): void => {\n  const { plugins } = app.pluginApi\n\n  if (\n    plugins\n      .filter<\n        PluginObject & { id: string }\n      >((plugin): plugin is PluginObject & { id: string } => plugin.name === PLUGIN_NAME)\n      .every((plugin) => plugin.id !== options.id)\n  )\n    app.use(sassPalettePlugin(options))\n}\n"],"names":["__dirname","getDirname","EMPTY_FILE","path","PLUGIN_NAME","logger","Logger","getPath","filePath","fs","getIdPrefix","id","injectScssConfigModule","config","app","bundlerName","getBundlerName","configModuleName","configImport","configRegExp","paletteModuleName","paletteImport","paletteRegExp","viteBundlerConfig","originalAdditionalData","mergeViteConfig","source","file","originalResult","isFunction","result","isString","webpackBundlerConfig","additionalData","content","loaderContext","originalContent","prepareClientConfigFile","prepareConfigSass","defaultConfig","userConfig","prepareInjectSass","preparePaletteSass","defaultPalette","generator","userPalette","prepareStyleSass","userStyle","sassPalettePlugin","options","palette","style","bundlerOptions","addViteConfig","chainWebpack","webpackOptions","loaderOptions","_","watchers","configWatcher","watch","updateConfig","paletteWatcher","updatePalette","styleWatcher","updateStyle","removePalettePlugin","plugins","index","plugin","useSassPalettePlugin"],"mappings":"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"}