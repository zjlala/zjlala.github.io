{"version":3,"file":"index.js","sources":["../../src/client/utils/index.ts","../../src/client/composables/useRtl.ts"],"sourcesContent":["/**\n * Get DOM element by selector\n *\n * 通过选择器获取 DOM 元素\n *\n * @param selector - CSS selector\n * @returns The DOM element or null if not found\n *\n * @example\n * ```ts\n * import { getElement } from '@vuepress/plugin-rtl/client'\n *\n * const htmlElement = getElement('html')\n * const bodyElement = getElement('body')\n * const customElement = getElement('.my-class')\n * ```\n */\nexport const getElement = (selector: string): HTMLElement | null =>\n  selector === 'html'\n    ? document.documentElement\n    : selector === 'body'\n      ? document.body\n      : document.querySelector(selector)\n","import { entries } from '@vuepress/helper/client'\nimport { watchImmediate } from '@vueuse/core'\nimport { onMounted } from 'vue'\nimport { useRouteLocale } from 'vuepress/client'\nimport { getElement } from '../utils/index.js'\n\n/**\n * Composable to use RTL functionality\n *\n * 使用 RTL 功能的组合式函数\n *\n * @param rtlLocalePaths - RTL locale paths\n * @param selectorOptions - RTL selector options\n *\n * @default selectorOptions { html: { dir: 'rtl' } }\n *\n * @example\n * ```ts\n * import { useRtl } from '@vuepress/plugin-rtl'\n *\n * // Use in client side\n * useRtl(['/ar/', '/he/'], {\n *   html: { dir: 'rtl' },\n *   body: { class: 'rtl-layout' }\n * })\n * ```\n */\nexport const useRtl = (\n  rtlLocalePaths: string[],\n  selectorOptions: Record<string, Record<string, string>> = {\n    html: { dir: 'rtl' },\n  },\n): void => {\n  const routeLocale = useRouteLocale()\n\n  const toggleRTL = (localePath: string): void => {\n    const isRTL = rtlLocalePaths.includes(localePath)\n\n    entries(selectorOptions).forEach(([selector, attrs = {}]) => {\n      const element = getElement(selector)\n\n      if (element)\n        entries(attrs).forEach(([attr, value]) => {\n          if (attr === 'class') {\n            element.classList[isRTL ? 'add' : 'remove'](value)\n          } else if (isRTL) {\n            element.setAttribute(attr, value)\n          } else {\n            element.removeAttribute(attr)\n          }\n        })\n    })\n\n    if (isRTL) {\n      document.documentElement.style.setProperty('direction', 'rtl')\n    } else {\n      document.documentElement.style.removeProperty('direction')\n    }\n  }\n\n  onMounted(() => {\n    watchImmediate(routeLocale, toggleRTL)\n  })\n}\n"],"names":["getElement","selector","useRtl","rtlLocalePaths","selectorOptions","routeLocale","useRouteLocale","toggleRTL","localePath","isRTL","entries","attrs","element","attr","value","onMounted","watchImmediate"],"mappings":"iLAiBO,MAAMA,EAAcC,GACzBA,IAAa,OACT,SAAS,gBACTA,IAAa,OACX,SAAS,KACT,SAAS,cAAcA,CAAQ,ECK1BC,EAAS,CACpBC,EACAC,EAA0D,CACxD,KAAM,CAAE,IAAK,KAAM,CACrB,IACS,CACT,MAAMC,EAAcC,EAAAA,EAEdC,EAAaC,GAA6B,CAC9C,MAAMC,EAAQN,EAAe,SAASK,CAAU,EAEhDE,EAAQN,CAAe,EAAE,QAAQ,CAAC,CAACH,EAAUU,EAAQ,CAAA,CAAE,IAAM,CAC3D,MAAMC,EAAUZ,EAAWC,CAAQ,EAE/BW,GACFF,EAAQC,CAAK,EAAE,QAAQ,CAAC,CAACE,EAAMC,CAAK,IAAM,CACpCD,IAAS,QACXD,EAAQ,UAAUH,EAAQ,MAAQ,QAAQ,EAAEK,CAAK,EACxCL,EACTG,EAAQ,aAAaC,EAAMC,CAAK,EAEhCF,EAAQ,gBAAgBC,CAAI,CAEhC,CAAC,CACL,CAAC,EAEGJ,EACF,SAAS,gBAAgB,MAAM,YAAY,YAAa,KAAK,EAE7D,SAAS,gBAAgB,MAAM,eAAe,WAAW,CAE7D,EAEAM,EAAU,IAAM,CACdC,EAAeX,EAAaE,CAAS,CACvC,CAAC,CACH"}