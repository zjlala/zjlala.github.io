{"version":3,"file":"setupRedirect-BBJERz7T.js","sources":["../../src/shared/normalizePath.ts","../../src/client/composables/setupDevServerRedirect.ts","../../src/client/composables/setupRedirect.ts"],"sourcesContent":["const HASH_REGEXP = /#.*$/u\n\nexport const normalizePath = (path: string, removeHash = false): string =>\n  (removeHash ? path.replace(HASH_REGEXP, '') : path)\n    .replace(/\\/(?:README\\.md)?$/i, '/index.html')\n    .replace(/(?:\\.(?:md|html))?$/, '.html')\n","import { redirectMap } from '@temp/redirect/map.js'\nimport { entries, isLinkHttp } from '@vuepress/helper/client'\nimport { usePreferredLanguages, watchImmediate } from '@vueuse/core'\nimport { computed } from 'vue'\nimport {\n  useRoute,\n  useRouteLocale,\n  useRoutePath,\n  useRouter,\n} from 'vuepress/client'\nimport type { RedirectBehaviorConfig } from '../../shared/index.js'\nimport { normalizePath } from '../../shared/index.js'\n\nexport const setupDevServerRedirect = ({\n  autoLocale,\n  config,\n  defaultBehavior,\n  defaultLocale: defaultLocalePath,\n  localeFallback,\n}: RedirectBehaviorConfig): void => {\n  const localeEntries = Object.entries(config)\n  const languages = usePreferredLanguages()\n  const route = useRoute()\n  const router = useRouter()\n  const routeLocale = useRouteLocale()\n  const routePath = useRoutePath()\n\n  const isRootLocale = computed(() => routeLocale.value === '/')\n\n  const handleLocaleRedirect = (): void => {\n    const routePathValue = routePath.value\n    const routes = router.getRoutes()\n    const defaultLocale =\n      defaultLocalePath &&\n      routes.some(\n        ({ path }) => path === routePathValue.replace('/', defaultLocalePath),\n      )\n        ? defaultLocalePath\n        : routes.find(\n            ({ path }) =>\n              routePathValue.split('/').length >= 3 &&\n              path === routePathValue.replace(/^\\/[^/]+\\//, '/'),\n          )?.path\n\n    let matchedLocalePath: string | null = null\n\n    // get matched locale\n    // eslint-disable-next-line no-restricted-syntax\n    findLanguage: for (const lang of languages.value)\n      for (const [localePath, langs] of localeEntries)\n        if (langs.includes(lang)) {\n          if (\n            localeFallback &&\n            routes.every(\n              ({ path }) => path !== routePathValue.replace('/', path),\n            )\n          )\n            continue\n\n          matchedLocalePath = localePath\n          break findLanguage\n        }\n\n    // default link\n    const defaultRoute = defaultLocale\n      ? route.fullPath.replace('/', defaultLocale)\n      : null\n\n    // a locale matches\n    if (matchedLocalePath) {\n      const hasLocalePage = routes.some(\n        ({ path }) => routePathValue.replace('/', matchedLocalePath) === path,\n      )\n      const localeRoute = route.fullPath.replace('/', matchedLocalePath)\n\n      const redirectPath =\n        // the locale page exists\n        hasLocalePage\n          ? localeRoute\n          : // the page does not exist\n            defaultBehavior === 'homepage'\n            ? // locale homepage\n              matchedLocalePath\n            : defaultBehavior === 'defaultLocale' && defaultRoute\n              ? // default locale page\n                defaultRoute\n              : // as is to get a 404 page of that locale\n                localeRoute\n\n      router.replace(redirectPath)\n    }\n    // we have a default page\n    else if (defaultRoute) {\n      router.replace(defaultRoute)\n    } else if (routePath.value !== '/404.html') {\n      router.replace('/404.html')\n    }\n  }\n\n  watchImmediate(routePath, (path) => {\n    // handle redirects\n    for (const [from, to] of entries(redirectMap))\n      if (normalizePath(path.toLowerCase()) === from.toLowerCase()) {\n        if (isLinkHttp(to)) window.open(to)\n        else router.replace(to)\n\n        return\n      }\n\n    if (autoLocale && isRootLocale.value) handleLocaleRedirect()\n  })\n}\n","import { onMounted } from 'vue'\nimport { useData, useRouter } from 'vuepress/client'\nimport type { RedirectBehaviorConfig } from '../../shared/index.js'\nimport { statusSessionStorage } from '../utils/index.js'\nimport { useRedirectInfo } from './useRedirectInfo.js'\n\nexport interface LocaleInfo {\n  lang: string\n  localePath: string\n}\n\nexport const setupRedirect = (behaviorConfig: RedirectBehaviorConfig): void => {\n  const { routeLocale, routePath } = useData()\n  const router = useRouter()\n  const redirectInfo = useRedirectInfo(behaviorConfig)\n\n  onMounted(() => {\n    if (redirectInfo.value && !statusSessionStorage.value[routeLocale.value]) {\n      router.replace(\n        routePath.value.replace(\n          routeLocale.value,\n          redirectInfo.value.localePath,\n        ),\n      )\n      statusSessionStorage.value[routeLocale.value] = true\n    }\n  })\n}\n"],"names":["HASH_REGEXP","normalizePath","path","removeHash","setupDevServerRedirect","autoLocale","config","defaultBehavior","defaultLocalePath","localeFallback","localeEntries","languages","usePreferredLanguages","route","useRoute","router","useRouter","routeLocale","useRouteLocale","routePath","useRoutePath","isRootLocale","computed","handleLocaleRedirect","routePathValue","routes","defaultLocale","matchedLocalePath","findLanguage","lang","localePath","langs","defaultRoute","hasLocalePage","localeRoute","redirectPath","watchImmediate","from","to","entries","redirectMap","isLinkHttp","setupRedirect","behaviorConfig","useData","redirectInfo","useRedirectInfo","onMounted","statusSessionStorage"],"mappings":"mZAAA,MAAMA,EAAc,QAEPC,EAAgB,CAACC,EAAcC,EAAa,MACtDA,EAAaD,EAAK,QAAQF,EAAa,EAAE,EAAIE,GAC3C,QAAQ,sBAAuB,aAAa,EAC5C,QAAQ,sBAAuB,OAAO,ECQ9BE,EAAyB,CAAC,CACrC,WAAAC,EACA,OAAAC,EACA,gBAAAC,EACA,cAAeC,EACf,eAAAC,CACF,IAAoC,CAClC,MAAMC,EAAgB,OAAO,QAAQJ,CAAM,EACrCK,EAAYC,EAAAA,EACZC,EAAQC,EAAAA,EACRC,EAASC,EAAAA,EACTC,EAAcC,IACdC,EAAYC,EAAAA,EAEZC,EAAeC,EAAS,IAAML,EAAY,QAAU,GAAG,EAEvDM,EAAuB,IAAY,CACvC,MAAMC,EAAiBL,EAAU,MAC3BM,EAASV,EAAO,YAChBW,EACJlB,GACAiB,EAAO,KACL,CAAC,CAAE,KAAAvB,CAAK,IAAMA,IAASsB,EAAe,QAAQ,IAAKhB,CAAiB,CACtE,EACIA,EACAiB,EAAO,KACL,CAAC,CAAE,KAAAvB,CAAK,IACNsB,EAAe,MAAM,GAAG,EAAE,QAAU,GACpCtB,IAASsB,EAAe,QAAQ,aAAc,GAAG,CACrD,GAAG,KAET,IAAIG,EAAmC,KAIvCC,EAAc,UAAWC,KAAQlB,EAAU,MACzC,SAAW,CAACmB,EAAYC,CAAK,IAAKrB,EAChC,GAAIqB,EAAM,SAASF,CAAI,EAAG,CACxB,GACEpB,GACAgB,EAAO,MACL,CAAC,CAAE,KAAAvB,CAAK,IAAMA,IAASsB,EAAe,QAAQ,IAAKtB,CAAI,CACzD,EAEA,SAEFyB,EAAoBG,EACpB,MAAMF,CACR,CAGJ,MAAMI,EAAeN,EACjBb,EAAM,SAAS,QAAQ,IAAKa,CAAa,EACzC,KAGJ,GAAIC,EAAmB,CACrB,MAAMM,EAAgBR,EAAO,KAC3B,CAAC,CAAE,KAAAvB,CAAK,IAAMsB,EAAe,QAAQ,IAAKG,CAAiB,IAAMzB,CACnE,EACMgC,EAAcrB,EAAM,SAAS,QAAQ,IAAKc,CAAiB,EAE3DQ,EAEJF,EACIC,EAEA3B,IAAoB,WAElBoB,EACApB,IAAoB,iBAAmByB,EAErCA,EAEAE,EAEVnB,EAAO,QAAQoB,CAAY,CAC7B,MAESH,EACPjB,EAAO,QAAQiB,CAAY,EAClBb,EAAU,QAAU,aAC7BJ,EAAO,QAAQ,WAAW,CAE9B,EAEAqB,EAAejB,EAAYjB,GAAS,CAElC,SAAW,CAACmC,EAAMC,CAAE,IAAKC,EAAQC,CAAW,EAC1C,GAAIvC,EAAcC,EAAK,YAAA,CAAa,IAAMmC,EAAK,YAAA,EAAe,CACxDI,EAAWH,CAAE,EAAG,OAAO,KAAKA,CAAE,EAC7BvB,EAAO,QAAQuB,CAAE,EAEtB,MACF,CAEEjC,GAAcgB,EAAa,OAAOE,EAAAA,CACxC,CAAC,CACH,ECpGamB,EAAiBC,GAAiD,CAC7E,KAAM,CAAE,YAAA1B,EAAa,UAAAE,CAAU,EAAIyB,EAAAA,EAC7B7B,EAASC,EAAAA,EACT6B,EAAeC,EAAgBH,CAAc,EAEnDI,EAAU,IAAM,CACVF,EAAa,OAAS,CAACG,EAAqB,MAAM/B,EAAY,KAAK,IACrEF,EAAO,QACLI,EAAU,MAAM,QACdF,EAAY,MACZ4B,EAAa,MAAM,UACrB,CACF,EACAG,EAAqB,MAAM/B,EAAY,KAAK,EAAI,GAEpD,CAAC,CACH"}