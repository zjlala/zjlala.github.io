{"version":3,"file":"index.js","sources":["../../src/node/utils.ts","../../src/node/prepare/prepareClientConfigFile.ts","../../src/node/markdownImagePlugin.ts"],"sourcesContent":["export const PLUGIN_NAME = '@vuepress/plugin-markdown-image'\n","import { getModulePath } from '@vuepress/helper'\nimport type { App } from 'vuepress'\nimport type { MarkdownImagePluginOptions } from '../options.js'\nimport { PLUGIN_NAME } from '../utils.js'\n\nexport const prepareClientConfigFile = async (\n  app: App,\n  { figure, mark }: MarkdownImagePluginOptions,\n): Promise<string> => {\n  let content = ''\n\n  if (figure) {\n    content += `\\\nimport \"${getModulePath(`${PLUGIN_NAME}/figure.css`, import.meta)}\"\n`\n  }\n\n  if (mark) {\n    content += `\\\nimport \"${getModulePath(`${PLUGIN_NAME}/mark.css`, import.meta)}\"\n`\n  }\n\n  return app.writeTemp(\n    'markdown-image/client.js',\n    `\\\n${content}\n`,\n  )\n}\n","import { figure } from '@mdit/plugin-figure'\nimport { imgLazyload } from '@mdit/plugin-img-lazyload'\nimport type { MarkdownItImgMarkOptions } from '@mdit/plugin-img-mark'\nimport { imgMark } from '@mdit/plugin-img-mark'\nimport { imgSize, legacyImgSize, obsidianImgSize } from '@mdit/plugin-img-size'\nimport type { Plugin } from 'vuepress/core'\nimport { isPlainObject } from 'vuepress/shared'\nimport type { MarkdownImagePluginOptions } from './options.js'\nimport { prepareClientConfigFile } from './prepare/index.js'\nimport { PLUGIN_NAME } from './utils.js'\n\n/**\n * Create markdown image plugin\n *\n * 创建 markdown 图片插件\n *\n * @param options - Plugin options / 插件配置项\n *\n * @example\n * ```ts\n * import { markdownImagePlugin } from '@vuepress/plugin-markdown-image'\n *\n * markdownImagePlugin({\n *   figure: true,\n *   lazyload: true,\n *   mark: true,\n *   size: true,\n * })\n * ```\n */\nexport const markdownImagePlugin = (\n  options: MarkdownImagePluginOptions,\n): Plugin => ({\n  name: PLUGIN_NAME,\n\n  extendsMarkdown: (md) => {\n    const { mark } = options\n\n    if (options.figure) md.use(figure)\n    if (options.lazyload) md.use(imgLazyload)\n    if (options.size) md.use(imgSize)\n    // eslint-disable-next-line @typescript-eslint/no-deprecated\n    if (options.legacySize) md.use(legacyImgSize)\n    if (options.obsidianSize) md.use(obsidianImgSize)\n    if (mark)\n      md.use<MarkdownItImgMarkOptions>(imgMark, isPlainObject(mark) ? mark : {})\n  },\n\n  clientConfigFile: (app) => prepareClientConfigFile(app, options),\n})\n"],"names":["PLUGIN_NAME","prepareClientConfigFile","app","figure","mark","content","getModulePath","markdownImagePlugin","options","md","imgLazyload","imgSize","legacyImgSize","obsidianImgSize","imgMark","isPlainObject"],"mappings":"8UAAO,MAAMA,EAAc,kCCKdC,EAA0B,MACrCC,EACA,CAAE,OAAAC,EAAQ,KAAAC,CAAK,IACK,CACpB,IAAIC,EAAU,GAEd,OAAIF,IACFE,GAAW,WACLC,EAAc,GAAGN,CAAW,cAAe,WAAW,CAAC;AAAA,GAI3DI,IACFC,GAAW,WACLC,EAAc,GAAGN,CAAW,YAAa,WAAW,CAAC;AAAA,GAItDE,EAAI,UACT,2BACA,GACFG,CAAO;AAAA,CAEP,CACF,ECCaE,EACXC,IACY,CACZ,KAAMR,EAEN,gBAAkBS,GAAO,CACvB,KAAM,CAAE,KAAAL,CAAK,EAAII,EAEbA,EAAQ,QAAQC,EAAG,IAAIN,CAAM,EAC7BK,EAAQ,UAAUC,EAAG,IAAIC,CAAW,EACpCF,EAAQ,MAAMC,EAAG,IAAIE,CAAO,EAE5BH,EAAQ,YAAYC,EAAG,IAAIG,CAAa,EACxCJ,EAAQ,cAAcC,EAAG,IAAII,CAAe,EAC5CT,GACFK,EAAG,IAA8BK,EAASC,EAAcX,CAAI,EAAIA,EAAO,CAAA,CAAE,CAC7E,EAEA,iBAAmBF,GAAQD,EAAwBC,EAAKM,CAAO,CACjE"}