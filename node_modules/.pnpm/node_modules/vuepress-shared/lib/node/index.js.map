{"version":3,"file":"index.js","sources":["../../src/node/createConverter.ts"],"sourcesContent":["import { Logger, isPlainObject } from \"@vuepress/helper\";\nimport { colors } from \"vuepress/utils\";\n\nexport interface DeprecatedLoggerOptions {\n  options: Record<string, unknown>;\n  old: string;\n  new: string;\n  msg?: string;\n  scope?: string;\n}\n\nexport interface DroppedLoggerOptions {\n  options: Record<string, unknown>;\n  old: string;\n  new?: string;\n  msg?: string;\n  scope?: string;\n}\n\nexport interface Converter {\n  deprecatedLogger: (options: DeprecatedLoggerOptions) => void;\n  droppedLogger: (options: DroppedLoggerOptions) => void;\n}\n\nexport const createConverter = (name: string): Converter => {\n  const logger = new Logger(name);\n\n  return {\n    deprecatedLogger: ({\n      options,\n      old,\n      new: newOption,\n      msg,\n      scope,\n    }: DeprecatedLoggerOptions): void => {\n      let deprecatedOptionValue: unknown;\n      let hasDeprecatedOption = false;\n\n      if (old.includes(\".\")) {\n        let temp = options;\n        const keys = old.split(\".\");\n\n        for (const [index, key] of keys.entries()) {\n          if (key in temp) {\n            if (index === keys.length - 1) {\n              hasDeprecatedOption = true;\n              deprecatedOptionValue = temp[key];\n              delete temp[key];\n            } else if (isPlainObject(temp[key])) {\n              temp = temp[key] as Record<string, unknown>;\n            } else break;\n          }\n        }\n      } else if (old in options) {\n        deprecatedOptionValue = options[old];\n        hasDeprecatedOption = true;\n        delete options[old];\n      }\n\n      if (hasDeprecatedOption) {\n        logger.warn(\n          `${colors.magenta(old)} is ${colors.yellow(\"deprecated\")}${\n            scope ? ` in ${scope}` : \"\"\n          }, please use ${colors.magenta(newOption)} instead.${\n            msg ? ` ${msg}` : \"\"\n          }`,\n        );\n\n        if (newOption.includes(\".\")) {\n          const keys = newOption.split(\".\");\n          let temp = options;\n\n          keys.forEach((key, index) => {\n            if (index === keys.length - 1) {\n              temp[key] = deprecatedOptionValue;\n            } else {\n              // Ensure level exists\n              // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n              temp[key] ||= {};\n              temp = temp[key] as Record<string, unknown>;\n            }\n          });\n        } else {\n          options[newOption] = deprecatedOptionValue;\n        }\n      }\n    },\n\n    droppedLogger: ({\n      options,\n      old,\n      msg,\n      new: newOption,\n      scope,\n    }: DroppedLoggerOptions): void => {\n      let hasDroppedOption = false;\n\n      if (old.includes(\".\")) {\n        let temp = options;\n        const keys = old.split(\".\");\n\n        for (const [index, key] of keys.entries()) {\n          if (key in temp) {\n            if (index === keys.length - 1) {\n              hasDroppedOption = true;\n              delete temp[key];\n            } else if (isPlainObject(temp[key])) {\n              temp = temp[key] as Record<string, unknown>;\n            } else break;\n          }\n        }\n      } else if (old in options) {\n        hasDroppedOption = true;\n        delete options[old];\n      }\n\n      if (hasDroppedOption) {\n        logger.error(\n          `${colors.magenta(old)}${\n            scope ? ` in ${scope}` : \"\"\n          } is ${colors.red(\"no longer supported\")}${\n            newOption\n              ? `, please use ${colors.magenta(newOption)} instead.`\n              : \"\"\n          }${msg ? `\\n${msg}` : \"\"}`,\n        );\n      }\n    },\n  };\n};\n"],"names":["createConverter","name","logger","Logger","options","old","newOption","msg","scope","deprecatedOptionValue","hasDeprecatedOption","temp","keys","index","key","isPlainObject","colors","hasDroppedOption"],"mappings":"qGAwBO,MAAMA,EAAmBC,GAA4B,CAC1D,MAAMC,EAAS,IAAIC,EAAOF,CAAI,EAE9B,MAAO,CACL,iBAAkB,CAAC,CACjB,QAAAG,EACA,IAAAC,EACA,IAAKC,EACL,IAAAC,EACA,MAAAC,CACF,IAAqC,CACnC,IAAIC,EACAC,EAAsB,GAE1B,GAAIL,EAAI,SAAS,GAAG,EAAG,CACrB,IAAIM,EAAOP,EACX,MAAMQ,EAAOP,EAAI,MAAM,GAAG,EAE1B,SAAW,CAACQ,EAAOC,CAAG,IAAKF,EAAK,QAAA,EAC9B,GAAIE,KAAOH,EACT,GAAIE,IAAUD,EAAK,OAAS,EAC1BF,EAAsB,GACtBD,EAAwBE,EAAKG,CAAG,EAChC,OAAOH,EAAKG,CAAG,UACNC,EAAcJ,EAAKG,CAAG,CAAC,EAChCH,EAAOA,EAAKG,CAAG,MACV,MAGb,MAAWT,KAAOD,IAChBK,EAAwBL,EAAQC,CAAG,EACnCK,EAAsB,GACtB,OAAON,EAAQC,CAAG,GAGpB,GAAIK,EASF,GARAR,EAAO,KACL,GAAGc,EAAO,QAAQX,CAAG,CAAC,OAAOW,EAAO,OAAO,YAAY,CAAC,GACtDR,EAAQ,OAAOA,CAAK,GAAK,EAC3B,gBAAgBQ,EAAO,QAAQV,CAAS,CAAC,YACvCC,EAAM,IAAIA,CAAG,GAAK,EACpB,EACF,EAEID,EAAU,SAAS,GAAG,EAAG,CAC3B,MAAMM,EAAON,EAAU,MAAM,GAAG,EAChC,IAAIK,EAAOP,EAEXQ,EAAK,QAAQ,CAACE,EAAKD,IAAU,CACvBA,IAAUD,EAAK,OAAS,EAC1BD,EAAKG,CAAG,EAAIL,GAIZE,EAAKG,CAAG,IAAM,CAAA,EACdH,EAAOA,EAAKG,CAAG,EAEnB,CAAC,CACH,MACEV,EAAQE,CAAS,EAAIG,CAG3B,EAEA,cAAe,CAAC,CACd,QAAAL,EACA,IAAAC,EACA,IAAAE,EACA,IAAKD,EACL,MAAAE,CACF,IAAkC,CAChC,IAAIS,EAAmB,GAEvB,GAAIZ,EAAI,SAAS,GAAG,EAAG,CACrB,IAAIM,EAAOP,EACX,MAAMQ,EAAOP,EAAI,MAAM,GAAG,EAE1B,SAAW,CAACQ,EAAOC,CAAG,IAAKF,EAAK,QAAA,EAC9B,GAAIE,KAAOH,EACT,GAAIE,IAAUD,EAAK,OAAS,EAC1BK,EAAmB,GACnB,OAAON,EAAKG,CAAG,UACNC,EAAcJ,EAAKG,CAAG,CAAC,EAChCH,EAAOA,EAAKG,CAAG,MACV,MAGb,MAAWT,KAAOD,IAChBa,EAAmB,GACnB,OAAOb,EAAQC,CAAG,GAGhBY,GACFf,EAAO,MACL,GAAGc,EAAO,QAAQX,CAAG,CAAC,GACpBG,EAAQ,OAAOA,CAAK,GAAK,EAC3B,OAAOQ,EAAO,IAAI,qBAAqB,CAAC,GACtCV,EACI,gBAAgBU,EAAO,QAAQV,CAAS,CAAC,YACzC,EACN,GAAGC,EAAM;AAAA,EAAKA,CAAG,GAAK,EAAE,EAC1B,CAEJ,CACF,CACF"}