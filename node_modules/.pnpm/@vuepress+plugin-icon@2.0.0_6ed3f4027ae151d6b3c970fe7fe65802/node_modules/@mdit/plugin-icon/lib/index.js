import{escapeHtml as R}from"@mdit/helper";const L=(e,t)=>{let n=!1;const s=e.posMax,o=e.pos;if(e.src.charCodeAt(o)!==58||e.src.charCodeAt(o+1)!==58)return!1;const r=e.src.charCodeAt(o+2);if(r===32||r===58||t||s-o<5)return!1;for(e.pos=o+2;e.pos<s;){if(e.src.charCodeAt(e.pos)===58&&e.src.charCodeAt(e.pos+1)===58){n=!0;break}e.md.inline.skipToken(e)}if(!n||o+2===e.pos||e.src.charCodeAt(e.pos-1)===32)return e.pos=o,!1;const a=e.src.slice(o+2,e.pos);e.posMax=e.pos,e.pos=o+2;const i=e.push("icon","i",0);return i.markup="::",i.content=a,e.pos=e.posMax+2,e.posMax=s,!0},b=(e,{render:t=n=>`<i class="${n}"></i>`}={})=>{e.inline.ruler.before("link","icon",L),e.renderer.rules.icon=(n,s,o,r)=>t(n[s].content,r)},g=/(?<=\s|^)=(.+?)(?:\s|$)/,E=e=>{let t="";return e.content=e.content.replace(g,(n,s)=>(t=s,"")).trim(),t&&(e.size=Number.isNaN(Number(t))?t:`${t}px`),e},k=/(?<=\s|^)\/(.+?)(?:\s|$)/,O=e=>{let t="";return e.content=e.content.replace(k,(n,s)=>(t=s,"")).trim(),t&&(e.color=t),e},_="[A-z_][a-zA-Z0-9_-]*",C=new RegExp(`\\b(?<attr>${_})=(?:(?<quote>['"])(?<valueWithQuotes>(?:.(?!\\k<quote>\\s+(?:${_})=|(?<!\\\\)\\k<quote>))+.)\\k<quote>|(?<emptyValue>''|"")|(?<valueWithoutQuotes>\\S+))(?:\\s+|$)`,"g"),x=e=>{const t={},n=e.content.replace(C,(s,o,r,a,i,l,$,h,{attr:W,emptyValue:y,valueWithoutQuotes:N,valueWithQuotes:I,quote:m})=>(t[W]=y?"":N??I.replace(new RegExp(`\\\\${m}`,"g"),m),"")).trim();return{...e,attrs:t,content:n}},f=e=>O(E(x(e))),c=(e,t)=>{const{style:n=""}=e;return e.style=`${n}${n&&!n.endsWith(";")?";":""}${t}`,e},p=e=>{const t=Object.entries(e).map(([n,s])=>`${n}="${R(s)}"`).join(" ");return t?` ${t}`:""},w=e=>{const{attrs:t,content:n,size:s,color:o}=f({content:e});return s&&c(t,`font-size:${s}`),o&&c(t,`color:${o}`),`<i icon="${n}"${p(t)}></i>`},q=e=>{const{attrs:t,content:n,size:s,color:o}=f({content:e});return s&&c(t,`font-size:${s}`),o&&c(t,`color:${o}`),`<iconify-icon icon="${n}"${p(t)}></iconify-icon>`},d=["fas","fab","far","fal","fat","fass","fasr"],A=["fad","fass","fasr"],T=[...d,...A],S=[...d,"fa-solid","fa-brands","fa-regular","fa-light","fa-thin"],F=[...A,"fa-duotone","fa-sharp","fa-sharp-duotone"],v=[...S,...F],M=e=>T.includes(e),z=e=>S.includes(e),u=e=>e.startsWith("fa-")||M(e)?e:`fa-${e}`,H=e=>{const{attrs:t,content:n,size:s,color:o}=f({content:e});s&&c(t,`font-size:${s}`),o&&c(t,`color:${o}`);const r=n.split(/\s+/),a=[],i=r.findIndex(l=>l.includes(":"));if(i===-1)a.push(...r.map(u)),a.every(l=>!z(l))&&a.push("fa-solid");else{const[l]=r.splice(i,1),[$,h]=l.split(":",2);a.push($.length<=2?`fa${$}`:u($),u(h),...r.map(u))}return`<i class="${a.join(" ")}"${p(t)}></i>`},Q=e=>{const{attrs:t,content:n,size:s,color:o}=f({content:e});return s&&c(t,`font-size:${s}`),o&&c(t,`color:${o}`),`<span class="iconfont icon-${n}"${p(t)}></span>`};export{S as FONTAWESOME_FAMILIES,v as FONTAWESOME_FAMILIES_AND_STYLES,d as FONTAWESOME_FAMILY_SHORT_ALIAS,T as FONTAWESOME_SHORT_ALIAS,F as FONTAWESOME_STYLES,A as FONTAWESOME_STYLES_SHORT_ALIAS,u as appendFontawesomePrefix,c as appendStyle,w as defaultRender,x as extractAttrs,O as extractColor,f as extractInfo,E as extractSize,H as fontawesomeRender,b as icon,Q as iconfontRender,q as iconifyRender,z as isFontawesomeFamily,M as isFontawesomeShortAlias,p as stringifyAttrs};
//# sourceMappingURL=index.js.map
