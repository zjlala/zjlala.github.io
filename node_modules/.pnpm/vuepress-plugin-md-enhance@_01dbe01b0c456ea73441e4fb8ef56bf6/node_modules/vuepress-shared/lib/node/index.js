import{Logger as u,isPlainObject as $}from"@vuepress/helper";import{colors as c}from"vuepress/utils";const m=g=>{const d=new u(g);return{deprecatedLogger:({options:o,old:e,new:l,msg:f,scope:p})=>{let i,n=!1;if(e.includes(".")){let s=o;const r=e.split(".");for(const[t,a]of r.entries())if(a in s)if(t===r.length-1)n=!0,i=s[a],delete s[a];else if($(s[a]))s=s[a];else break}else e in o&&(i=o[e],n=!0,delete o[e]);if(n)if(d.warn(`${c.magenta(e)} is ${c.yellow("deprecated")}${p?` in ${p}`:""}, please use ${c.magenta(l)} instead.${f?` ${f}`:""}`),l.includes(".")){const s=l.split(".");let r=o;s.forEach((t,a)=>{a===s.length-1?r[t]=i:(r[t]||={},r=r[t])})}else o[l]=i},droppedLogger:({options:o,old:e,msg:l,new:f,scope:p})=>{let i=!1;if(e.includes(".")){let n=o;const s=e.split(".");for(const[r,t]of s.entries())if(t in n)if(r===s.length-1)i=!0,delete n[t];else if($(n[t]))n=n[t];else break}else e in o&&(i=!0,delete o[e]);i&&d.error(`${c.magenta(e)}${p?` in ${p}`:""} is ${c.red("no longer supported")}${f?`, please use ${c.magenta(f)} instead.`:""}${l?`
${l}`:""}`)}}};export{m as createConverter};
//# sourceMappingURL=index.js.map
