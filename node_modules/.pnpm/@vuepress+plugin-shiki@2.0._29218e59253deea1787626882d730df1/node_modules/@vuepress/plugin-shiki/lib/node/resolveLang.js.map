{"version":3,"file":"resolveLang.js","sources":["../../src/node/resolveLang.ts"],"sourcesContent":["import type {\n  DynamicImportLanguageRegistration,\n  LanguageRegistration,\n} from 'shiki'\nimport { bundledLanguages } from 'shiki'\nimport { runAsWorker } from 'synckit'\n\nasync function resolveLang(lang: string): Promise<LanguageRegistration[]> {\n  return (\n    (\n      bundledLanguages as Record<\n        string,\n        DynamicImportLanguageRegistration | undefined\n      >\n    )\n      [lang]?.()\n      .then((m) => m.default) ?? []\n  )\n}\n\nrunAsWorker(resolveLang)\n\nexport type ShikiResolveLang = typeof resolveLang\n"],"names":["resolveLang","lang","bundledLanguages","m","runAsWorker"],"mappings":"+EAOA,eAAeA,EAAYC,EAA+C,CACxE,OAEIC,EAKCD,CAAI,IAAA,EACJ,KAAME,GAAMA,EAAE,OAAO,GAAK,CAAA,CAEjC,CAEAC,EAAYJ,CAAW"}