{"version":3,"file":"index.js","sources":["../../src/node/markdown-it-plugins/chartjs.ts","../../src/node/markdown-it-plugins/echarts.ts","../../src/node/markdown-it-plugins/flowchart.ts","../../src/node/markdown-it-plugins/markmap.ts","../../src/node/markdown-it-plugins/mermaid.ts","../../src/node/markdown-it-plugins/plantuml.ts","../../src/node/utils.ts","../../src/node/prepareConfigFile.ts","../../src/node/markdownChartPlugin.ts"],"sourcesContent":["import { container } from '@mdit/plugin-container'\nimport { encodeData } from '@vuepress/helper'\nimport type { PluginSimple } from 'markdown-it'\n\n/**\n * Chart.js markdown-it plugin\n *\n * Chart.js markdown-it 插件\n */\nexport const chartjs: PluginSimple = (md) => {\n  container(md, {\n    name: 'chartjs',\n    openRender: (tokens, index) => {\n      const title = tokens[index].info\n        .trimStart()\n        // \"chartjs\" length\n        .slice(7)\n        .trim()\n\n      let config = '{}'\n      let configType = ''\n\n      for (let i = index; i < tokens.length; i++) {\n        const { type, content, info } = tokens[i]\n\n        if (type === 'container_chartjs_close') break\n\n        if (!content) continue\n        if (type === 'fence')\n          if (info === 'json') {\n            config = encodeData(content)\n            configType = 'json'\n          } else if (info === 'js' || info === 'javascript') {\n            config = encodeData(content)\n            configType = 'js'\n          }\n\n        // Set to an unknown token type\n        tokens[i].type = 'chartjs_empty'\n        // Hide token\n        tokens[i].hidden = true\n      }\n\n      return `<ChartJS config=\"${config}\" ${\n        title ? `title=\"${encodeURIComponent(title)}\" ` : ''\n      }type=\"${configType}\">`\n    },\n    closeRender: () => `</ChartJS>`,\n  })\n}\n","import { container } from '@mdit/plugin-container'\nimport { encodeData } from '@vuepress/helper'\nimport type { PluginSimple } from 'markdown-it'\nimport type Token from 'markdown-it/lib/token.mjs'\n\nconst echartsRender = (tokens: Token[], index: number): string => {\n  const { content, info } = tokens[index]\n  const title = info.trim().split(':', 2)[1]\n\n  return `<ECharts config=\"${encodeData(content)}\"${\n    title ? ` title=\"${encodeURIComponent(title)}\"` : ''\n  }></ECharts>`\n}\n\n/**\n * ECharts markdown-it plugin\n *\n * ECharts markdown-it 插件\n */\nexport const echarts: PluginSimple = (md) => {\n  // Handle ```echarts blocks\n  const { fence } = md.renderer.rules\n\n  md.renderer.rules.fence = (...args): string => {\n    const [tokens, index] = args\n    const { info } = tokens[index]\n    const realInfo = info.split(':', 2)[0]\n\n    if (realInfo === 'echarts') return echartsRender(tokens, index)\n\n    return fence!(...args)\n  }\n\n  md.renderer.rules.echarts = echartsRender\n\n  container(md, {\n    name: 'echarts',\n\n    openRender: (tokens, index) => {\n      const title = tokens[index].info\n        .trimStart()\n        // 'echarts' length\n        .slice(7)\n        .trim()\n\n      let config = '{}'\n      let isJavaScript = false\n\n      for (let i = index; i < tokens.length; i++) {\n        const { type, content, info } = tokens[i]\n\n        if (type === 'container_echarts_close') break\n\n        if (!content) continue\n        if (type === 'fence')\n          if (info === 'json') {\n            config = content\n          } else if (info === 'js' || info === 'javascript') {\n            config = content\n            isJavaScript = true\n          }\n\n        // Set to an unknown token type\n        tokens[i].type = 'echarts_empty'\n        // Hide token\n        tokens[i].hidden = true\n      }\n\n      return `<ECharts config=\"${encodeData(config)}\"${\n        title ? ` title=\"${encodeURIComponent(title)}\"` : ''\n      }${isJavaScript ? ' type=\"js\"' : ''}>`\n    },\n    closeRender: () => `</ECharts>`,\n  })\n}\n","import { encodeData } from '@vuepress/helper'\nimport type { PluginSimple } from 'markdown-it'\nimport type Token from 'markdown-it/lib/token.mjs'\n\nconst SUPPORTED_PRESETS = ['ant', 'pie', 'vue']\n\nconst flowchartRender = (tokens: Token[], index: number): string => {\n  const token = tokens[index]\n  const { content, info } = token\n  const preset = info.trim().split(':', 2)[1]\n\n  return `<FlowChart code=\"${encodeData(content)}\" preset=\"${\n    SUPPORTED_PRESETS.includes(preset) ? preset : 'vue'\n  }\"></FlowChart>`\n}\n\n/**\n * Flowchart markdown-it plugin\n *\n * Flowchart markdown-it 插件\n */\nexport const flowchart: PluginSimple = (md) => {\n  // Handle ```flow and ```flowchart blocks\n  const { fence } = md.renderer.rules\n\n  md.renderer.rules.fence = (...args): string => {\n    const [tokens, index] = args\n    const { info } = tokens[index]\n    const [realInfo] = info.split(':', 2)\n\n    if (realInfo === 'flow' || realInfo === 'flowchart')\n      return flowchartRender(tokens, index)\n\n    return fence!(...args)\n  }\n\n  md.renderer.rules.flowchart = flowchartRender\n}\n","import { encodeData } from '@vuepress/helper'\nimport type { PluginSimple } from 'markdown-it'\nimport type Token from 'markdown-it/lib/token.mjs'\n\nconst markmapRender = (tokens: Token[], index: number): string =>\n  `<MarkMap content=\"${encodeData(tokens[index].content)}\"></MarkMap>`\n\n/**\n * Markmap markdown-it plugin\n *\n * Markmap markdown-it 插件\n */\nexport const markmap: PluginSimple = (md) => {\n  // Handle ```markmap blocks\n  const { fence } = md.renderer.rules\n\n  md.renderer.rules.fence = (...args): string => {\n    const [tokens, index] = args\n    const { info } = tokens[index]\n    const [realInfo] = info.split(':', 2)\n\n    if (realInfo === 'markmap') return markmapRender(tokens, index)\n\n    return fence!(...args)\n  }\n\n  md.renderer.rules.markmap = markmapRender\n}\n","import { encodeData } from '@vuepress/helper'\nimport type { PluginSimple } from 'markdown-it'\nimport type { RenderRule } from 'markdown-it/lib/renderer.mjs'\n\nconst mermaidRenderer: RenderRule = (tokens, index) =>\n  `<Mermaid code=\"${encodeData(tokens[index].content)}\"></Mermaid>`\n\ninterface MermaidOptions {\n  content: string\n  diagram?: string\n  title?: string\n  indent?: boolean\n}\n\n/**\n * Get Mermaid content with proper formatting\n *\n * 获取格式化的 Mermaid 内容\n *\n * @param options - Mermaid options / Mermaid 选项\n *\n * @returns Formatted Mermaid content / 格式化的 Mermaid 内容\n */\nexport const getMermaidContent = ({\n  diagram = 'mermaid',\n  content,\n  title = '',\n  indent = diagram !== 'mermaid',\n}: MermaidOptions): string => {\n  const [, originalFrontmatter, rest] =\n    /^\\s*---\\n([^]*?)\\n---\\n\\n([\\s\\S]*)\\s*$/m.exec(content) ?? [\n      null,\n      '',\n      content,\n    ]\n\n  const frontmatter = (\n    !title || /^title:\\s*(.*)/m.test(originalFrontmatter)\n      ? originalFrontmatter\n      : `title: ${title}\\n${originalFrontmatter}`\n  ).trim()\n\n  return `\\\n${\n  frontmatter\n    ? `\\\n---\n${frontmatter}\n---\n\n`\n    : ''\n}\\\n${\n  diagram === 'mermaid'\n    ? ''\n    : `\\\n${diagram}\n`\n}\\\n${\n  indent\n    ? rest\n        .split('\\n')\n        .map((line) => (line ? `  ${line}` : ''))\n        .join('\\n')\n    : rest\n}\\\n`\n}\n\nconst getMermaid = (options: MermaidOptions): string =>\n  `<Mermaid code=\"${encodeData(getMermaidContent(options))}\"${\n    options.title ? ` title=\"${encodeData(options.title)}\"` : ''\n  }></Mermaid>`\n\nconst DIAGRAM_MAP: Record<string, [diagramName: string, indent?: boolean]> = {\n  'class': ['classDiagram'],\n  'c4c': ['C4Context'],\n  'er': ['erDiagram'],\n  'gantt': [''],\n  'git-graph': ['gitGraph'],\n  'journey': [''],\n  'mindmap': [''],\n  'kanban': [''],\n  'pie': [''],\n  'quadrant': ['quadrantChart'],\n  'requirement': ['requirementDiagram'],\n  'sequence': ['sequenceDiagram'],\n  'state': ['stateDiagram-v2'],\n  'timeline': [''],\n\n  // beta diagrams\n  'architecture': ['architecture-beta'],\n  'block': ['block-beta', false],\n  'packet': ['packet-beta', false],\n  'sankey': ['sankey-beta', false],\n  'xy': ['xychart-beta', false],\n  'treemap': ['treemap-beta', false],\n  'radar': ['radar-beta'],\n}\n\n/**\n * Mermaid markdown-it plugin\n *\n * Mermaid markdown-it 插件\n */\nexport const mermaid: PluginSimple = (md) => {\n  // Handle ```mermaid blocks\n  const { fence } = md.renderer.rules\n\n  md.renderer.rules.fence = (...args): string => {\n    const [tokens, index] = args\n    const { content, info } = tokens[index]\n\n    const fenceInfo = info.trim()\n\n    if (fenceInfo === 'mermaid') return getMermaid({ content, indent: false })\n\n    const [name, ...rest] = fenceInfo.split(' ')\n\n    if (name in DIAGRAM_MAP)\n      return getMermaid({\n        diagram: DIAGRAM_MAP[name][0] || name,\n        title: rest.join(' '),\n        content,\n        indent: DIAGRAM_MAP[name][1] ?? true,\n      })\n\n    return fence!(...args)\n  }\n\n  md.renderer.rules.mermaid = mermaidRenderer\n}\n","import type { MarkdownItPlantumlOptions } from '@mdit/plugin-plantuml'\nimport { plantuml as _plantuml } from '@mdit/plugin-plantuml'\nimport type { PluginWithOptions } from 'markdown-it'\n\n/**\n * PlantUML markdown-it plugin\n *\n * PlantUML markdown-it 插件\n *\n * @param md - MarkdownIt instance / MarkdownIt 实例\n * @param options - PlantUML options / PlantUML 选项\n */\nexport const plantuml: PluginWithOptions<MarkdownItPlantumlOptions[]> = (\n  md,\n  options = [\n    'chronology',\n    'gantt',\n    'json',\n    'latex',\n    'math',\n    'mindmap',\n    'regex',\n    'salt',\n    'uml',\n    'wbs',\n    'yaml',\n  ].map((name) => ({ name })),\n) => {\n  options.forEach((option) => {\n    md.use(_plantuml, option)\n  })\n}\n","import { Logger, ensureEndingSlash, isModuleAvailable } from '@vuepress/helper'\nimport { getDirname, path } from 'vuepress/utils'\n\nconst __dirname = getDirname(import.meta.url)\n\nexport const PLUGIN_NAME = '@vuepress/plugin-markdown-chart'\n\nexport const logger = new Logger(PLUGIN_NAME)\n\nexport const CLIENT_FOLDER = ensureEndingSlash(\n  path.resolve(__dirname, '../client'),\n)\n\nexport const isInstalled = (pkg: string, hint = true): boolean => {\n  const status = isModuleAvailable(pkg, import.meta)\n\n  if (hint && !status)\n    logger.error(`Package ${pkg} is not installed, please install it manually!`)\n\n  return status\n}\n","import type { App } from 'vuepress/core'\n\nimport { CLIENT_FOLDER } from './utils.js'\n\nexport const prepareConfigFile = async (\n  app: App,\n  status: Record<string, boolean>,\n): Promise<string> => {\n  const imports = new Set<string>()\n  const enhances = new Set<string>()\n\n  if (status.chartjs) {\n    imports.add(`import ChartJS from \"${CLIENT_FOLDER}components/ChartJS.js\";`)\n    enhances.add(`app.component(\"ChartJS\", ChartJS)`)\n  }\n\n  if (status.echarts) {\n    imports.add(`import ECharts from \"${CLIENT_FOLDER}components/ECharts.js\";`)\n    enhances.add(`app.component(\"ECharts\", ECharts);`)\n  }\n\n  if (status.flowchart) {\n    imports.add(\n      `import FlowChart from \"${CLIENT_FOLDER}components/FlowChart.js\";`,\n    )\n\n    enhances.add(`app.component(\"FlowChart\", FlowChart);`)\n  }\n\n  if (status.markmap) {\n    imports.add(`import MarkMap from \"${CLIENT_FOLDER}components/MarkMap.js\";`)\n    enhances.add(`app.component(\"MarkMap\", MarkMap);`)\n  }\n\n  if (status.mermaid) {\n    imports.add(`import Mermaid from \"${CLIENT_FOLDER}components/Mermaid.js\";`)\n    enhances.add(`app.component(\"Mermaid\", Mermaid);`)\n  }\n\n  return app.writeTemp(\n    `markdown-chart/config.js`,\n    `\\\nimport { defineClientConfig } from \"vuepress/client\";\n${Array.from(imports.values()).join('\\n')}\n\nexport default defineClientConfig({\n  enhance: ({ app }) => {\n${Array.from(enhances.values())\n  .map((item) => item.split('\\n').map((line) => `    ${line}`))\n  .flat()\n  .join('\\n')}\n  },\n});\n`,\n  )\n}\n","import {\n  addViteOptimizeDepsExclude,\n  addViteOptimizeDepsInclude,\n  addViteSsrExternal,\n  addViteSsrNoExternal,\n  isArray,\n} from '@vuepress/helper'\nimport type { Plugin } from 'vuepress/core'\nimport {\n  chartjs,\n  echarts,\n  flowchart,\n  markmap,\n  mermaid,\n  plantuml,\n} from './markdown-it-plugins/index.js'\nimport type { MarkdownChartPluginOptions } from './options.js'\nimport { prepareConfigFile } from './prepareConfigFile.js'\nimport { PLUGIN_NAME, isInstalled, logger } from './utils.js'\n\n/**\n * Markdown chart plugin\n *\n * Markdown 图表插件\n *\n * @param options - Plugin options / 插件选项\n * @returns VuePress plugin / VuePress 插件\n *\n * @example\n * ```ts\n * import { markdownChartPlugin } from '@vuepress/plugin-markdown-chart'\n *\n * export default {\n *   plugins: [\n *     markdownChartPlugin({\n *       chartjs: true,\n *       echarts: true,\n *       flowchart: true,\n *       markmap: true,\n *       mermaid: true,\n *       plantuml: true,\n *     }),\n *   ],\n * }\n * ```\n */\nexport const markdownChartPlugin =\n  (options: MarkdownChartPluginOptions = {}): Plugin =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    const getStatus = (\n      key: keyof MarkdownChartPluginOptions,\n      pkgs: string[] = [],\n    ): boolean => {\n      const enabled = Boolean(options[key])\n      const pkgInstalled = pkgs.every((pkg) =>\n        isInstalled(pkg, Boolean(options[key])),\n      )\n\n      return enabled && pkgInstalled\n    }\n\n    const status = {\n      chartjs: getStatus('chartjs', ['chart.js']),\n      echarts: getStatus('echarts', ['echarts']),\n      flowchart: getStatus('flowchart', ['flowchart.ts']),\n      markmap: getStatus('markmap', [\n        'markmap-lib',\n        'markmap-toolbar',\n        'markmap-view',\n      ]),\n      mermaid: getStatus('mermaid', ['mermaid']),\n    }\n\n    return {\n      name: PLUGIN_NAME,\n\n      extendsMarkdown: (md) => {\n        if (status.chartjs) md.use(chartjs)\n        if (status.echarts) md.use(echarts)\n        if (status.flowchart) md.use(flowchart)\n        if (isArray(options.plantuml)) md.use(plantuml, options.plantuml)\n        else if (options.plantuml) md.use(plantuml)\n        if (status.markmap) md.use(markmap)\n        if (status.mermaid) md.use(mermaid)\n      },\n\n      extendsBundlerOptions: (bundlerOptions: unknown): void => {\n        addViteSsrNoExternal(bundlerOptions, app, [\n          '@vuepress/helper',\n          'fflate',\n        ])\n\n        if (status.chartjs) {\n          addViteOptimizeDepsExclude(\n            bundlerOptions,\n            app,\n            'chart.js/auto/auto.mjs',\n          )\n          addViteSsrExternal(bundlerOptions, app, 'chart.js')\n        }\n\n        if (status.echarts) {\n          addViteOptimizeDepsExclude(bundlerOptions, app, 'echarts')\n          addViteSsrExternal(bundlerOptions, app, 'echarts')\n        }\n\n        if (status.flowchart) {\n          addViteOptimizeDepsExclude(bundlerOptions, app, 'flowchart.ts')\n          addViteSsrExternal(bundlerOptions, app, 'flowchart.ts')\n        }\n\n        if (status.markmap) {\n          addViteOptimizeDepsInclude(bundlerOptions, app, [\n            'markmap-lib',\n            'markmap-toolbar',\n            'markmap-view',\n          ])\n          addViteSsrExternal(bundlerOptions, app, [\n            'markmap-lib',\n            'markmap-toolbar',\n            'markmap-view',\n          ])\n        }\n\n        if (status.mermaid) {\n          addViteOptimizeDepsExclude(\n            bundlerOptions,\n            app,\n            'mermaid/dist/mermaid.esm.min.mjs',\n          )\n          addViteSsrExternal(bundlerOptions, app, 'mermaid')\n        }\n      },\n\n      clientConfigFile: () => prepareConfigFile(app, status),\n    }\n  }\n"],"names":["chartjs","md","container","tokens","index","title","config","configType","i","type","content","info","encodeData","echartsRender","echarts","fence","args","isJavaScript","SUPPORTED_PRESETS","flowchartRender","token","preset","flowchart","realInfo","markmapRender","markmap","mermaidRenderer","getMermaidContent","diagram","indent","originalFrontmatter","rest","frontmatter","line","getMermaid","options","DIAGRAM_MAP","mermaid","fenceInfo","name","plantuml","option","_plantuml","__dirname","getDirname","PLUGIN_NAME","logger","Logger","CLIENT_FOLDER","ensureEndingSlash","path","isInstalled","pkg","hint","status","isModuleAvailable","prepareConfigFile","app","imports","enhances","item","markdownChartPlugin","getStatus","key","pkgs","enabled","pkgInstalled","isArray","bundlerOptions","addViteSsrNoExternal","addViteOptimizeDepsExclude","addViteSsrExternal","addViteOptimizeDepsInclude"],"mappings":"iYASO,MAAMA,EAAyBC,GAAO,CAC3CC,EAAUD,EAAI,CACZ,KAAM,UACN,WAAY,CAACE,EAAQC,IAAU,CAC7B,MAAMC,EAAQF,EAAOC,CAAK,EAAE,KACzB,YAEA,MAAM,CAAC,EACP,KAAA,EAEH,IAAIE,EAAS,KACTC,EAAa,GAEjB,QAASC,EAAIJ,EAAOI,EAAIL,EAAO,OAAQK,IAAK,CAC1C,KAAM,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,CAAK,EAAIR,EAAOK,CAAC,EAExC,GAAIC,IAAS,0BAA2B,MAEnCC,IACDD,IAAS,UACPE,IAAS,QACXL,EAASM,EAAWF,CAAO,EAC3BH,EAAa,SACJI,IAAS,MAAQA,IAAS,gBACnCL,EAASM,EAAWF,CAAO,EAC3BH,EAAa,OAIjBJ,EAAOK,CAAC,EAAE,KAAO,gBAEjBL,EAAOK,CAAC,EAAE,OAAS,GACrB,CAEA,MAAO,oBAAoBF,CAAM,KAC/BD,EAAQ,UAAU,mBAAmBA,CAAK,CAAC,KAAO,EACpD,SAASE,CAAU,IACrB,EACA,YAAa,IAAM,YACrB,CAAC,CACH,EC5CMM,EAAgB,CAACV,EAAiBC,IAA0B,CAChE,KAAM,CAAE,QAAAM,EAAS,KAAAC,CAAK,EAAIR,EAAOC,CAAK,EAChCC,EAAQM,EAAK,KAAA,EAAO,MAAM,IAAK,CAAC,EAAE,CAAC,EAEzC,MAAO,oBAAoBC,EAAWF,CAAO,CAAC,IAC5CL,EAAQ,WAAW,mBAAmBA,CAAK,CAAC,IAAM,EACpD,aACF,EAOaS,EAAyBb,GAAO,CAE3C,KAAM,CAAE,MAAAc,CAAM,EAAId,EAAG,SAAS,MAE9BA,EAAG,SAAS,MAAM,MAAQ,IAAIe,IAAiB,CAC7C,KAAM,CAACb,EAAQC,CAAK,EAAIY,EAClB,CAAE,KAAAL,CAAK,EAAIR,EAAOC,CAAK,EAG7B,OAFiBO,EAAK,MAAM,IAAK,CAAC,EAAE,CAAC,IAEpB,UAAkBE,EAAcV,EAAQC,CAAK,EAEvDW,EAAO,GAAGC,CAAI,CACvB,EAEAf,EAAG,SAAS,MAAM,QAAUY,EAE5BX,EAAUD,EAAI,CACZ,KAAM,UAEN,WAAY,CAACE,EAAQC,IAAU,CAC7B,MAAMC,EAAQF,EAAOC,CAAK,EAAE,KACzB,YAEA,MAAM,CAAC,EACP,OAEH,IAAIE,EAAS,KACTW,EAAe,GAEnB,QAAST,EAAIJ,EAAOI,EAAIL,EAAO,OAAQK,IAAK,CAC1C,KAAM,CAAE,KAAAC,EAAM,QAAAC,EAAS,KAAAC,CAAK,EAAIR,EAAOK,CAAC,EAExC,GAAIC,IAAS,0BAA2B,MAEnCC,IACDD,IAAS,UACPE,IAAS,OACXL,EAASI,GACAC,IAAS,MAAQA,IAAS,gBACnCL,EAASI,EACTO,EAAe,KAInBd,EAAOK,CAAC,EAAE,KAAO,gBAEjBL,EAAOK,CAAC,EAAE,OAAS,GACrB,CAEA,MAAO,oBAAoBI,EAAWN,CAAM,CAAC,IAC3CD,EAAQ,WAAW,mBAAmBA,CAAK,CAAC,IAAM,EACpD,GAAGY,EAAe,aAAe,EAAE,GACrC,EACA,YAAa,IAAM,YACrB,CAAC,CACH,ECtEMC,EAAoB,CAAC,MAAO,MAAO,KAAK,EAExCC,EAAkB,CAAChB,EAAiBC,IAA0B,CAClE,MAAMgB,EAAQjB,EAAOC,CAAK,EACpB,CAAE,QAAAM,EAAS,KAAAC,CAAK,EAAIS,EACpBC,EAASV,EAAK,KAAA,EAAO,MAAM,IAAK,CAAC,EAAE,CAAC,EAE1C,MAAO,oBAAoBC,EAAWF,CAAO,CAAC,aAC5CQ,EAAkB,SAASG,CAAM,EAAIA,EAAS,KAChD,gBACF,EAOaC,EAA2BrB,GAAO,CAE7C,KAAM,CAAE,MAAAc,CAAM,EAAId,EAAG,SAAS,MAE9BA,EAAG,SAAS,MAAM,MAAQ,IAAIe,IAAiB,CAC7C,KAAM,CAACb,EAAQC,CAAK,EAAIY,EAClB,CAAE,KAAAL,CAAK,EAAIR,EAAOC,CAAK,EACvB,CAACmB,CAAQ,EAAIZ,EAAK,MAAM,IAAK,CAAC,EAEpC,OAAIY,IAAa,QAAUA,IAAa,YAC/BJ,EAAgBhB,EAAQC,CAAK,EAE/BW,EAAO,GAAGC,CAAI,CACvB,EAEAf,EAAG,SAAS,MAAM,UAAYkB,CAChC,ECjCMK,EAAgB,CAACrB,EAAiBC,IACtC,qBAAqBQ,EAAWT,EAAOC,CAAK,EAAE,OAAO,CAAC,eAO3CqB,EAAyBxB,GAAO,CAE3C,KAAM,CAAE,MAAAc,CAAM,EAAId,EAAG,SAAS,MAE9BA,EAAG,SAAS,MAAM,MAAQ,IAAIe,IAAiB,CAC7C,KAAM,CAACb,EAAQC,CAAK,EAAIY,EAClB,CAAE,KAAAL,CAAK,EAAIR,EAAOC,CAAK,EACvB,CAACmB,CAAQ,EAAIZ,EAAK,MAAM,IAAK,CAAC,EAEpC,OAAIY,IAAa,UAAkBC,EAAcrB,EAAQC,CAAK,EAEvDW,EAAO,GAAGC,CAAI,CACvB,EAEAf,EAAG,SAAS,MAAM,QAAUuB,CAC9B,ECvBME,EAA8B,CAACvB,EAAQC,IAC3C,kBAAkBQ,EAAWT,EAAOC,CAAK,EAAE,OAAO,CAAC,eAkBxCuB,EAAoB,CAAC,CAChC,QAAAC,EAAU,UACV,QAAAlB,EACA,MAAAL,EAAQ,GACR,OAAAwB,EAASD,IAAY,SACvB,IAA8B,CAC5B,KAAM,CAAA,CAAGE,EAAqBC,CAAI,EAChC,0CAA0C,KAAKrB,CAAO,GAAK,CACzD,KACA,GACAA,CACF,EAEIsB,GACJ,CAAC3B,GAAS,kBAAkB,KAAKyB,CAAmB,EAChDA,EACA,UAAUzB,CAAK;AAAA,EAAKyB,CAAmB,IAC3C,KAAA,EAEF,MAAO,GAEPE,EACI;AAAA,EAEJA,CAAW;AAAA;AAAA;AAAA,EAIP,EACN,GAEEJ,IAAY,UACR,GACA,GACJA,CAAO;AAAA,CAET,GAEEC,EACIE,EACG,MAAM;AAAA,CAAI,EACV,IAAKE,GAAUA,EAAO,KAAKA,CAAI,GAAK,EAAG,EACvC,KAAK;AAAA,CAAI,EACZF,CACN,EAEA,EAEMG,EAAcC,GAClB,kBAAkBvB,EAAWe,EAAkBQ,CAAO,CAAC,CAAC,IACtDA,EAAQ,MAAQ,WAAWvB,EAAWuB,EAAQ,KAAK,CAAC,IAAM,EAC5D,cAEIC,EAAuE,CAC3E,MAAS,CAAC,cAAc,EACxB,IAAO,CAAC,WAAW,EACnB,GAAM,CAAC,WAAW,EAClB,MAAS,CAAC,EAAE,EACZ,YAAa,CAAC,UAAU,EACxB,QAAW,CAAC,EAAE,EACd,QAAW,CAAC,EAAE,EACd,OAAU,CAAC,EAAE,EACb,IAAO,CAAC,EAAE,EACV,SAAY,CAAC,eAAe,EAC5B,YAAe,CAAC,oBAAoB,EACpC,SAAY,CAAC,iBAAiB,EAC9B,MAAS,CAAC,iBAAiB,EAC3B,SAAY,CAAC,EAAE,EAGf,aAAgB,CAAC,mBAAmB,EACpC,MAAS,CAAC,aAAc,EAAK,EAC7B,OAAU,CAAC,cAAe,EAAK,EAC/B,OAAU,CAAC,cAAe,EAAK,EAC/B,GAAM,CAAC,eAAgB,EAAK,EAC5B,QAAW,CAAC,eAAgB,EAAK,EACjC,MAAS,CAAC,YAAY,CACxB,EAOaC,EAAyBpC,GAAO,CAE3C,KAAM,CAAE,MAAAc,CAAM,EAAId,EAAG,SAAS,MAE9BA,EAAG,SAAS,MAAM,MAAQ,IAAIe,IAAiB,CAC7C,KAAM,CAACb,EAAQC,CAAK,EAAIY,EAClB,CAAE,QAAAN,EAAS,KAAAC,CAAK,EAAIR,EAAOC,CAAK,EAEhCkC,EAAY3B,EAAK,KAAA,EAEvB,GAAI2B,IAAc,UAAW,OAAOJ,EAAW,CAAE,QAAAxB,EAAS,OAAQ,EAAM,CAAC,EAEzE,KAAM,CAAC6B,EAAM,GAAGR,CAAI,EAAIO,EAAU,MAAM,GAAG,EAE3C,OAAIC,KAAQH,EACHF,EAAW,CAChB,QAASE,EAAYG,CAAI,EAAE,CAAC,GAAKA,EACjC,MAAOR,EAAK,KAAK,GAAG,EACpB,QAAArB,EACA,OAAQ0B,EAAYG,CAAI,EAAE,CAAC,GAAK,EAClC,CAAC,EAEIxB,EAAO,GAAGC,CAAI,CACvB,EAEAf,EAAG,SAAS,MAAM,QAAUyB,CAC9B,ECzHac,EAA2D,CACtEvC,EACAkC,EAAU,CACR,aACA,QACA,OACA,QACA,OACA,UACA,QACA,OACA,MACA,MACA,MACF,EAAE,IAAKI,IAAU,CAAE,KAAAA,CAAK,EAAE,IACvB,CACHJ,EAAQ,QAASM,GAAW,CAC1BxC,EAAG,IAAIyC,EAAWD,CAAM,CAC1B,CAAC,CACH,EC5BME,EAAYC,EAAW,YAAY,GAAG,EAE/BC,EAAc,kCAEdC,EAAS,IAAIC,EAAOF,CAAW,EAE/BG,EAAgBC,EAC3BC,EAAK,QAAQP,EAAW,WAAW,CACrC,EAEaQ,EAAc,CAACC,EAAaC,EAAO,KAAkB,CAChE,MAAMC,EAASC,EAAkBH,EAAK,WAAW,EAEjD,OAAIC,GAAQ,CAACC,GACXR,EAAO,MAAM,WAAWM,CAAG,gDAAgD,EAEtEE,CACT,EChBaE,EAAoB,MAC/BC,EACAH,IACoB,CACpB,MAAMI,EAAU,IAAI,IACdC,EAAW,IAAI,IAErB,OAAIL,EAAO,UACTI,EAAQ,IAAI,wBAAwBV,CAAa,yBAAyB,EAC1EW,EAAS,IAAI,mCAAmC,GAG9CL,EAAO,UACTI,EAAQ,IAAI,wBAAwBV,CAAa,yBAAyB,EAC1EW,EAAS,IAAI,oCAAoC,GAG/CL,EAAO,YACTI,EAAQ,IACN,0BAA0BV,CAAa,2BACzC,EAEAW,EAAS,IAAI,wCAAwC,GAGnDL,EAAO,UACTI,EAAQ,IAAI,wBAAwBV,CAAa,yBAAyB,EAC1EW,EAAS,IAAI,oCAAoC,GAG/CL,EAAO,UACTI,EAAQ,IAAI,wBAAwBV,CAAa,yBAAyB,EAC1EW,EAAS,IAAI,oCAAoC,GAG5CF,EAAI,UACT,2BACA;AAAA,EAEF,MAAM,KAAKC,EAAQ,OAAA,CAAQ,EAAE,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA;AAAA,EAIvC,MAAM,KAAKC,EAAS,OAAA,CAAQ,EAC3B,IAAKC,GAASA,EAAK,MAAM;AAAA,CAAI,EAAE,IAAK3B,GAAS,OAAOA,CAAI,EAAE,CAAC,EAC3D,KAAA,EACA,KAAK;AAAA,CAAI,CAAC;AAAA;AAAA;AAAA,CAIX,CACF,ECTa4B,EACX,CAAC1B,EAAsC,CAAA,IACtCsB,GAAQ,CACHA,EAAI,IAAI,SAASX,EAAO,KAAK,WAAYX,CAAO,EAEpD,MAAM2B,EAAY,CAChBC,EACAC,EAAiB,CAAA,IACL,CACZ,MAAMC,EAAU,CAAA,CAAQ9B,EAAQ4B,CAAG,EAC7BG,EAAeF,EAAK,MAAOZ,GAC/BD,EAAYC,EAAK,CAAA,CAAQjB,EAAQ4B,CAAG,CAAE,CACxC,EAEA,OAAOE,GAAWC,CACpB,EAEMZ,EAAS,CACb,QAASQ,EAAU,UAAW,CAAC,UAAU,CAAC,EAC1C,QAASA,EAAU,UAAW,CAAC,SAAS,CAAC,EACzC,UAAWA,EAAU,YAAa,CAAC,cAAc,CAAC,EAClD,QAASA,EAAU,UAAW,CAC5B,cACA,kBACA,cACF,CAAC,EACD,QAASA,EAAU,UAAW,CAAC,SAAS,CAAC,CAC3C,EAEA,MAAO,CACL,KAAMjB,EAEN,gBAAkB5C,GAAO,CACnBqD,EAAO,SAASrD,EAAG,IAAID,CAAO,EAC9BsD,EAAO,SAASrD,EAAG,IAAIa,CAAO,EAC9BwC,EAAO,WAAWrD,EAAG,IAAIqB,CAAS,EAClC6C,EAAQhC,EAAQ,QAAQ,EAAGlC,EAAG,IAAIuC,EAAUL,EAAQ,QAAQ,EACvDA,EAAQ,UAAUlC,EAAG,IAAIuC,CAAQ,EACtCc,EAAO,SAASrD,EAAG,IAAIwB,CAAO,EAC9B6B,EAAO,SAASrD,EAAG,IAAIoC,CAAO,CACpC,EAEA,sBAAwB+B,GAAkC,CACxDC,EAAqBD,EAAgBX,EAAK,CACxC,mBACA,QACF,CAAC,EAEGH,EAAO,UACTgB,EACEF,EACAX,EACA,wBACF,EACAc,EAAmBH,EAAgBX,EAAK,UAAU,GAGhDH,EAAO,UACTgB,EAA2BF,EAAgBX,EAAK,SAAS,EACzDc,EAAmBH,EAAgBX,EAAK,SAAS,GAG/CH,EAAO,YACTgB,EAA2BF,EAAgBX,EAAK,cAAc,EAC9Dc,EAAmBH,EAAgBX,EAAK,cAAc,GAGpDH,EAAO,UACTkB,EAA2BJ,EAAgBX,EAAK,CAC9C,cACA,kBACA,cACF,CAAC,EACDc,EAAmBH,EAAgBX,EAAK,CACtC,cACA,kBACA,cACF,CAAC,GAGCH,EAAO,UACTgB,EACEF,EACAX,EACA,kCACF,EACAc,EAAmBH,EAAgBX,EAAK,SAAS,EAErD,EAEA,iBAAkB,IAAMD,EAAkBC,EAAKH,CAAM,CACvD,CACF"}