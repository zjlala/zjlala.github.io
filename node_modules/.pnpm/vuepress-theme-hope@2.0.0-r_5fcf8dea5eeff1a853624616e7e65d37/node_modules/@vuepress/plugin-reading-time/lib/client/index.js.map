{"version":3,"file":"index.js","sources":["../../src/client/composables/useReadingTimeData.ts","../../src/client/utils/locales.ts","../../src/client/composables/useReadingTimeLocale.ts"],"sourcesContent":["import type { ComputedRef } from 'vue'\nimport { computed } from 'vue'\nimport { usePage } from 'vuepress/client'\nimport type {\n  ReadingTime,\n  ReadingTimePluginPageData,\n} from '../../shared/index.js'\n\n/**\n * Get reading time data of current page\n *\n * 获取当前页面的阅读时间数据\n *\n * @returns reading time data or null if plugin is disabled\n *\n * @example\n * ```ts\n * import { useReadingTimeData } from '@vuepress/plugin-reading-time/client'\n *\n * const readingTimeData = useReadingTimeData()\n * // { minutes: 1.1, words: 100 } or null\n * ```\n */\nexport const useReadingTimeData = (): ComputedRef<ReadingTime | null> => {\n  const page = usePage<Partial<ReadingTimePluginPageData>>()\n\n  return computed(() => page.value.readingTime ?? null)\n}\n","import type {\n  ReadingTime,\n  ReadingTimePluginLocaleData,\n} from '../../shared/index.js'\n\n/**\n * Get reading time locale text\n *\n * 获取阅读时间本地化文字\n *\n * @param readingTime - reading time data\n * @param locale - locale config\n * @returns localized reading time text\n *\n * @example\n * ```ts\n * getReadingTimeLocale(\n *   { minutes: 2.5, words: 500 },\n *   { less1Minute: \"Less than 1 min\", word: \"$word words\", time: \"$time min\" }\n * )\n * // { time: \"3 min\", words: \"500 words\" }\n * ```\n */\nexport const getReadingTimeLocale = (\n  readingTime: ReadingTime,\n  locale: ReadingTimePluginLocaleData,\n): { time: string; words: string } => {\n  const { minutes, words } = readingTime\n  const { less1Minute, word, time } = locale\n\n  return {\n    time:\n      minutes < 1\n        ? less1Minute\n        : time.replace('$time', Math.round(minutes).toString()),\n    words: word.replace('$word', words.toString()),\n  }\n}\n","import type { ExactLocaleConfig } from '@vuepress/helper/client'\nimport { useLocale } from '@vuepress/helper/client'\nimport type { ComputedRef } from 'vue'\nimport { computed } from 'vue'\nimport type { ReadingTimePluginLocaleData } from '../../shared/index.js'\nimport { getReadingTimeLocale } from '../utils/index.js'\nimport { useReadingTimeData } from './useReadingTimeData.js'\n\ndeclare const __READING_TIME_LOCALES__:\n  | ExactLocaleConfig<ReadingTimePluginLocaleData>\n  | undefined\n\nconst DEFAULT_LOCALE = { words: '', time: '' }\n\nconst readingTimeLocales =\n  typeof __READING_TIME_LOCALES__ === 'undefined'\n    ? null\n    : __READING_TIME_LOCALES__\n\n/**\n * Get reading time locale config\n *\n * 获取阅读时间多语言配置\n *\n * @returns reading time locale config or null if plugin is disabled\n */\nexport const useReadingTimeLocaleConfig =\n  (): ComputedRef<ReadingTimePluginLocaleData | null> =>\n    readingTimeLocales ? useLocale(readingTimeLocales) : computed(() => null)\n\n/**\n * Reading time locale interface\n *\n * 阅读时间本地化接口\n */\nexport interface ReadingTimeLocale {\n  /**\n   * Reading time text\n   *\n   * 阅读时间文字\n   */\n  time: string\n\n  /**\n   * Words count text\n   *\n   * 字数统计文字\n   */\n  words: string\n}\n\n/**\n * Get reading time locale data of current page\n *\n * 获取当前页面的阅读时间本地化数据\n *\n * @returns reading time locale data\n *\n * @example\n * ```ts\n * import { useReadingTimeLocale } from '@vuepress/plugin-reading-time/client'\n *\n * const readingTimeLocale = useReadingTimeLocale()\n * // { time: \"1 minute\", words: \"100 words\" }\n * ```\n */\nexport const useReadingTimeLocale = (): ComputedRef<ReadingTimeLocale> => {\n  if (readingTimeLocales === null) return computed(() => DEFAULT_LOCALE)\n\n  const readingTime = useReadingTimeData()\n  const readingTimeLocale = useReadingTimeLocaleConfig()\n\n  return computed(() =>\n    readingTime.value && readingTimeLocale.value\n      ? getReadingTimeLocale(readingTime.value, readingTimeLocale.value)\n      : DEFAULT_LOCALE,\n  )\n}\n"],"names":["useReadingTimeData","page","usePage","computed","getReadingTimeLocale","readingTime","locale","minutes","words","less1Minute","word","time","DEFAULT_LOCALE","readingTimeLocales","useReadingTimeLocaleConfig","useLocale","useReadingTimeLocale","readingTimeLocale"],"mappings":"6HAuBO,MAAMA,EAAqB,IAAuC,CACvE,MAAMC,EAAOC,EAAAA,EAEb,OAAOC,EAAS,IAAMF,EAAK,MAAM,aAAe,IAAI,CACtD,ECJaG,EAAuB,CAClCC,EACAC,IACoC,CACpC,KAAM,CAAE,QAAAC,EAAS,MAAAC,CAAM,EAAIH,EACrB,CAAE,YAAAI,EAAa,KAAAC,EAAM,KAAAC,CAAK,EAAIL,EAEpC,MAAO,CACL,KACEC,EAAU,EACNE,EACAE,EAAK,QAAQ,QAAS,KAAK,MAAMJ,CAAO,EAAE,UAAU,EAC1D,MAAOG,EAAK,QAAQ,QAASF,EAAM,SAAA,CAAU,CAC/C,CACF,ECzBMI,EAAiB,CAAE,MAAO,GAAI,KAAM,EAAG,EAEvCC,EACJ,OAAO,yBAA6B,IAChC,KACA,yBASOC,EACX,IACED,EAAqBE,EAAUF,CAAkB,EAAIV,EAAS,IAAM,IAAI,EAsC/Da,EAAuB,IAAsC,CACxE,GAAIH,IAAuB,KAAM,OAAOV,EAAS,IAAMS,CAAc,EAErE,MAAMP,EAAcL,IACdiB,EAAoBH,EAAA,EAE1B,OAAOX,EAAS,IACdE,EAAY,OAASY,EAAkB,MACnCb,EAAqBC,EAAY,MAAOY,EAAkB,KAAK,EAC/DL,CACN,CACF"}