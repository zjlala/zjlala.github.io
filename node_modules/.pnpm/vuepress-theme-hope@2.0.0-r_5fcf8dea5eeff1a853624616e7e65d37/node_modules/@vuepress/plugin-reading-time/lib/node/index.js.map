{"version":3,"file":"index.js","sources":["../../src/node/locales.ts","../../src/node/getReadingTime.ts","../../src/node/logger.ts","../../src/node/readingTimePlugin.ts","../../src/node/useReadingTimePlugin.ts"],"sourcesContent":["import type { DefaultLocaleInfo } from '@vuepress/helper'\nimport type { ReadingTimePluginLocaleData } from '../shared/index.js'\n\n/**\n * Default locale info for `@vuepress/plugin-reading-time`\n */\nexport const readingTimeLocaleInfo: DefaultLocaleInfo<ReadingTimePluginLocaleData> =\n  [\n    [\n      ['en', 'en-US'],\n      {\n        word: 'About $word words',\n        less1Minute: 'Less than 1 minute',\n        time: 'About $time min',\n      },\n    ],\n    [\n      ['zh', 'zh-CN', 'zh-Hans'],\n      {\n        word: '约 $word 字',\n        less1Minute: '小于 1 分钟',\n        time: '大约 $time 分钟',\n      },\n    ],\n    [\n      ['zh-TW', 'zh-Hant'],\n      {\n        word: '約 $word 字',\n        less1Minute: '小於 1 分鐘',\n        time: '大約 $time 分鐘',\n      },\n    ],\n    [\n      ['de', 'de-DE'],\n      {\n        word: 'Ungefähr $word Wörter',\n        less1Minute: 'Weniger als eine Minute',\n        time: 'Ungefähr $time min',\n      },\n    ],\n    [\n      ['vi', 'vi-VN'],\n      {\n        word: 'Khoảng $word từ',\n        less1Minute: 'Ít hơn 1 phút',\n        time: 'Khoảng $time phút',\n      },\n    ],\n    [\n      ['uk'],\n      {\n        word: 'Про $word слова',\n        less1Minute: 'Менше 1 хвилини',\n        time: 'Приблизно $time хв',\n      },\n    ],\n    [\n      ['ru', 'ru-RU'],\n      {\n        word: 'Около $word слов',\n        less1Minute: 'Меньше 1 минуты',\n        time: 'Около $time мин',\n      },\n    ],\n    [\n      ['br'],\n      {\n        word: 'Por volta de $word palavras',\n        less1Minute: 'Menos de 1 minuto',\n        time: 'Por volta de $time min',\n      },\n    ],\n    [\n      ['pl', 'pl-PL'],\n      {\n        word: 'Około $word słów',\n        less1Minute: 'Mniej niż 1 minuta',\n        time: 'Około $time minut',\n      },\n    ],\n    [\n      ['sk', 'sk-SK'],\n      {\n        word: 'Okolo $word slov',\n        less1Minute: 'Menej ako 1 minúta',\n        time: 'Okolo $time minút',\n      },\n    ],\n    [\n      ['fr', 'fr-FR'],\n      {\n        word: 'Environ $word mots',\n        less1Minute: 'Moins de 1 minute',\n        time: 'Environ $time min',\n      },\n    ],\n    [\n      ['es', 'es-ES'],\n      {\n        word: 'Alrededor de $word palabras',\n        less1Minute: 'Menos de 1 minuto',\n        time: 'Alrededor de $time min',\n      },\n    ],\n    [\n      ['ja', 'ja-JP'],\n      { word: '$word字程度', less1Minute: '1分以内', time: '約$time分' },\n    ],\n    [\n      ['tr', 'tr-TR'],\n      {\n        word: 'Yaklaşık $word kelime',\n        less1Minute: '1 dakikadan az',\n        time: 'Yaklaşık $time dakika',\n      },\n    ],\n    [\n      ['ko', 'ko-KO'],\n      { word: '약 $word 단어', less1Minute: '1분 미만', time: '약 $time 분' },\n    ],\n    [\n      ['fi', 'fi-FI'],\n      {\n        word: 'Noin $word sanaa',\n        less1Minute: 'Alle minuutti',\n        time: 'Noin $time minuuttia',\n      },\n    ],\n    [\n      ['hu', 'hu-HU'],\n      {\n        word: 'Körülbelül $word szó',\n        less1Minute: 'Kevesebb, mint 1 perc',\n        time: 'Körülbelül $time perc',\n      },\n    ],\n    [\n      ['id', 'id-ID'],\n      {\n        word: 'Sekitar $word kata',\n        less1Minute: 'Kurang dari 1 menit',\n        time: 'Sekitar $time menit',\n      },\n    ],\n    [\n      ['nl', 'nl-NL'],\n      {\n        word: 'Ongeveer $word woorden',\n        less1Minute: 'Minder dan 1 minuut',\n        time: 'Ongeveer $time minuten',\n      },\n    ],\n  ]\n","import type { ReadingTime } from '../shared/index.js'\n\n/**\n * Extract Latin words from content\n *\n * 从内容中提取拉丁文字\n *\n * @param content - content to extract words from\n * @returns matched words or null\n */\nconst getWords = (content: string): RegExpMatchArray | null =>\n  // \\u00C0-\\u024F are Latin Supplement letters, maybe used in language like french\n  // \\u0400-\\u04FF are Cyrillic letters, used in russian\n  // . @ / are added to ensure email and urls are not splitted\n  content.match(/[\\w\\d\\s\\u00C0-\\u024F\\u0400-\\u04FF.@/]+/giu)\n\n/**\n * Extract Chinese Characters from content\n *\n * 从内容中提取中文字符\n *\n * @param content - content to extract Chinese characters from\n * @returns matched Chinese characters or null\n */\nconst getChinese = (content: string): RegExpMatchArray | null =>\n  content.match(/[\\u4E00-\\u9FD5]/gu)\n\n/**\n * Get word number of given string\n *\n * 获取给定字符串的字数\n *\n * @param content - content to count words\n * @returns word count\n *\n * @example\n * ```ts\n * getWordNumber('Hello world') // 2\n * getWordNumber('你好世界') // 4\n * ```\n */\nexport const getWordNumber = (content: string): number =>\n  (getWords(content)?.reduce<number>(\n    (accumulator, word) =>\n      accumulator + (word.trim() === '' ? 0 : word.trim().split(/\\s+/u).length),\n    0,\n  ) ?? 0) + (getChinese(content)?.length ?? 0)\n\n/**\n * Get reading time info\n *\n * 获取阅读时间信息\n *\n * @param content - content to calculate reading time\n * @param wordsPerMinute - reading speed in words per minute\n * @returns reading time information\n *\n * @default wordsPerMinute 300\n *\n * @example\n * ```ts\n * getReadingTime('Hello world', 300)\n * // { minutes: 0.01, words: 2 }\n * ```\n */\nexport const getReadingTime = (\n  content: string,\n  wordsPerMinute = 300,\n): ReadingTime => {\n  const words = getWordNumber(content || '')\n\n  return {\n    minutes: Math.round((words / wordsPerMinute) * 100) / 100,\n    words,\n  }\n}\n","import { Logger } from '@vuepress/helper'\n\nexport const PLUGIN_NAME = '@vuepress/plugin-reading-time'\n\nexport const logger = new Logger('@vuepress/plugin-reading-time')\n","import { addViteSsrNoExternal, getFullLocaleConfig } from '@vuepress/helper'\nimport type { Page, PluginFunction } from 'vuepress/core'\nimport type { ReadingTime } from '../shared/index.js'\nimport { getReadingTime } from './getReadingTime.js'\nimport { readingTimeLocaleInfo } from './locales.js'\nimport { PLUGIN_NAME, logger } from './logger.js'\nimport type { ReadingTimePluginOptions } from './options.js'\n\n/**\n * Reading time plugin\n *\n * 阅读时间插件\n *\n * @param options - plugin options\n * @returns VuePress plugin function\n *\n * @example\n * ```ts\n * import { readingTimePlugin } from '@vuepress/plugin-reading-time'\n *\n * export default {\n *   plugins: [\n *     readingTimePlugin({\n *       wordPerMinute: 300\n *     })\n *   ]\n * }\n * ```\n */\nexport const readingTimePlugin =\n  (options: ReadingTimePluginOptions = {}): PluginFunction =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options:', options)\n\n    return {\n      name: PLUGIN_NAME,\n\n      define: (): Record<string, unknown> => ({\n        __READING_TIME_LOCALES__: getFullLocaleConfig({\n          app,\n          name: PLUGIN_NAME,\n          default: readingTimeLocaleInfo,\n          config: options.locales,\n        }),\n      }),\n\n      extendsPage: (page: Page<{ readingTime?: ReadingTime }>): void => {\n        page.data.readingTime = getReadingTime(\n          page.content,\n          options.wordPerMinute ?? 300,\n        )\n      },\n\n      extendsBundlerOptions: (bundlerOptions: unknown): void => {\n        addViteSsrNoExternal(bundlerOptions, app, '@vuepress/helper')\n      },\n    }\n  }\n","import type { App } from 'vuepress/core'\nimport type { ReadingTimePluginOptions } from './options.js'\nimport { readingTimePlugin } from './readingTimePlugin.js'\n\n/**\n * Composition API to use `@vuepress/plugin-reading-time`\n *\n * 使用 `@vuepress/plugin-reading-time` 的组合式 API\n *\n * @param app - VuePress app instance\n * @param options - plugin options\n *\n * @example\n * ```ts\n * import { useReadingTimePlugin } from '@vuepress/plugin-reading-time'\n *\n * export default (options) => (app) => {\n *   useReadingTimePlugin(app, {\n *     wordPerMinute: 250\n *   })\n *\n *   return {\n *     name: 'vuepress-plugin-xxx'\n *   }\n * }\n * ```\n */\nexport const useReadingTimePlugin = (\n  app: App,\n  options: ReadingTimePluginOptions = {},\n): void => {\n  const { plugins } = app.pluginApi\n\n  if (\n    plugins.every((plugin) => plugin.name !== '@vuepress/plugin-reading-time')\n  )\n    app.use(readingTimePlugin(options))\n}\n\n/**\n * Composition API to remove `@vuepress/plugin-reading-time`\n *\n * 移除 `@vuepress/plugin-reading-time` 的组合式 API\n *\n * @param app - VuePress app instance\n *\n * @example\n * ```ts\n * import { removeReadingTimePlugin } from '@vuepress/plugin-reading-time'\n *\n * export default (options) => (app) => {\n *   removeReadingTimePlugin(app)\n *\n *   return {\n *     name: 'vuepress-plugin-xxx'\n *   }\n * }\n * ```\n */\nexport const removeReadingTimePlugin = (app: App): void => {\n  const { plugins } = app.pluginApi\n\n  const index = plugins.findIndex(\n    (plugin) => plugin.name === '@vuepress/plugin-reading-time',\n  )\n\n  if (index !== -1) app.pluginApi.plugins.splice(index, 1)\n}\n"],"names":["readingTimeLocaleInfo","getWords","content","getChinese","getWordNumber","accumulator","word","getReadingTime","wordsPerMinute","words","PLUGIN_NAME","logger","Logger","readingTimePlugin","options","app","getFullLocaleConfig","page","bundlerOptions","addViteSsrNoExternal","useReadingTimePlugin","plugins","plugin","removeReadingTimePlugin","index"],"mappings":"6FAMO,MAAMA,EACX,CACE,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,oBACN,YAAa,qBACb,KAAM,iBACR,CACF,EACA,CACE,CAAC,KAAM,QAAS,SAAS,EACzB,CACE,KAAM,YACN,YAAa,UACb,KAAM,aACR,CACF,EACA,CACE,CAAC,QAAS,SAAS,EACnB,CACE,KAAM,YACN,YAAa,UACb,KAAM,aACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,wBACN,YAAa,0BACb,KAAM,oBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,kBACN,YAAa,gBACb,KAAM,mBACR,CACF,EACA,CACE,CAAC,IAAI,EACL,CACE,KAAM,kBACN,YAAa,kBACb,KAAM,oBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,mBACN,YAAa,kBACb,KAAM,iBACR,CACF,EACA,CACE,CAAC,IAAI,EACL,CACE,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,mBACN,YAAa,qBACb,KAAM,mBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,qBACN,YAAa,oBACb,KAAM,mBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,8BACN,YAAa,oBACb,KAAM,wBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CAAE,KAAM,WAAY,YAAa,OAAQ,KAAM,SAAU,CAC3D,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,wBACN,YAAa,iBACb,KAAM,uBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CAAE,KAAM,aAAc,YAAa,QAAS,KAAM,WAAY,CAChE,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,mBACN,YAAa,gBACb,KAAM,sBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,uBACN,YAAa,wBACb,KAAM,uBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,qBACN,YAAa,sBACb,KAAM,qBACR,CACF,EACA,CACE,CAAC,KAAM,OAAO,EACd,CACE,KAAM,yBACN,YAAa,sBACb,KAAM,wBACR,CACF,CACF,EC9IIC,EAAYC,GAIhBA,EAAQ,MAAM,2CAA2C,EAUrDC,EAAcD,GAClBA,EAAQ,MAAM,mBAAmB,EAgBtBE,EAAiBF,IAC3BD,EAASC,CAAO,GAAG,OAClB,CAACG,EAAaC,IACZD,GAAeC,EAAK,KAAA,IAAW,GAAK,EAAIA,EAAK,KAAA,EAAO,MAAM,MAAM,EAAE,QACpE,CACF,GAAK,IAAMH,EAAWD,CAAO,GAAG,QAAU,GAmB/BK,EAAiB,CAC5BL,EACAM,EAAiB,MACD,CAChB,MAAMC,EAAQL,EAAcF,GAAW,EAAE,EAEzC,MAAO,CACL,QAAS,KAAK,MAAOO,EAAQD,EAAkB,GAAG,EAAI,IACtD,MAAAC,CACF,CACF,ECzEaC,EAAc,gCAEdC,EAAS,IAAIC,EAAO,+BAA+B,ECyBnDC,EACX,CAACC,EAAoC,CAAA,IACpCC,IACKA,EAAI,IAAI,SAASJ,EAAO,KAAK,WAAYG,CAAO,EAE7C,CACL,KAAMJ,EAEN,OAAQ,KAAgC,CACtC,yBAA0BM,EAAoB,CAC5C,IAAAD,EACA,KAAML,EACN,QAASV,EACT,OAAQc,EAAQ,OAClB,CAAC,CACH,GAEA,YAAcG,GAAoD,CAChEA,EAAK,KAAK,YAAcV,EACtBU,EAAK,QACLH,EAAQ,eAAiB,GAC3B,CACF,EAEA,sBAAwBI,GAAkC,CACxDC,EAAqBD,EAAgBH,EAAK,kBAAkB,CAC9D,CACF,GC7BSK,EAAuB,CAClCL,EACAD,EAAoC,CAAA,IAC3B,CACT,KAAM,CAAE,QAAAO,CAAQ,EAAIN,EAAI,UAGtBM,EAAQ,MAAOC,GAAWA,EAAO,OAAS,+BAA+B,GAEzEP,EAAI,IAAIF,EAAkBC,CAAO,CAAC,CACtC,EAsBaS,EAA2BR,GAAmB,CACzD,KAAM,CAAE,QAAAM,CAAQ,EAAIN,EAAI,UAElBS,EAAQH,EAAQ,UACnBC,GAAWA,EAAO,OAAS,+BAC9B,EAEIE,IAAU,IAAIT,EAAI,UAAU,QAAQ,OAAOS,EAAO,CAAC,CACzD"}