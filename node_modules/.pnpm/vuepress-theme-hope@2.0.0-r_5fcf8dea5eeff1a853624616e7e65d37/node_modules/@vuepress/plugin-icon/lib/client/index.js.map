{"version":3,"file":"index.js","sources":["../../src/client/components/VPIcon.ts"],"sourcesContent":["import { isLinkAbsolute, isLinkHttp, keys } from '@vuepress/helper/client'\nimport type { CSSProperties, PropType, VNode } from 'vue'\nimport { computed, defineComponent, h } from 'vue'\nimport { withBase } from 'vuepress/client'\n\nimport type { IconType } from '../../shared/index.js'\nimport '../styles/vp-icon.css'\n\nexport const VPIcon = defineComponent({\n  name: 'VPIcon',\n\n  props: {\n    /**\n     * Icon type\n     */\n    type: {\n      type: String as PropType<IconType>,\n      default: 'unknown',\n    },\n\n    /**\n     * Icon prefix\n     */\n    prefix: String,\n\n    /**\n     * Icon class\n     *\n     * 图标类名\n     */\n    icon: String,\n\n    /**\n     * Icon color\n     *\n     * 图标颜色\n     */\n    color: String,\n\n    /**\n     * Icon size\n     *\n     * 图标大小\n     */\n    size: [String, Number],\n\n    /**\n     * Icon vertical align\n     *\n     * 图标垂直对齐方式\n     */\n    verticalAlign: String,\n\n    /**\n     * Icon sizing\n     *\n     * 图标尺寸\n     *\n     * @default 'height' in main content, and 'both' in others\n     */\n    sizing: {\n      type: String as PropType<'both' | 'height' | 'width' | undefined>,\n      default: 'height',\n    },\n  },\n\n  setup(props) {\n    const imageLink = computed(() =>\n      props.icon\n        ? isLinkHttp(props.icon)\n          ? props.icon\n          : isLinkAbsolute(props.icon)\n            ? withBase(props.icon)\n            : null\n        : null,\n    )\n\n    const attrs = computed(() => {\n      const styleObject: CSSProperties = {}\n      const { type, verticalAlign, size, sizing } = props\n      const attrsObject: Record<string, unknown> = {\n        sizing,\n      }\n\n      if (props.color) styleObject.color = props.color\n      if (size)\n        styleObject['--icon-size'] = Number.isNaN(Number(size))\n          ? (size as string)\n          : `${size}px`\n      if (verticalAlign) styleObject['--icon-vertical-align'] = verticalAlign\n\n      if (type === 'iconify') {\n        if (sizing !== 'height') attrsObject.width = props.size || '1em'\n        if (sizing !== 'width') attrsObject.height = props.size || '1em'\n      }\n\n      if (keys(styleObject).length) attrsObject.style = styleObject\n\n      return attrsObject\n    })\n\n    const appendFontawesomePrefix = (icon: string): string =>\n      icon.includes('fa-') || /^fa.$/.test(icon) ? icon : `fa-${icon}`\n\n    return (): VNode | null => {\n      const { type, icon, prefix = '', sizing } = props\n\n      if (!icon) return null\n\n      if (imageLink.value) {\n        return h('img', {\n          'class': 'vp-icon',\n          'src': imageLink.value,\n          'alt': '',\n          'aria-hidden': '',\n          'no-view': '',\n          ...attrs.value,\n        })\n      }\n\n      if (type === 'iconify') {\n        return h('iconify-icon', {\n          key: icon,\n          class: 'vp-icon',\n          // if a icon set is provided, do not add prefix\n          icon: icon.includes(':') ? icon : `${prefix}${icon}`,\n          ...attrs.value,\n        })\n      }\n\n      if (type === 'fontawesome') {\n        const [iconType, rest] = icon.includes(':')\n          ? icon.split(':', 2)\n          : ['fas', icon]\n\n        return h('i', {\n          key: icon,\n          class: [\n            'vp-icon',\n            // declare icon type\n            iconType.length === 1\n              ? `fa${iconType}`\n              : appendFontawesomePrefix(iconType),\n            ...rest.split(' ').map(appendFontawesomePrefix),\n            sizing === 'height' ? '' : 'fa-fw',\n          ],\n          ...attrs.value,\n        })\n      }\n\n      return h('i', {\n        key: icon,\n        class: [\n          'vp-icon',\n          // if multiple classes are provided, do not add prefix\n          icon.includes(' ') ? icon : `${prefix}${icon}`,\n        ],\n        ...attrs.value,\n      })\n    }\n  },\n})\n"],"names":["VPIcon","defineComponent","props","imageLink","computed","isLinkHttp","isLinkAbsolute","withBase","attrs","styleObject","type","verticalAlign","size","sizing","attrsObject","keys","appendFontawesomePrefix","icon","prefix","h","iconType","rest"],"mappings":"sNAQO,MAAMA,EAASC,EAAgB,CACpC,KAAM,SAEN,MAAO,CAIL,KAAM,CACJ,KAAM,OACN,QAAS,SACX,EAKA,OAAQ,OAOR,KAAM,OAON,MAAO,OAOP,KAAM,CAAC,OAAQ,MAAM,EAOrB,cAAe,OASf,OAAQ,CACN,KAAM,OACN,QAAS,QACX,CACF,EAEA,MAAMC,EAAO,CACX,MAAMC,EAAYC,EAAS,IACzBF,EAAM,KACFG,EAAWH,EAAM,IAAI,EACnBA,EAAM,KACNI,EAAeJ,EAAM,IAAI,EACvBK,EAASL,EAAM,IAAI,EACnB,KACJ,IACN,EAEMM,EAAQJ,EAAS,IAAM,CAC3B,MAAMK,EAA6B,CAAA,EAC7B,CAAE,KAAAC,EAAM,cAAAC,EAAe,KAAAC,EAAM,OAAAC,CAAO,EAAIX,EACxCY,EAAuC,CAC3C,OAAAD,CACF,EAEA,OAAIX,EAAM,QAAOO,EAAY,MAAQP,EAAM,OACvCU,IACFH,EAAY,aAAa,EAAI,OAAO,MAAM,OAAOG,CAAI,CAAC,EACjDA,EACD,GAAGA,CAAI,MACTD,IAAeF,EAAY,uBAAuB,EAAIE,GAEtDD,IAAS,YACPG,IAAW,WAAUC,EAAY,MAAQZ,EAAM,MAAQ,OACvDW,IAAW,UAASC,EAAY,OAASZ,EAAM,MAAQ,QAGzDa,EAAKN,CAAW,EAAE,SAAQK,EAAY,MAAQL,GAE3CK,CACT,CAAC,EAEKE,EAA2BC,GAC/BA,EAAK,SAAS,KAAK,GAAK,QAAQ,KAAKA,CAAI,EAAIA,EAAO,MAAMA,CAAI,GAEhE,MAAO,IAAoB,CACzB,KAAM,CAAE,KAAAP,EAAM,KAAAO,EAAM,OAAAC,EAAS,GAAI,OAAAL,CAAO,EAAIX,EAE5C,GAAI,CAACe,EAAM,OAAO,KAElB,GAAId,EAAU,MACZ,OAAOgB,EAAE,MAAO,CACd,MAAS,UACT,IAAOhB,EAAU,MACjB,IAAO,GACP,cAAe,GACf,UAAW,GACX,GAAGK,EAAM,KACX,CAAC,EAGH,GAAIE,IAAS,UACX,OAAOS,EAAE,eAAgB,CACvB,IAAKF,EACL,MAAO,UAEP,KAAMA,EAAK,SAAS,GAAG,EAAIA,EAAO,GAAGC,CAAM,GAAGD,CAAI,GAClD,GAAGT,EAAM,KACX,CAAC,EAGH,GAAIE,IAAS,cAAe,CAC1B,KAAM,CAACU,EAAUC,CAAI,EAAIJ,EAAK,SAAS,GAAG,EACtCA,EAAK,MAAM,IAAK,CAAC,EACjB,CAAC,MAAOA,CAAI,EAEhB,OAAOE,EAAE,IAAK,CACZ,IAAKF,EACL,MAAO,CACL,UAEAG,EAAS,SAAW,EAChB,KAAKA,CAAQ,GACbJ,EAAwBI,CAAQ,EACpC,GAAGC,EAAK,MAAM,GAAG,EAAE,IAAIL,CAAuB,EAC9CH,IAAW,SAAW,GAAK,OAC7B,EACA,GAAGL,EAAM,KACX,CAAC,CACH,CAEA,OAAOW,EAAE,IAAK,CACZ,IAAKF,EACL,MAAO,CACL,UAEAA,EAAK,SAAS,GAAG,EAAIA,EAAO,GAAGC,CAAM,GAAGD,CAAI,EAC9C,EACA,GAAGT,EAAM,KACX,CAAC,CACH,CACF,CACF,CAAC"}