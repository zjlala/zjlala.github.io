{"version":3,"file":"index.js","sources":["../../src/node/logger.ts","../../src/node/getNoticeOptions.ts","../../src/node/prepareNoticeOptions.ts","../../src/node/noticePlugin.ts"],"sourcesContent":["import { Logger } from '@vuepress/helper'\n\nexport const PLUGIN_NAME = '@vuepress/plugin-notice'\n\nexport const logger = new Logger(PLUGIN_NAME)\n","import type { NoticeAttrOptions, NoticeOptions } from '../shared/index.js'\n\nexport const getNoticeOptions = (\n  options: NoticeOptions[] = [],\n): NoticeAttrOptions[] =>\n  options\n    .map(({ key, contentType, contentFile, ...item }) =>\n      'match' in item\n        ? {\n            ...item,\n            match: item.match.source,\n            noticeKey: key,\n          }\n        : { ...item, noticeKey: key },\n    )\n    .sort((a, b) =>\n      'match' in a\n        ? 'match' in b\n          ? b.match.localeCompare(a.match)\n          : -1\n        : 'match' in b\n          ? 1\n          : (b.path || '').localeCompare(a.path || ''),\n    )\n","import fs from 'node:fs/promises'\nimport type { FSWatcher } from 'chokidar'\nimport { watch } from 'chokidar'\nimport type { App } from 'vuepress'\nimport { path } from 'vuepress/utils'\nimport type { NoticeOptions } from '../shared/index.js'\nimport { getNoticeOptions } from './getNoticeOptions.js'\n\nconst HMR_CODE = `\nif (import.meta.webpackHot) {\n  import.meta.webpackHot.accept()\n  if (__VUE_HMR_RUNTIME__.updateNoticeOptions) {\n    __VUE_HMR_RUNTIME__.updateNoticeOptions(NOTICE_OPTIONS)\n  }\n}\n\nif (import.meta.hot) {\n  import.meta.hot.accept(({ NOTICE_OPTIONS }) => {\n    __VUE_HMR_RUNTIME__.updateNoticeOptions(NOTICE_OPTIONS)\n  })\n}\n`\n\nconst readFile = async (filepath: string): Promise<string> => {\n  try {\n    const content = await fs.readFile(filepath, 'utf-8')\n    return content\n  } catch {\n    return ''\n  }\n}\n\n// [filepath]: NoticeOptions\nconst noticeCache = new Map<string, NoticeOptions>()\n\nconst resolveNoticeItem = async (\n  app: App,\n  notice: NoticeOptions,\n): Promise<NoticeOptions> => {\n  // eslint-disable-next-line prefer-const\n  let { contentType = 'html', contentFile, content = '', ...item } = notice\n\n  if (contentFile) {\n    contentFile = path.resolve(contentFile)\n\n    if (noticeCache.has(contentFile)) {\n      return noticeCache.get(contentFile)!\n    }\n\n    contentType = contentFile.endsWith('.md') ? 'markdown' : 'html'\n    content = await readFile(contentFile)\n  }\n\n  if (contentType === 'markdown') {\n    content = app.markdown.render(content, {\n      filePath: contentFile,\n    })\n  }\n\n  const resolved: NoticeOptions = { content, ...item }\n\n  if (contentFile) {\n    noticeCache.set(contentFile, resolved)\n  }\n\n  return resolved\n}\n\nexport const prepareNoticeOptions = async (\n  app: App,\n  options: NoticeOptions[] = [],\n): Promise<void> => {\n  const noticeOptions: NoticeOptions[] = []\n\n  for (const item of options) {\n    noticeOptions.push(await resolveNoticeItem(app, item))\n  }\n\n  const noticeAttrOptions = getNoticeOptions(noticeOptions)\n\n  let content = `\\\nexport const NOTICE_OPTIONS = JSON.parse(${JSON.stringify(\n    JSON.stringify(noticeAttrOptions),\n  )})\n`\n  if (app.env.isDev) {\n    content += HMR_CODE\n  }\n\n  await app.writeTemp('internal/noticeOptions.js', content)\n}\n\nexport const watchNoticeOptions = (\n  app: App,\n  options: NoticeOptions[],\n): FSWatcher => {\n  const filepaths = options\n    .map(({ contentFile }) => contentFile)\n    .filter(Boolean) as string[]\n\n  const watcher = watch(filepaths, {\n    ignoreInitial: true,\n  })\n\n  const onChange = async (file: string): Promise<void> => {\n    const filepath = path.resolve(file)\n    const cached = noticeCache.get(filepath)\n\n    if (cached) {\n      const contentType = filepath.endsWith('.md') ? 'markdown' : 'html'\n      const content = await readFile(filepath)\n      cached.content =\n        contentType === 'markdown'\n          ? app.markdown.render(content, {\n              filePath: filepath,\n            })\n          : content\n    }\n\n    await prepareNoticeOptions(app, options)\n  }\n\n  watcher.on('change', (filepath: string) => {\n    void onChange(filepath)\n  })\n\n  return watcher\n}\n","import type { Plugin } from 'vuepress/core'\nimport { getDirname, path } from 'vuepress/utils'\nimport { PLUGIN_NAME, logger } from './logger.js'\nimport type { NoticePluginOptions } from './options.js'\nimport {\n  prepareNoticeOptions,\n  watchNoticeOptions,\n} from './prepareNoticeOptions.js'\n\nconst __dirname = import.meta.dirname || getDirname(import.meta.url)\n\n/**\n * VuePress notice plugin\n *\n * VuePress 通知插件\n *\n * @param options - Plugin options / 插件选项\n *\n * @example\n * ```ts\n * import { noticePlugin } from '@vuepress/plugin-notice'\n *\n * export default {\n *   plugins: [\n *     noticePlugin({\n *       config: [\n *         {\n *           path: '/',\n *           title: 'Notice Title',\n *           content: 'Notice Content',\n *           actions: [\n *             {\n *               text: 'Primary Action',\n *               link: 'https://example.com',\n *               type: 'primary',\n *             },\n *           ],\n *         },\n *       ],\n *     }),\n *   ],\n * }\n * ```\n */\nexport const noticePlugin =\n  (options: NoticePluginOptions): Plugin =>\n  (app) => {\n    if (app.env.isDebug) logger.info('Options', options)\n\n    return {\n      name: PLUGIN_NAME,\n\n      onPrepared: async () => {\n        await prepareNoticeOptions(app, options.config)\n      },\n\n      onWatched: (_, watchers) => {\n        watchers.push(watchNoticeOptions(app, options.config))\n      },\n\n      clientConfigFile: path.resolve(__dirname, '../client/config.js'),\n    }\n  }\n"],"names":["PLUGIN_NAME","logger","Logger","getNoticeOptions","options","key","contentType","contentFile","item","a","b","HMR_CODE","readFile","filepath","fs","noticeCache","resolveNoticeItem","app","notice","content","path","resolved","prepareNoticeOptions","noticeOptions","noticeAttrOptions","watchNoticeOptions","filepaths","watcher","watch","onChange","file","cached","__dirname","getDirname","noticePlugin","_","watchers"],"mappings":"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"}