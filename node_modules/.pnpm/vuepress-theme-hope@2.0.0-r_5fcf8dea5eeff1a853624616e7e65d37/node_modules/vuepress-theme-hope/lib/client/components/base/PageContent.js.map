{"version":3,"file":"PageContent.js","sourceRoot":"","sources":["../../../../src/client/components/base/PageContent.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,aAAa,EAAE,kBAAkB,EAAE,MAAM,yBAAyB,CAAC;AAE5E,OAAO,EAAE,eAAe,EAAE,CAAC,EAAE,gBAAgB,EAAE,MAAM,KAAK,CAAC;AAC3D,OAAO,EAAE,QAAQ,EAAE,MAAM,iBAAiB,CAAC;AAE3C,OAAO,UAAU,MAAM,wCAAwC,CAAC;AAChE,OAAO,eAAe,MAAM,6CAA6C,CAAC;AAC1E,OAAO,OAAO,MAAM,qCAAqC,CAAC;AAC1D,OAAO,SAAS,MAAM,uCAAuC,CAAC;AAC9D,OAAO,GAAG,MAAM,iCAAiC,CAAC;AAClD,OAAO,QAAQ,MAAM,sCAAsC,CAAC;AAC5D,OAAO,EAAE,WAAW,EAAE,MAAM,qCAAqC,CAAC;AAClE,OAAO,EAAE,OAAO,EAAE,MAAM,iCAAiC,CAAC;AAG1D,OAAO,qCAAqC,CAAC;AAE7C,eAAe,eAAe,CAAC;IAC7B,IAAI,EAAE,aAAa;IAEnB,KAAK,EAAE,MAaL;IAEF,KAAK,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE;QACrB,MAAM,EAAE,WAAW,EAAE,GAAG,OAAO,EAAE,CAAC;QAClC,MAAM,EAAE,UAAU,EAAE,GAAG,WAAW,EAAE,CAAC;QAErC,OAAO,GAAU,EAAE,CACjB,CAAC,CACC,MAAM,EACN,EAAE,EAAE,EAAE,cAAc,EAAE,KAAK,EAAE,SAAS,EAAE,EACxC,CAAC,CACC,kBAAkB,CAAC,cAAc,CAAC;YAChC,CAAC,CAAE,gBAAgB,CAAC,cAAc,CAAsB;YACxD,CAAC,CAAC,aAAa,EACjB,GAAG,EAAE,CAAC;YACJ,KAAK,CAAC,OAAO,EAAE,EAAE;YACjB,WAAW,CAAC,KAAK,CAAC,KAAK;gBACrB,CAAC,CAAC,CAAC,CACC,KAAK,EACL,EAAE,KAAK,EAAE,YAAY,EAAE,EACvB,CAAC,CAAC,KAAK,EAAE;oBACP,GAAG,EAAE,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC;oBACtC,GAAG,EAAE,EAAE;oBACP,SAAS,EAAE,EAAE;iBACd,CAAC,CACH;gBACH,CAAC,CAAC,IAAI;YACR,CAAC,CAAC,UAAU,CAAC;YACb,CAAC,CAAC,SAAS,CAAC;YACZ,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;YACnB,KAAK,CAAC,OAAO,EAAE,EAAE,IAAI,CAAC,CAAC,eAAe,EAAE,IAAI,EAAE,KAAK,CAAC;YACpD,CAAC,CAAC,QAAQ,CAAC;YACX,CAAC,CAAC,OAAO,CAAC;YACV,kBAAkB,CAAC,gBAAgB,CAAC;gBAClC,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE;oBACpC,QAAQ,EAAE,UAAU,CAAC,KAAK;iBAC3B,CAAC;gBACJ,CAAC,CAAC,IAAI;YACR,KAAK,CAAC,UAAU,EAAE,EAAE;SACrB,CACF,CACF,CAAC;IACN,CAAC;CACF,CAAC,CAAC","sourcesContent":["import type { Slot } from \"@vuepress/helper/client\";\nimport { RenderDefault, hasGlobalComponent } from \"@vuepress/helper/client\";\nimport type { ComponentOptions, SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, resolveComponent } from \"vue\";\nimport { withBase } from \"vuepress/client\";\n\nimport BreadCrumb from \"@theme-hope/components/base/BreadCrumb\";\nimport MarkdownContent from \"@theme-hope/components/base/MarkdownContent\";\nimport PageNav from \"@theme-hope/components/base/PageNav\";\nimport PageTitle from \"@theme-hope/components/base/PageTitle\";\nimport TOC from \"@theme-hope/components/base/TOC\";\nimport PageMeta from \"@theme-hope/components/info/PageMeta\";\nimport { useDarkMode } from \"@theme-hope/composables/useDarkMode\";\nimport { useData } from \"@theme-hope/composables/useData\";\nimport type { TocSlotData } from \"@theme-hope/typings/slots\";\n\nimport \"../../styles/base/page-content.scss\";\n\nexport default defineComponent({\n  name: \"PageContent\",\n\n  slots: Object as SlotsType<{\n    pageTop?: Slot;\n    pageBottom?: Slot;\n\n    // content\n    content?: Slot;\n    contentBefore?: Slot;\n    contentAfter?: Slot;\n\n    // toc\n    toc?: Slot<TocSlotData>;\n    tocBefore?: Slot;\n    tocAfter?: Slot;\n  }>,\n\n  setup(_props, { slots }) {\n    const { frontmatter } = useData();\n    const { isDarkMode } = useDarkMode();\n\n    return (): VNode =>\n      h(\n        \"main\",\n        { id: \"main-content\", class: \"vp-page\" },\n        h(\n          hasGlobalComponent(\"LocalEncrypt\")\n            ? (resolveComponent(\"LocalEncrypt\") as ComponentOptions)\n            : RenderDefault,\n          () => [\n            slots.pageTop?.(),\n            frontmatter.value.cover\n              ? h(\n                  \"div\",\n                  { class: \"page-cover\" },\n                  h(\"img\", {\n                    src: withBase(frontmatter.value.cover),\n                    alt: \"\",\n                    \"no-view\": \"\",\n                  }),\n                )\n              : null,\n            h(BreadCrumb),\n            h(PageTitle),\n            h(TOC, null, slots),\n            slots.content?.() ?? h(MarkdownContent, null, slots),\n            h(PageMeta),\n            h(PageNav),\n            hasGlobalComponent(\"CommentService\")\n              ? h(resolveComponent(\"CommentService\"), {\n                  darkmode: isDarkMode.value,\n                })\n              : null,\n            slots.pageBottom?.(),\n          ],\n        ),\n      );\n  },\n});\n"]}