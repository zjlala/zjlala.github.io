{"version":3,"file":"ThemeColorPicker.js","sourceRoot":"","sources":["../../../../src/client/components/appearance/ThemeColorPicker.ts"],"names":[],"mappings":"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","sourcesContent":["import type { PropType, VNode } from \"vue\";\nimport { computed, defineComponent, h, onMounted } from \"vue\";\n\nimport { useDarkMode } from \"@theme-hope/composables/useDarkMode\";\n\nimport \"../../styles/appearance/theme-color-picker.scss\";\n\nconst THEME_COLOR_KEY = \"VUEPRESS_THEME_COLOR\";\n\nexport default defineComponent({\n  name: \"ThemeColorPicker\",\n\n  props: {\n    /**\n     * Theme color picker config\n     *\n     * 主题色选择器配置\n     */\n    themeColors: {\n      type: Object as PropType<Record<string, string>>,\n      required: true,\n    },\n  },\n\n  setup(props) {\n    const { isDarkMode } = useDarkMode();\n\n    const activeThemeColors = computed(() => {\n      const themeColors = { ...props.themeColors };\n\n      for (const [name, color] of Object.entries(themeColors)) {\n        if (name.includes(\"light\")) {\n          if (isDarkMode.value) {\n            delete themeColors[name];\n          } else {\n            themeColors[name.replace(\"light-\", \"\")] = color;\n            delete themeColors[name];\n          }\n        }\n\n        if (name.includes(\"dark\")) {\n          if (isDarkMode.value) {\n            themeColors[name.replace(\"dark-\", \"\")] = color;\n            delete themeColors[name];\n          } else {\n            delete themeColors[name];\n          }\n        }\n      }\n\n      return Object.entries(themeColors).map(([name, color]) => ({\n        name,\n        color,\n      }));\n    });\n\n    const setThemeColor = (name = \"\"): void => {\n      const classes = document.documentElement.classList;\n      const colorNames = activeThemeColors.value.map(({ name }) => name);\n\n      if (!name) {\n        localStorage.removeItem(THEME_COLOR_KEY);\n        classes.remove(...colorNames);\n\n        return;\n      }\n\n      classes.remove(\n        ...colorNames.filter((themeColorClass) => themeColorClass !== name),\n      );\n\n      classes.add(name);\n      localStorage.setItem(THEME_COLOR_KEY, name);\n    };\n\n    onMounted(() => {\n      const theme = localStorage.getItem(THEME_COLOR_KEY);\n\n      if (theme) setThemeColor(theme);\n    });\n\n    return (): VNode =>\n      h(\"ul\", { class: \"vp-theme-color-picker\", id: \"theme-color-picker\" }, [\n        h(\n          \"li\",\n          h(\"span\", {\n            class: \"theme-color\",\n            onClick: () => {\n              setThemeColor();\n            },\n          }),\n        ),\n        activeThemeColors.value.map(({ name, color }) =>\n          h(\n            \"li\",\n            h(\"span\", {\n              style: { background: color },\n              onClick: () => {\n                setThemeColor(name);\n              },\n            }),\n          ),\n        ),\n      ]);\n  },\n});\n"]}