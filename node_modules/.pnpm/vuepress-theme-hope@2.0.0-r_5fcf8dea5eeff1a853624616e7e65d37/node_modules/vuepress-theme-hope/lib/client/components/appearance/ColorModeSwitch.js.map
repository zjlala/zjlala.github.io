{"version":3,"file":"ColorModeSwitch.js","sourceRoot":"","sources":["../../../../src/client/components/appearance/ColorModeSwitch.ts"],"names":[],"mappings":"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","sourcesContent":["import type { FunctionalComponent, VNode } from \"vue\";\nimport { defineComponent, h, nextTick } from \"vue\";\nimport { IconBase } from \"vuepress-shared/client\";\n\nimport type { DarkmodeStatus } from \"@theme-hope/composables/useDarkMode\";\nimport { useDarkMode } from \"@theme-hope/composables/useDarkMode\";\nimport { usePure } from \"@theme-hope/composables/usePure\";\n\nimport \"../../styles/appearance/color-mode-switch.scss\";\n\nconst AutoColorModeIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"auto\" }, () =>\n    h(\"path\", {\n      d: \"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z\",\n    }),\n  );\n\nAutoColorModeIcon.displayName = \"AutoColorModeIcon\";\n\nconst LightColorModeIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"light\" }, () =>\n    h(\"path\", {\n      d: \"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z\",\n    }),\n  );\n\nLightColorModeIcon.displayName = \"LightColorModeIcon\";\n\nconst DarkColorModeIcon: FunctionalComponent = () =>\n  h(IconBase, { name: \"dark\" }, () =>\n    h(\"path\", {\n      d: \"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z\",\n    }),\n  );\n\nDarkColorModeIcon.displayName = \"DarkColorModeIcon\";\n\nexport default defineComponent({\n  name: \"ColorModeSwitch\",\n\n  setup() {\n    const { config, isDarkMode, status } = useDarkMode();\n    const isPure = usePure();\n\n    const updateDarkmodeStatus = (): void => {\n      if (config.value === \"switch\")\n        status.value = (\n          {\n            light: \"dark\",\n            dark: \"auto\",\n            auto: \"light\",\n          } as Record<DarkmodeStatus, DarkmodeStatus>\n        )[status.value];\n      else status.value = status.value === \"light\" ? \"dark\" : \"light\";\n    };\n\n    const toggleDarkmode = async (event: MouseEvent): Promise<void> => {\n      const useViewTransition =\n        // @ts-expect-error: Providing backward compatibility\n        // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\n        document.startViewTransition &&\n        !window.matchMedia(\"(prefers-reduced-motion: reduce)\").matches &&\n        !isPure.value;\n\n      if (!useViewTransition) {\n        updateDarkmodeStatus();\n\n        return;\n      }\n\n      const x = event.clientX;\n      const y = event.clientY;\n\n      const endRadius = Math.hypot(\n        Math.max(x, innerWidth - x),\n        Math.max(y, innerHeight - y),\n      );\n\n      const oldStatus = isDarkMode.value;\n\n      const transition = document.startViewTransition(async () => {\n        updateDarkmodeStatus();\n        await nextTick();\n      });\n\n      await transition.ready;\n\n      if (isDarkMode.value !== oldStatus)\n        document.documentElement.animate(\n          {\n            clipPath: isDarkMode.value\n              ? [\n                  `circle(${endRadius}px at ${x}px ${y}px)`,\n                  `circle(0px at ${x}px ${y}px)`,\n                ]\n              : [\n                  `circle(0px at ${x}px ${y}px)`,\n                  `circle(${endRadius}px at ${x}px ${y}px)`,\n                ],\n          },\n          {\n            duration: 400,\n            pseudoElement: isDarkMode.value\n              ? \"::view-transition-old(root)\"\n              : \"::view-transition-new(root)\",\n          },\n        );\n    };\n\n    return (): VNode =>\n      h(\n        \"button\",\n        {\n          type: \"button\",\n          class: \"vp-color-mode-switch\",\n          id: \"color-mode-switch\",\n          onClick: toggleDarkmode,\n        },\n        [\n          h(AutoColorModeIcon, {\n            style: {\n              display: status.value === \"auto\" ? \"block\" : \"none\",\n            },\n          }),\n          h(DarkColorModeIcon, {\n            style: {\n              display: status.value === \"dark\" ? \"block\" : \"none\",\n            },\n          }),\n          h(LightColorModeIcon, {\n            style: {\n              display: status.value === \"light\" ? \"block\" : \"none\",\n            },\n          }),\n        ],\n      );\n  },\n});\n"]}