{"version":3,"file":"resolveLinkInfo.js","sourceRoot":"","sources":["../../../src/client/utils/resolveLinkInfo.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAI/C;;;GAGG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,IAAY,EACZ,UAAU,GAAG,KAAK,EAClB,WAAoB,EACH,EAAE;IACnB,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,YAAY,CAC3C,IAAI,EACJ,WAAW,CACZ,CAAC;IAEF,OAAO,QAAQ;QACb,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;QAC5B,CAAC,CAAC;YACE,IAAI,EACF,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI;YACvE,IAAI,EAAE,IAAI;YACV,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAC;AACR,CAAC,CAAC","sourcesContent":["import { resolveRoute } from \"vuepress/client\";\n\nimport type { AutoLinkOptions, PageInfoData } from \"../../shared/index.js\";\n\n/**\n * Resolve AutoLink props from string\n *\n */\nexport const resolveLinkInfo = (\n  item: string,\n  preferFull = false,\n  currentPath?: string,\n): AutoLinkOptions => {\n  const { meta, path, notFound } = resolveRoute<PageInfoData>(\n    item,\n    currentPath,\n  );\n\n  return notFound\n    ? { text: path, link: path }\n    : {\n        text:\n          !preferFull && meta.shortTitle ? meta.shortTitle : meta.title || path,\n        link: path,\n        icon: meta.icon,\n      };\n};\n"]}