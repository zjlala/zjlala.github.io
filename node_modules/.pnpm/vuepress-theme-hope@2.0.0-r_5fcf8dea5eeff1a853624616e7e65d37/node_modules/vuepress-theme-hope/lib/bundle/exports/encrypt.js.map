{"version":3,"file":"encrypt.js","sources":["../../../src/client/components/encrypt/PasswordModal.ts","../../../src/client/composables/encrypt/useEncryptConfig.ts","../../../src/client/composables/encrypt/useGlobalEncrypt.ts","../../../src/client/components/encrypt/GlobalEncrypt.ts","../../../src/client/utils/encrypt/isTokenMatched.ts","../../../src/client/composables/encrypt/usePathEncrypt.ts","../../../src/client/components/encrypt/LocalEncrypt.ts"],"sourcesContent":["import type { VNode } from \"vue\";\nimport { computed, defineComponent, h, nextTick, ref } from \"vue\";\n\nimport PageTitle from \"@theme-hope/components/base/PageTitle\";\nimport LockIcon from \"@theme-hope/components/encrypt/LockIcon\";\nimport { useData } from \"@theme-hope/composables/useData\";\n\nimport \"../../styles/encrypt/password-modal.scss\";\n\nexport default defineComponent({\n  name: \"PasswordModal\",\n\n  props: {\n    /**\n     * Password hint\n     */\n    hint: String,\n\n    /**\n     * Whether is fullscreen\n     *\n     * 是否是全屏\n     */\n    full: Boolean,\n\n    /**\n     * Whether to show title\n     *\n     * 是否显示标题\n     */\n    showTitle: Boolean,\n  },\n\n  emits: [\"verify\"],\n\n  setup(props, { emit }) {\n    const { frontmatter, themeLocale } = useData();\n    const password = ref(\"\");\n    const hasTried = ref(false);\n    const remember = ref(false);\n\n    const encryptLocale = computed(() => themeLocale.value.encryptLocales);\n\n    let hintHandler: number | null = null;\n\n    const verify = (): void => {\n      // Clear previous handler\n      if (hintHandler) clearTimeout(hintHandler);\n      hasTried.value = false;\n\n      emit(\"verify\", password.value, remember.value);\n\n      void nextTick().then(() => {\n        hasTried.value = true;\n\n        hintHandler = setTimeout(() => {\n          hasTried.value = false;\n        }, 1000) as unknown as number;\n      });\n    };\n\n    return (): VNode =>\n      h(\n        \"div\",\n        {\n          class: [\n            \"vp-decrypt-layer\",\n            { expand: props.full || frontmatter.value.home },\n          ],\n        },\n        [\n          props.showTitle ? h(PageTitle) : null,\n          h(\"div\", { class: \"vp-decrypt-modal\" }, [\n            h(\n              \"div\",\n              { class: [\"vp-decrypt-hint\", { tried: hasTried.value }] },\n              hasTried.value\n                ? encryptLocale.value.errorHint\n                : h(LockIcon, { \"aria-label\": encryptLocale.value.iconLabel }),\n            ),\n            props.hint\n              ? h(\"div\", { class: \"vp-decrypt-hint\" }, props.hint)\n              : null,\n            h(\"div\", { class: \"vp-decrypt-input\" }, [\n              h(\"input\", {\n                type: \"password\",\n                value: password.value,\n                placeholder: encryptLocale.value.placeholder,\n                onInput: ({ target }: InputEvent) => {\n                  password.value = (target as HTMLInputElement).value;\n                },\n                onKeydown: ({ key }: KeyboardEvent) => {\n                  if (key === \"Enter\") verify();\n                },\n              }),\n            ]),\n            h(\"div\", { class: \"vp-remember-password\" }, [\n              h(\"input\", {\n                id: \"remember-password\",\n                type: \"checkbox\",\n                value: remember.value,\n                onChange: () => {\n                  remember.value = !remember.value;\n                },\n              }),\n              h(\n                \"label\",\n                { for: \"remember-password\" },\n                encryptLocale.value.remember,\n              ),\n            ]),\n            h(\n              \"button\",\n              {\n                type: \"button\",\n                class: \"vp-decrypt-submit\",\n                onClick: () => {\n                  verify();\n                },\n              },\n              \"OK\",\n            ),\n          ]),\n        ],\n      );\n  },\n});\n","import type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport { useTheme } from \"@theme-hope/composables/useTheme\";\n\nimport type { EncryptConfig } from \"../../../shared/index.js\";\n\nexport const useEncryptConfig = (): ComputedRef<EncryptConfig> => {\n  const theme = useTheme();\n\n  return computed(() => theme.value.encrypt);\n};\n","import { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport { compareSync } from \"bcrypt-ts/browser\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\n\nimport type { EncryptStatus } from \"@theme-hope/composables/encrypt/typings\";\nimport { useEncryptConfig } from \"@theme-hope/composables/encrypt/useEncryptConfig\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_GLOBAL_TOKEN\";\n\nexport interface GlobalEncrypt {\n  status: ComputedRef<EncryptStatus>;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const useGlobalEncrypt = (): GlobalEncrypt => {\n  const encryptData = useEncryptConfig();\n\n  const storageToken = useStorage(STORAGE_KEY, \"\");\n  const sessionToken = useSessionStorage(STORAGE_KEY, \"\");\n\n  const status = computed(() => {\n    const { global = false, admin } = encryptData.value;\n\n    // Is globally encrypted\n    const isEncrypted = global && Boolean(admin?.tokens.length);\n\n    const isLocked =\n      // Valid token exists\n      isEncrypted\n        ? storageToken.value\n          ? // None of the token matches\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            encryptData.value.admin!.tokens.every(\n              (hash) => !compareSync(storageToken.value, hash),\n            )\n          : // None of the token matches\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            encryptData.value.admin!.tokens.every(\n              (hash) => !compareSync(sessionToken.value, hash),\n            )\n        : false;\n\n    return {\n      isEncrypted,\n      isLocked,\n      hint: admin?.hint ?? \"\",\n    };\n  });\n\n  const validate = (inputToken: string, keep = false): void => {\n    (keep ? storageToken : sessionToken).value = inputToken;\n  };\n\n  return {\n    status,\n    validate,\n  };\n};\n","import type { RequiredSlot } from \"@vuepress/helper/client\";\nimport type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\n\nimport MainFadeInUpTransition from \"@theme-hope/components/base/MainFadeInUpTransition\";\nimport PasswordModal from \"@theme-hope/components/encrypt/PasswordModal\";\nimport { useGlobalEncrypt } from \"@theme-hope/composables/encrypt/useGlobalEncrypt\";\n\nexport default defineComponent({\n  name: \"GlobalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: RequiredSlot;\n  }>,\n\n  setup(_props, { slots }) {\n    const { status, validate } = useGlobalEncrypt();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode => {\n      const { isEncrypted, isLocked, hint } = status.value;\n\n      return h(MainFadeInUpTransition, () =>\n        isEncrypted\n          ? isMounted.value\n            ? isLocked\n              ? h(PasswordModal, {\n                  full: true,\n                  hint,\n                  onVerify: validate,\n                })\n              : slots.default()\n            : null\n          : slots.default(),\n      );\n    };\n  },\n});\n","import { compareSync } from \"bcrypt-ts/browser\";\n\nexport const isTokenMatched = (token = \"\", hash: string): boolean =>\n  Boolean(token) && compareSync(token, hash);\n","import { isPlainObject, keys, startsWith } from \"@vuepress/helper/client\";\nimport { useSessionStorage, useStorage } from \"@vueuse/core\";\nimport type { ComputedRef } from \"vue\";\nimport { computed } from \"vue\";\nimport { usePage } from \"vuepress/client\";\n\nimport type { EncryptStatus } from \"@theme-hope/composables/encrypt/typings\";\nimport { useEncryptConfig } from \"@theme-hope/composables/encrypt/useEncryptConfig\";\nimport { isTokenMatched } from \"@theme-hope/utils/encrypt/isTokenMatched\";\n\nconst STORAGE_KEY = \"VUEPRESS_HOPE_PATH_TOKEN\";\n\nexport interface PathEncrypt {\n  status: ComputedRef<EncryptStatus>;\n  getStatus: (path: string) => EncryptStatus;\n  validate: (token: string, keep?: boolean) => void;\n}\n\nexport const usePathEncrypt = (): PathEncrypt => {\n  const page = usePage();\n  const encryptData = useEncryptConfig();\n\n  const localTokenConfig = useStorage<Record<string, string>>(STORAGE_KEY, {});\n  const sessionTokenConfig = useSessionStorage<Record<string, string>>(\n    STORAGE_KEY,\n    {},\n  );\n\n  const getPathMatchedKeys = (path: string): string[] =>\n    isPlainObject(encryptData.value.config)\n      ? keys(encryptData.value.config)\n          .filter((key) => startsWith(decodeURI(path), key))\n          .sort((a, b) => b.length - a.length)\n      : [];\n\n  const getStatus = (path: string): EncryptStatus => {\n    const { config = {} } = encryptData.value;\n\n    const matchedKeys = getPathMatchedKeys(path);\n\n    if (matchedKeys.length > 0) {\n      const firstKeyWithHint = matchedKeys.find((key) => config[key].hint);\n\n      return {\n        isEncrypted: true,\n        isLocked: matchedKeys.some(\n          (key) =>\n            (localTokenConfig.value[key]\n              ? config[key].tokens.every(\n                  (token) =>\n                    !isTokenMatched(localTokenConfig.value[key], token),\n                )\n              : true) &&\n            (sessionTokenConfig.value[key]\n              ? config[key].tokens.every(\n                  (token) =>\n                    !isTokenMatched(sessionTokenConfig.value[key], token),\n                )\n              : true),\n        ),\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        hint: firstKeyWithHint ? config[firstKeyWithHint].hint! : \"\",\n      };\n    }\n\n    return {\n      isEncrypted: false,\n      isLocked: false,\n      hint: \"\",\n    };\n  };\n\n  const status = computed(() => getStatus(page.value.path));\n\n  const validate = (inputToken: string, keep = false): void => {\n    const { config = {} } = encryptData.value;\n    const matchedKeys = getPathMatchedKeys(page.value.path);\n\n    // Some of the tokens matches\n    for (const hitKey of matchedKeys)\n      if (\n        config[hitKey].tokens.some((token) => isTokenMatched(inputToken, token))\n      ) {\n        (keep ? localTokenConfig : sessionTokenConfig).value[hitKey] =\n          inputToken;\n\n        break;\n      }\n  };\n\n  return {\n    status,\n    getStatus,\n    validate,\n  };\n};\n","import type { RequiredSlot } from \"@vuepress/helper/client\";\nimport type { SlotsType, VNode } from \"vue\";\nimport { defineComponent, h, onMounted, ref } from \"vue\";\n\nimport PasswordModal from \"@theme-hope/components/encrypt/PasswordModal\";\nimport { usePathEncrypt } from \"@theme-hope/composables/encrypt/usePathEncrypt\";\n\nexport default defineComponent({\n  name: \"LocalEncrypt\",\n\n  slots: Object as SlotsType<{\n    default: RequiredSlot;\n  }>,\n\n  setup(_props, { slots }) {\n    const { status, validate } = usePathEncrypt();\n\n    const isMounted = ref(false);\n\n    onMounted(() => {\n      isMounted.value = true;\n    });\n\n    return (): VNode[] | VNode | string | null => {\n      const { isEncrypted, isLocked, hint } = status.value;\n\n      return isEncrypted\n        ? isMounted.value\n          ? isLocked\n            ? h(PasswordModal, {\n                showTitle: true,\n                full: true,\n                hint,\n                onVerify: validate,\n              })\n            : slots.default()\n          : null\n        : slots.default();\n    };\n  },\n});\n"],"names":["i","defineComponent","props","emit","frontmatter","themeLocale","useData","password","ref","hasTried","remember","encryptLocale","computed","hintHandler","verify","nextTick","h","PageTitle","LockIcon","target","key","useEncryptConfig","theme","useTheme","STORAGE_KEY","useGlobalEncrypt","encryptData","storageToken","useStorage","sessionToken","useSessionStorage","global","admin","isEncrypted","isLocked","hash","compareSync","inputToken","keep","GlobalEncrypt","_props","slots","status","validate","isMounted","onMounted","hint","MainFadeInUpTransition","PasswordModal","isTokenMatched","token","usePathEncrypt","page","usePage","localTokenConfig","sessionTokenConfig","getPathMatchedKeys","path","isPlainObject","keys","startsWith","a","b","getStatus","config","matchedKeys","firstKeyWithHint","hitKey","LocalEncrypt"],"mappings":"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"}