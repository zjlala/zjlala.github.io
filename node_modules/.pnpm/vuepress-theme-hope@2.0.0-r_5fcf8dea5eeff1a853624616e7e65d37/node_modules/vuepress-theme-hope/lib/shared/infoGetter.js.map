{"version":3,"file":"infoGetter.js","sourceRoot":"","sources":["../../src/shared/infoGetter.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,yBAAyB,CAAC;AAI3E,MAAM,YAAY,GAAG,CAAC,MAAe,EAAwB,EAAE,CAC7D,aAAa,CAAC,MAAM,CAAC,IAAI,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAEjD,MAAM,CAAC,MAAM,SAAS,GAAG,CACvB,MAAkC,EAClC,UAAU,GAAG,KAAK,EACJ,EAAE;IAChB,IAAI,MAAM,EAAE,CAAC;QACX,IAAI,OAAO,CAAC,MAAM,CAAC;YACjB,OAAO,MAAM;iBACV,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CACZ,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CACnE;iBACA,MAAM,CAAC,CAAC,IAAI,EAAsB,EAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC;QAEzD,IAAI,QAAQ,CAAC,MAAM,CAAC;YAAE,OAAO,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;QAEhD,IAAI,YAAY,CAAC,MAAM,CAAC;YAAE,OAAO,CAAC,MAAM,CAAC,CAAC;QAE1C,sCAAsC;QACtC,OAAO,CAAC,KAAK,CACX,yEACE,UAAU,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,SACpB,yBAAyB,EACzB,MAAM,CACP,CAAC;QAEF,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,KAAoC,EACpC,UAAkB,EACR,EAAE;IACZ,IAAI,KAAK,EAAE,CAAC;QACV,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC;YAAE,OAAO,KAAK,CAAC;QAC1D,IAAI,QAAQ,CAAC,KAAK,CAAC;YAAE,OAAO,CAAC,KAAK,CAAC,CAAC;QAEpC,sCAAsC;QACtC,OAAO,CAAC,KAAK,CACX,UAAU,UAAU,mDAAmD,EACvE,KAAK,CACN,CAAC;IACJ,CAAC;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,QAAuC,EAC7B,EAAE,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAEpD,MAAM,CAAC,MAAM,MAAM,GAAG,CAAC,GAAkC,EAAY,EAAE,CACrE,cAAc,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC","sourcesContent":["import { isArray, isPlainObject, isString } from \"@vuepress/helper/shared\";\n\nimport type { Author, AuthorInfo } from \"./author.js\";\n\nconst isAuthorInfo = (author: unknown): author is AuthorInfo =>\n  isPlainObject(author) && isString(author.name);\n\nexport const getAuthor = (\n  author: Author | false | undefined,\n  canDisable = false,\n): AuthorInfo[] => {\n  if (author) {\n    if (isArray(author))\n      return author\n        .map((item) =>\n          isString(item) ? { name: item } : isAuthorInfo(item) ? item : null,\n        )\n        .filter((item): item is AuthorInfo => item !== null);\n\n    if (isString(author)) return [{ name: author }];\n\n    if (isAuthorInfo(author)) return [author];\n\n    // eslint-disable-next-line no-console\n    console.error(\n      `Expect \"author\" to be \\`AuthorInfo[] | AuthorInfo | string[] | string ${\n        canDisable ? \"\" : \"| false\"\n      } | undefined\\`, but got`,\n      author,\n    );\n\n    return [];\n  }\n\n  return [];\n};\n\nexport const getStringArray = (\n  value: string[] | string | undefined,\n  optionName: string,\n): string[] => {\n  if (value) {\n    if (isArray(value) && value.every(isString)) return value;\n    if (isString(value)) return [value];\n\n    // eslint-disable-next-line no-console\n    console.error(\n      `Expect ${optionName} to be \\`string[] | string | undefined\\`, but got`,\n      value,\n    );\n  }\n\n  return [];\n};\n\nexport const getCategory = (\n  category: string[] | string | undefined,\n): string[] => getStringArray(category, \"category\");\n\nexport const getTag = (tag: string[] | string | undefined): string[] =>\n  getStringArray(tag, \"tag\");\n"]}