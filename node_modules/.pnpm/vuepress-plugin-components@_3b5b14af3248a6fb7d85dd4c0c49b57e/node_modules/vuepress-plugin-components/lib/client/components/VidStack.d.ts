import * as vue from 'vue';
import { PropType, VNode } from 'vue';
import { PlayerSrc, TextTrackInit, DefaultLayoutProps } from 'vidstack';
import { VidstackPlayerConfig } from 'vidstack/global/player';

declare const _default: vue.DefineComponent<vue.ExtractPropTypes<{
    /**
     * sources
     */
    src: {
        type: PropType<PlayerSrc>;
        required: true;
    };
    /**
     * tracks
     */
    tracks: {
        type: PropType<TextTrackInit[]>;
        default: () => never[];
    };
    /**
     * poster
     */
    poster: StringConstructor;
    /**
     * thumbnails
     */
    thumbnails: StringConstructor;
    /**
     * title
     */
    title: StringConstructor;
    /**
     * VidStack player options
     */
    player: {
        type: PropType<Omit<VidstackPlayerConfig, "target" | "src" | "sources" | "tracks" | "title" | "poster">>;
    };
    /**
     * VidStack layout options
     */
    layout: {
        type: PropType<Partial<DefaultLayoutProps>>;
    };
    /**
     * Dark mode
     */
    darkmode: BooleanConstructor;
}>, () => VNode, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<vue.ExtractPropTypes<{
    /**
     * sources
     */
    src: {
        type: PropType<PlayerSrc>;
        required: true;
    };
    /**
     * tracks
     */
    tracks: {
        type: PropType<TextTrackInit[]>;
        default: () => never[];
    };
    /**
     * poster
     */
    poster: StringConstructor;
    /**
     * thumbnails
     */
    thumbnails: StringConstructor;
    /**
     * title
     */
    title: StringConstructor;
    /**
     * VidStack player options
     */
    player: {
        type: PropType<Omit<VidstackPlayerConfig, "target" | "src" | "sources" | "tracks" | "title" | "poster">>;
    };
    /**
     * VidStack layout options
     */
    layout: {
        type: PropType<Partial<DefaultLayoutProps>>;
    };
    /**
     * Dark mode
     */
    darkmode: BooleanConstructor;
}>> & Readonly<{}>, {
    tracks: TextTrackInit[];
    darkmode: boolean;
}, {}, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;

export { _default as default };
