import * as vue from 'vue';
import { PropType, VNode } from 'vue';

declare const _default: vue.DefineComponent<vue.ExtractPropTypes<{
    /**
     * CodePen link
     *
     * CodePen 链接
     */
    link: StringConstructor;
    /**
     * CodePen username
     *
     * CodePen 用户名
     */
    user: StringConstructor;
    /**
     * CodePen hash
     *
     * CodePen hash
     */
    slugHash: StringConstructor;
    /**
     * CodePen title
     *
     * CodePen 标题
     */
    title: StringConstructor;
    /**
     * CodePen height
     *
     * CodePen 高度
     */
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    /**
     * CodePen theme
     *
     * CodePen 主题
     */
    theme: {
        type: PropType<"default" | "light" | "dark">;
        default: string;
    };
    /**
     * CodePen default tab
     *
     * CodePen 默认标签
     */
    defaultTab: {
        type: PropType<string[]>;
        default: () => string[];
    };
    /**
     * CodePen loading status
     *
     * CodePen 加载状态
     */
    status: {
        type: PropType<"autoload" | "preview" | "clicktorun">;
        default: string;
    };
}>, () => VNode, {}, {}, {}, vue.ComponentOptionsMixin, vue.ComponentOptionsMixin, {}, string, vue.PublicProps, Readonly<vue.ExtractPropTypes<{
    /**
     * CodePen link
     *
     * CodePen 链接
     */
    link: StringConstructor;
    /**
     * CodePen username
     *
     * CodePen 用户名
     */
    user: StringConstructor;
    /**
     * CodePen hash
     *
     * CodePen hash
     */
    slugHash: StringConstructor;
    /**
     * CodePen title
     *
     * CodePen 标题
     */
    title: StringConstructor;
    /**
     * CodePen height
     *
     * CodePen 高度
     */
    height: {
        type: (StringConstructor | NumberConstructor)[];
        default: number;
    };
    /**
     * CodePen theme
     *
     * CodePen 主题
     */
    theme: {
        type: PropType<"default" | "light" | "dark">;
        default: string;
    };
    /**
     * CodePen default tab
     *
     * CodePen 默认标签
     */
    defaultTab: {
        type: PropType<string[]>;
        default: () => string[];
    };
    /**
     * CodePen loading status
     *
     * CodePen 加载状态
     */
    status: {
        type: PropType<"autoload" | "preview" | "clicktorun">;
        default: string;
    };
}>> & Readonly<{}>, {
    height: string | number;
    theme: "default" | "light" | "dark";
    defaultTab: string[];
    status: "autoload" | "preview" | "clicktorun";
}, {}, {}, {}, string, vue.ComponentProvideOptions, true, {}, any>;

export { _default as default };
